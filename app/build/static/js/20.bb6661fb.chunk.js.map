{"version":3,"sources":["assets/logo_3.png","components/Menu/index.js","services/api.js","components/MinMax/TabelaResultados/index.js","components/MinMax/ModalExportarBinxBling/index.js","components/MinMax/ModalInfo/index.js","pages/MinMax/index.js"],"names":["Menu","props","useHistory","useState","vendasDrop","setVendasDrop","comprasDrop","setComprasDrop","expedicaoDrop","setExpedicaoDrop","relatoriosDrop","setRelatoriosDrop","cadastrosDrop","setCadastrosDrops","userDrop","setUserDrop","setVendasActive","comprasActive","setComprasActive","expedicaoActive","setExpedicaoActive","relatoriosActive","setRelatoriosActive","cadastrosActive","setCadastrosActive","carregandoLogout","setCarregandoLogout","userName","setUserName","userContext","useContext","AuthContext","useEffect","pathname","window","location","includes","console","log","attributes","Navbar","bg","variant","expand","sticky","Container","fluid","to","className","Brand","src","NavbarLogo","width","alt","Toggle","logged","Collapse","Nav","navbarScroll","NavDropdown","title","show","onMouseEnter","onMouseLeave","Item","as","Link","href","active","size","onClick","Auth","signOut","then","data","reload","catch","error","Spinner","animation","baseURL","process","REACT_APP_ENVIROMENT","api","axios","create","TabelaResultados","resultados","setResultados","carregado","selectOptions","options","alwaysShowAllBtns","showTotal","disablePageTitle","paginationTotalRenderer","from","firstPageText","prePageText","nextPageText","lastPageText","nextPageTitle","prePageTitle","firstPageTitle","lastPageTitle","columns","dataField","text","style","textAlign","headerStyle","filter","textFilter","placeholder","fontSize","formatter","cell","selectFilter","sort","bootstrap4","keyField","condensed","hover","bordered","filterFactory","filterPosition","pagination","paginationFactory","ModalExportarBinxBling","showExport","handleClose","setShowExport","objExportar","exportando","setExportando","exportar","a","post","response","Modal","onHide","centered","Header","closeButton","Title","Body","Alert","Footer","Button","disabled","ModalInfo","showInfo","setShowInfo","estatisticas","MinMax","loadingAnalise","setLoadingAnalise","analiseCompleta","setAnaliseCompleta","semCategoria","setSemCategoria","acessorios","setAcessorios","componentes","setComponentes","ferramentas","setFerramentas","motores","setMotores","maker","setMaker","semVenda","setSemVenda","setEstatisticas","setExportar","realizarAnalise","get","exportarExcel","responseType","blob","Blob","type","download","message","Row","Card","Subtitle","Col","block","role","Tabs","defaultActiveKey","id","Tab","eventKey"],"mappings":"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","file":"static/js/20.bb6661fb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo_3.edbd2b14.png\";","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Auth } from \"../../services/amplify\";\r\n\r\nimport { Navbar, Nav, NavDropdown, Container, Spinner } from \"react-bootstrap\";\r\nimport { BsPersonCircle } from \"react-icons/bs\";\r\n\r\nimport NavbarLogo from \"../../assets/logo_3.png\";\r\n\r\nimport AuthContext from \"../../contexts/auth\";\r\n\r\nimport \"./styles.css\";\r\n\r\nfunction Menu(props) {\r\n  const history = useHistory();\r\n\r\n  const [vendasDrop, setVendasDrop] = useState(false);\r\n  const [comprasDrop, setComprasDrop] = useState(false);\r\n  const [expedicaoDrop, setExpedicaoDrop] = useState(false);\r\n  const [relatoriosDrop, setRelatoriosDrop] = useState(false);\r\n  const [cadastrosDrop, setCadastrosDrops] = useState(false);\r\n  const [userDrop, setUserDrop] = useState(false);\r\n\r\n  const [vendasActive, setVendasActive] = useState(false);\r\n  const [comprasActive, setComprasActive] = useState(false);\r\n  const [expedicaoActive, setExpedicaoActive] = useState(false);\r\n  const [relatoriosActive, setRelatoriosActive] = useState(false);\r\n  const [cadastrosActive, setCadastrosActive] = useState(false);\r\n\r\n  const [carregandoLogout, setCarregandoLogout] = useState(false);\r\n\r\n  const [userName, setUserName] = useState(\"\");\r\n\r\n  const userContext = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    const pathname = window.location.pathname;\r\n\r\n    if (pathname.includes(\"vendas\")) setVendasActive(true);\r\n    if (pathname.includes(\"compras\")) setComprasActive(true);\r\n    if (pathname.includes(\"aprovarpedidos\")) setExpedicaoActive(true);\r\n    if (pathname.includes(\"relatorio\")) setRelatoriosActive(true);\r\n    if (pathname.includes(\"prospeccao\")) setVendasActive(true);\r\n    if (pathname.includes(\"produtos\")) setCadastrosActive(true);\r\n\r\n    // Debug\r\n    // Exibir o objeto recebido via contexto\r\n    console.log(userContext);\r\n\r\n    if (userContext) {\r\n      setUserName(userContext.attributes[\"custom:displayname\"]);\r\n    } else {\r\n      setUserName(\"Convidado\");\r\n    }\r\n  }, []);\r\n\r\n  const signOut = () => {\r\n    setCarregandoLogout(true);\r\n\r\n    Auth.signOut()\r\n      .then((data) => {\r\n        window.location.reload();\r\n      })\r\n      .catch((error) => {\r\n        setCarregandoLogout(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" sticky=\"top\">\r\n        <Container fluid>\r\n          <Link to=\"/\" className=\"m-0 p-0\">\r\n            <Navbar.Brand className=\"\">\r\n              <img src={NavbarLogo} width=\"70\" alt=\"Logo Binx\" />\r\n            </Navbar.Brand>\r\n          </Link>\r\n\r\n          <Navbar.Toggle />\r\n\r\n          {props.logged && (\r\n            <>\r\n              <Navbar.Collapse>\r\n                <Nav className=\"mr-auto\" navbarScroll>\r\n                  {/* Dropdown de Vendas */}\r\n                  <NavDropdown\r\n                    title=\"Vendas\"\r\n                    show={vendasDrop}\r\n                    onMouseEnter={() => setVendasDrop(true)}\r\n                    onMouseLeave={() => setVendasDrop(false)}\r\n                  >\r\n                    <NavDropdown.Item as={Link} href=\"/fretevendas\" to=\"/fretevendas\">\r\n                      Cálculo de Frete\r\n                    </NavDropdown.Item>\r\n                    <NavDropdown.Item as={Link} href=\"/calculomargem\" to=\"/calculomargem\">\r\n                      Cálculo de Margem\r\n                    </NavDropdown.Item>\r\n                    <NavDropdown.Item as={Link} href=\"/prospeccao\" to=\"/prospeccao\">\r\n                      Prospecção de Clientes\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n\r\n                  {/* Dropdown de Compras */}\r\n                  <NavDropdown\r\n                    title=\"Compras\"\r\n                    show={comprasDrop}\r\n                    onMouseEnter={() => setComprasDrop(!comprasDrop)}\r\n                    onMouseLeave={() => setComprasDrop(false)}\r\n                    active={comprasActive}\r\n                  >\r\n                    <NavDropdown.Item as={Link} href=\"/dashcompras\" to=\"/dashcompras\">\r\n                      Dashboard de Compras\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n\r\n                  {/* Dropdown da Expedição */}\r\n                  <NavDropdown\r\n                    title=\"Expedição\"\r\n                    show={expedicaoDrop}\r\n                    onMouseEnter={() => setExpedicaoDrop(!expedicaoDrop)}\r\n                    onMouseLeave={() => setExpedicaoDrop(false)}\r\n                    active={expedicaoActive}\r\n                  >\r\n                    <NavDropdown.Item href=\"expedicao/aprovarpedidos\" to=\"/aprovarpedidos\">\r\n                      Aprovação de Pedidos\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n\r\n                  {/* Dropdown de Relatórios */}\r\n                  <NavDropdown\r\n                    title=\"Relatórios\"\r\n                    show={relatoriosDrop}\r\n                    onMouseEnter={() => setRelatoriosDrop(!relatoriosDrop)}\r\n                    onMouseLeave={() => setRelatoriosDrop(false)}\r\n                    active={relatoriosActive}\r\n                  >\r\n                    <NavDropdown.Item href=\"/relatoriominmax\" to=\"/relatoriominmax\">\r\n                      Estoque Mínimo e Máximo\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n\r\n                  {/* Dropdown da Cadastros */}\r\n                  <NavDropdown\r\n                    title=\"Cadastros\"\r\n                    show={cadastrosDrop}\r\n                    onMouseEnter={() => setCadastrosDrops(!cadastrosDrop)}\r\n                    onMouseLeave={() => setCadastrosDrops(false)}\r\n                    active={cadastrosActive}\r\n                  >\r\n                    <NavDropdown.Item href=\"/produtos\" to=\"/produtos\">\r\n                      Produtos\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n                </Nav>\r\n              </Navbar.Collapse>\r\n\r\n              <Navbar.Collapse className=\"justify-content-end\">\r\n                <Nav className=\"mr-auto\" navbarScroll>\r\n                  <BsPersonCircle />\r\n                  <NavDropdown\r\n                    className=\"dropdown-user\"\r\n                    title={\r\n                      <div className=\"user-dropdown-div \">\r\n                        <div className=\"m-0\">\r\n                          <BsPersonCircle size={25}/>\r\n                        </div>\r\n                        <div className=\"user-name\">{userName}</div>\r\n                      </div>\r\n                    }\r\n                    show={userDrop}\r\n                    onMouseEnter={() => setUserDrop(true)}\r\n                    onMouseLeave={() => setUserDrop(false)}\r\n                  >\r\n                    <NavDropdown.Item onClick={signOut}>\r\n                      {!carregandoLogout && <>Sair</>}\r\n                      {carregandoLogout && (\r\n                        <div className=\"user-menu-sair\">\r\n                          <p>Sair</p>\r\n                          <Spinner animation=\"grow\" size=\"sm\" />\r\n                        </div>\r\n                      )}\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n                </Nav>\r\n              </Navbar.Collapse>\r\n            </>\r\n          )}\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Menu;\r\n","import axios from \"axios\";\r\n\r\n// Para utilização com certificado SSL inválido\r\n// import https from \"https\";\r\n// const api = axios.create({\r\n//   baseURL: \"https://api.binx.com.br/api\",\r\n//   httpsAgent: new https.Agent({\r\n//     rejectUnauthorized: false,\r\n//   }),\r\n// });\r\n\r\nconst enviroment = process.env.REACT_APP_ENVIROMENT || \"development\";\r\n\r\nlet baseURL =\r\n  enviroment === \"development\"\r\n    ? \"http://localhost:4005/api\"\r\n    : \"https://api.binx.com.br/api\";\r\n\r\nconst api = axios.create({ baseURL: baseURL });\r\n\r\nexport default api;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Table } from \"react-bootstrap\";\r\n\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport \"react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css\";\r\n\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport filterFactory, {\r\n  textFilter,\r\n  selectFilter,\r\n  numberFilter,\r\n  customFilter,\r\n  FILTER_TYPES,\r\n} from \"react-bootstrap-table2-filter\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nimport \"./styles.css\";\r\n\r\nfunction TabelaResultados(props) {\r\n  const [resultados, setResultados] = useState([]);\r\n\r\n  const [carregado, setCarregado] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setResultados(props.resultados);\r\n  }, props.resultados);\r\n\r\n  // useEffect(() => {\r\n  //   setCarregado(true);\r\n  // }, resultados);\r\n\r\n  const selectOptions = {\r\n    \"Sem Curva\": \"Sem Curva\",\r\n    \"Curva A\": \"Curva A\",\r\n    \"Curva B\": \"Curva B\",\r\n    \"Curva C\": \"Curva C\",\r\n  };\r\n\r\n  const obsContador = () => {\r\n    return (\r\n      <>\r\n        <p>OI!</p>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const customTotal = (from, to, size) => (\r\n    <span className=\"react-bootstrap-table-pagination-total mx-3\">\r\n      {size} Resultados\r\n    </span>\r\n  );\r\n\r\n  const options = {\r\n    alwaysShowAllBtns: true,\r\n    showTotal: true,\r\n    disablePageTitle: true,\r\n    paginationTotalRenderer: customTotal,\r\n\r\n    firstPageText: \"Primeira\",\r\n    prePageText: \"Anterior\",\r\n    nextPageText: \"Próxima\",\r\n    lastPageText: \"Última\",\r\n\r\n    nextPageTitle: \"Primeira Página\",\r\n    prePageTitle: \"Página Anterior\",\r\n    firstPageTitle: \"Próxima Página\",\r\n    lastPageTitle: \"Última Página\",\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"idsku\",\r\n      text: \"SKU\",\r\n      style: { width: \"2%\", textAlign: \"center\" },\r\n      headerStyle: { textAlign: \"center\" },\r\n      filter: textFilter({\r\n        placeholder: \"SKU\",\r\n        style: {\r\n          fontSize: \"0.8rem\",\r\n        },\r\n      }),\r\n    },\r\n    {\r\n      dataField: \"nome\",\r\n      text: \"Nome\",\r\n      filter: textFilter({\r\n        placeholder: \"Nome\",\r\n        style: {\r\n          fontSize: \"0.8rem\",\r\n          width: \"100%\",\r\n        },\r\n      }),\r\n      headerStyle: {\r\n        width: \"20%\",\r\n      },\r\n    },\r\n    {\r\n      dataField: \"curva\",\r\n      text: \"Curva\",\r\n      formatter: (cell) => selectOptions[cell],\r\n      filter: selectFilter({\r\n        options: selectOptions,\r\n        placeholder: \"Curva\",\r\n        style: {\r\n          fontSize: \"0.8rem\",\r\n        },\r\n      }),\r\n      headerStyle: {\r\n        width: \"9%\",\r\n      },\r\n    },\r\n    {\r\n      dataField: \"contador\",\r\n      text: \"Cont\",\r\n      headerStyle: {\r\n        width: \"9%\",\r\n        textAlign: \"left\",\r\n      },\r\n      sort: true,\r\n      // filter: customFilter({\r\n      //   type: FILTER_TYPES.NUMBER,\r\n      // }),\r\n      // filterRenderer: obsContador,\r\n    },\r\n    {\r\n      dataField: \"total\",\r\n      text: \"Vendido\",\r\n      headerStyle: {\r\n        width: \"10%\",\r\n      },\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"destoantes\",\r\n      text: \"Dest\",\r\n      sort: true,\r\n      headerStyle: {\r\n        width: \"7%\",\r\n      },\r\n    },\r\n    {\r\n      dataField: \"considerar\",\r\n      text: \"Total\",\r\n      sort: true,\r\n      headerStyle: {\r\n        width: \"7%\",\r\n      },\r\n    },\r\n    {\r\n      dataField: \"meses\",\r\n      text: \"Meses\",\r\n      sort: true,\r\n      headerStyle: {\r\n        width: \"8%\",\r\n      },\r\n    },\r\n    {\r\n      dataField: \"mediames\",\r\n      text: \"Média\",\r\n      sort: true,\r\n      headerStyle: {\r\n        width: \"9%\",\r\n      },\r\n    },\r\n    {\r\n      dataField: \"minimo\",\r\n      text: \"Min\",\r\n      sort: true,\r\n      headerStyle: {\r\n        width: \"7%\",\r\n      },\r\n    },\r\n    {\r\n      dataField: \"maximo\",\r\n      text: \"Max\",\r\n      sort: true,\r\n      headerStyle: {\r\n        width: \"7%\",\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {carregado && (\r\n        <BootstrapTable\r\n          bootstrap4\r\n          keyField=\"idsku\"\r\n          data={resultados}\r\n          columns={columns}\r\n          condensed={false}\r\n          hover\r\n          bordered={false}\r\n          filter={filterFactory()}\r\n          style={{ fontSize: \"0.8rem\" }}\r\n          filterPosition={\"top\"}\r\n          pagination={paginationFactory(options)}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TabelaResultados;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Modal, Button, Badge, Alert } from \"react-bootstrap\";\r\n\r\nimport api from \"../../../services/api\";\r\n\r\nfunction ModalExportarBinxBling(props) {\r\n  const { showExport, handleClose, setShowExport, objExportar } = props;\r\n\r\n  const [exportando, setExportando] = useState(false);\r\n\r\n  const exportar = async () => {\r\n    setExportando(true);\r\n\r\n    await api\r\n      .post(\"exportarbinxbling\", { exportar: objExportar })\r\n      .then((response) => {\r\n        console.log(\"Exportação dos dados para o Binx e Bling iniciada\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Erro ao exportar dados para o Binx e Bling\");\r\n        setExportando(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal Modal show={showExport} onHide={handleClose} centered size=\"md\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Exportar Análise para o Binx e Bling</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          {!exportando && (\r\n            <Alert variant=\"warning\">\r\n              Ao exportar a análise, os valores de estoque mínimo, máximo e curva serão\r\n              sobrescritos, confira os parâmetros utilizados.\r\n            </Alert>\r\n          )}\r\n          {exportando && (\r\n            <Alert variant=\"success\" className=\"\">\r\n              O procedimento de exportação foi iniciado e está sendo executado em segundo\r\n              plano, e pode levar vários minutos para ser concluído.\r\n            </Alert>\r\n          )}\r\n\r\n          <Alert variant=\"secondary\">\r\n            Ainda não é possível realizar a exportação para o Bling, a exportação será\r\n            realiza apenas para o Binx e afetará apenas as informações no dashboard de\r\n            compras.\r\n          </Alert>\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button\r\n            variant=\"primary\"\r\n            disabled={exportando ? true : false}\r\n            onClick={exportar}\r\n          >\r\n            Exportar\r\n          </Button>\r\n          <Button variant=\"secondary\" onClick={() => setShowExport(false)}>\r\n            Fechar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ModalExportarBinxBling;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Modal, Button, Badge, Alert } from \"react-bootstrap\";\r\n\r\nfunction ModalInfo(props) {\r\n  const { showInfo, handleClose, setShowInfo, estatisticas } = props;\r\n\r\n  return (\r\n    <>\r\n      <Modal Modal show={showInfo} onHide={handleClose} centered size=\"md\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Informações sobre a análise realizada</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>...</Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowInfo(false)}>\r\n            Fechar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ModalInfo;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Menu from \"../../components/Menu\";\r\nimport TabelaResultados from \"../../components/MinMax/TabelaResultados\";\r\nimport download from \"downloadjs\";\r\n\r\nimport api from \"../../services/api\";\r\n\r\nimport ModalExportarBinxBling from \"../../components/MinMax/ModalExportarBinxBling\";\r\nimport ModalInfo from \"../../components/MinMax/ModalInfo\";\r\n\r\nimport {\r\n  Card,\r\n  Container,\r\n  Row,\r\n  Button,\r\n  Col,\r\n  Tabs,\r\n  Tab,\r\n  Spinner,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\n\r\nimport {\r\n  BsDownload,\r\n  BsBoxArrowInUpRight,\r\n  BsInfoCircle,\r\n  BsGear,\r\n  BsCheck,\r\n} from \"react-icons/bs\";\r\n\r\nfunction MinMax() {\r\n  const [loadingAnalise, setLoadingAnalise] = useState(false);\r\n  const [analiseCompleta, setAnaliseCompleta] = useState(false);\r\n\r\n  const [semCategoria, setSemCategoria] = useState([]);\r\n  const [acessorios, setAcessorios] = useState([]);\r\n  const [componentes, setComponentes] = useState([]);\r\n  const [ferramentas, setFerramentas] = useState([]);\r\n  const [motores, setMotores] = useState([]);\r\n  const [maker, setMaker] = useState([]);\r\n  const [semVenda, setSemVenda] = useState([]);\r\n  const [estatisticas, setEstatisticas] = useState({});\r\n  const [exportar, setExportar] = useState([]);\r\n\r\n  // Controle dos Modais\r\n  const [showExport, setShowExport] = useState(false);\r\n  const [showInfo, setShowInfo] = useState(false);\r\n\r\n  const handleClose = () => {\r\n    setShowExport(false);\r\n    setShowInfo(false);\r\n  };\r\n\r\n  const realizarAnalise = async () => {\r\n    setLoadingAnalise(true);\r\n    setAnaliseCompleta(false);\r\n\r\n    await api\r\n      .get(\"/minmax\")\r\n      .then((response) => {\r\n        // Desestruturar cada um dos resultados\r\n        setAcessorios(response.data.acessorios);\r\n        setComponentes(response.data.componentes);\r\n        setFerramentas(response.data.ferramentas);\r\n        setMotores(response.data.motores);\r\n        setMaker(response.data.maker);\r\n        setSemCategoria(response.data.semCategoria);\r\n        setSemVenda(response.data.semVenda);\r\n\r\n        // Desestruturas estatisticas da análise\r\n        setEstatisticas(response.data.estatisticas);\r\n\r\n        // Monta o objeto de exportação caso o usuário deseje exportar os dados para o Binx/Bling\r\n        const objExportar = [\r\n          response.data.semCategoria,\r\n          response.data.acessorios,\r\n          response.data.componentes,\r\n          response.data.ferramentas,\r\n          response.data.motores,\r\n          response.data.maker,\r\n          response.data.maker,\r\n          response.data.semVenda,\r\n        ];\r\n\r\n        setExportar(objExportar);\r\n\r\n        // Flags de loading\r\n        setLoadingAnalise(false);\r\n        setAnaliseCompleta(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Erro\");\r\n        setLoadingAnalise(false);\r\n        setAnaliseCompleta(false);\r\n      });\r\n  };\r\n\r\n  const exportarExcel = async () => {\r\n    await api\r\n      .get(\"/exportarminmax\", { responseType: \"arraybuffer\" })\r\n      .then((response) => {\r\n        const blob = new Blob([response.data], {\r\n          type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n        });\r\n        download(blob, \"minmax.xlsx\");\r\n        console.log(\"Sucesso na exportação do arquivo excel\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Erro na exportação do arquivo excel\");\r\n        console.log(error.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Menu logged={true} />\r\n\r\n      <Container className=\"mt-4\" fluid=\"lg\">\r\n        <Row>\r\n          <Card className=\"p-3\" style={{ width: \"115%\" }}>\r\n            <Card.Title className=\"mt-2\">\r\n              Análise de Estoque Mínimo e Máximo\r\n            </Card.Title>\r\n            <Card.Subtitle className=\"my-2 text-muted\">\r\n              A análise é executada conforme os parâmetros salvos\r\n            </Card.Subtitle>\r\n\r\n            <Row className=\"my-3\">\r\n              <Col>\r\n                <div className=\"d-grid gap-2\">\r\n                  <Button block variant=\"primary\" onClick={realizarAnalise}>\r\n                    {loadingAnalise && (\r\n                      <Spinner\r\n                        as=\"span\"\r\n                        animation=\"border\"\r\n                        size=\"sm\"\r\n                        role=\"status\"\r\n                        aria-hidden=\"true\"\r\n                      />\r\n                    )}\r\n                    {!loadingAnalise && (\r\n                      <>\r\n                        Gerar Nova Análise <BsCheck />\r\n                      </>\r\n                    )}\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n              <Col>\r\n                <div className=\"d-grid gap-2\">\r\n                  <Button\r\n                    block\r\n                    variant=\"primary\"\r\n                    disabled={loadingAnalise ? true : false}\r\n                    disabled\r\n                  >\r\n                    Configurar <BsGear />\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n              <Col>\r\n                <div className=\"d-grid gap-2\">\r\n                  <Button\r\n                    block\r\n                    variant=\"secondary\"\r\n                    // disabled={analiseCompleta ? false : true}\r\n                    disabled\r\n                    onClick={() => setShowInfo(true)}\r\n                  >\r\n                    Informações <BsInfoCircle />\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n              <Col>\r\n                <div className=\"d-grid gap-2\">\r\n                  <Button\r\n                    block\r\n                    // variant={analiseCompleta ? \"success\" : \"outline-success\"}\r\n                    variant=\"success\"\r\n                    disabled={analiseCompleta ? false : true}\r\n                    onClick={() => setShowExport(true)}\r\n                  >\r\n                    Exportar Binx/Bling <BsBoxArrowInUpRight />\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n              <Col>\r\n                <div className=\"d-grid gap-2\">\r\n                  <Button\r\n                    block\r\n                    // variant={analiseCompleta ? \"info\" : \"outline-info\"}\r\n                    variant=\"info\"\r\n                    disabled={analiseCompleta ? false : true}\r\n                    onClick={exportarExcel}\r\n                  >\r\n                    Exportar Planilha <BsDownload />\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n\r\n            {!loadingAnalise && !analiseCompleta && (\r\n              <>\r\n                <Alert className=\"mt-2\" variant=\"warning\">\r\n                  Realize uma nova anaĺise para visualizar os resultados.\r\n                </Alert>\r\n              </>\r\n            )}\r\n\r\n            <Card.Body>\r\n              {loadingAnalise && (\r\n                <>\r\n                  <Container className=\"text-center\">\r\n                    <Spinner\r\n                      as=\"span\"\r\n                      animation=\"border\"\r\n                      size=\"lg\"\r\n                      role=\"status\"\r\n                      aria-hidden=\"true\"\r\n                    />\r\n                  </Container>\r\n                </>\r\n              )}\r\n\r\n              {!loadingAnalise && analiseCompleta && (\r\n                <Tabs\r\n                  defaultActiveKey=\"acessorios\"\r\n                  id=\"uncontrolled-tab-example\"\r\n                  className=\"mb-3\"\r\n                  variant=\"tabs\"\r\n                >\r\n                  <Tab eventKey=\"acessorios\" title=\"Acessórios\">\r\n                    <TabelaResultados resultados={acessorios} />\r\n                  </Tab>\r\n                  <Tab eventKey=\"componentes\" title=\"Componentes\">\r\n                    <TabelaResultados resultados={componentes} />\r\n                  </Tab>\r\n                  <Tab eventKey=\"ferramentas\" title=\"Ferramentas\">\r\n                    <TabelaResultados resultados={ferramentas} />\r\n                  </Tab>\r\n                  <Tab eventKey=\"motores\" title=\"Motores\">\r\n                    <TabelaResultados resultados={motores} />\r\n                  </Tab>\r\n                  <Tab eventKey=\"maker\" title=\"Maker\">\r\n                    <TabelaResultados resultados={maker} />\r\n                  </Tab>\r\n                  <Tab eventKey=\"sem-categoria\" title=\"Sem Categoria\">\r\n                    <TabelaResultados resultados={semCategoria} />\r\n                  </Tab>\r\n                  <Tab eventKey=\"sem-venda\" title=\"Sem Venda\">\r\n                    <TabelaResultados resultados={semVenda} />\r\n                  </Tab>\r\n                </Tabs>\r\n              )}\r\n            </Card.Body>\r\n          </Card>\r\n        </Row>\r\n      </Container>\r\n\r\n      {/* Modais */}\r\n      <ModalExportarBinxBling\r\n        showExport={showExport}\r\n        handleClose={handleClose}\r\n        setShowExport={setShowExport}\r\n        objExportar={exportar}\r\n      />\r\n\r\n      <ModalInfo\r\n        showInfo={showInfo}\r\n        handleClose={handleClose}\r\n        setShowInfo={setShowInfo}\r\n        estatisticas={estatisticas}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MinMax;\r\n"],"sourceRoot":""}