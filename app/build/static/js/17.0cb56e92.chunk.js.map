{"version":3,"sources":["assets/logo_3.png","components/Menu/index.js","services/api.js","../node_modules/@restart/hooks/esm/useTimeout.js","components/DashCompras/HistoricoDisponibilidade/index.js","../node_modules/react-bootstrap/esm/Badge.js","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","components/DashCompras/GraficoDisponibilidade/index.js","components/DashCompras/IndisponibilidadeCurva/index.js","components/DashCompras/DisponibilidadeCurva/index.js","components/DashCompras/HistoricoCurvas/index.js","../node_modules/@restart/hooks/esm/useUpdateEffect.js","../node_modules/react-bootstrap/esm/CarouselCaption.js","../node_modules/react-bootstrap/esm/CarouselItem.js","../node_modules/react-bootstrap/esm/Carousel.js","pages/DashboardCompras/index.js"],"names":["Menu","props","useHistory","useState","vendasDrop","setVendasDrop","comprasDrop","setComprasDrop","expedicaoDrop","setExpedicaoDrop","relatoriosDrop","setRelatoriosDrop","cadastrosDrop","setCadastrosDrops","userDrop","setUserDrop","setVendasActive","comprasActive","setComprasActive","expedicaoActive","setExpedicaoActive","relatoriosActive","setRelatoriosActive","cadastrosActive","setCadastrosActive","carregandoLogout","setCarregandoLogout","userName","setUserName","userContext","useContext","AuthContext","useEffect","pathname","window","location","includes","console","log","attributes","Navbar","bg","variant","expand","sticky","Container","fluid","to","className","Brand","src","NavbarLogo","width","alt","Toggle","logged","Collapse","Nav","navbarScroll","NavDropdown","title","show","onMouseEnter","onMouseLeave","Item","as","Link","href","active","size","onClick","Auth","signOut","then","data","reload","catch","error","Spinner","animation","baseURL","process","REACT_APP_ENVIROMENT","api","axios","create","MAX_DELAY_MS","Math","pow","setChainedTimeout","handleRef","fn","timeoutAtMs","delayMs","Date","now","current","setTimeout","useTimeout","isMounted","useMounted","useRef","useWillUnmount","clearTimeout","useMemo","clear","set","HistoricoDisponibilidade","disponibilidades","loaded","setLoaded","setData","options","setOptions","labels","valores","valoresMeta","dataMontada","push","valor","reverse","menorValor","min","apply","maiorValor","max","isFinite","montarDados","datasets","label","borderColor","borderWidth","fill","pointBackgroundColor","borderDash","pointRadius","responsive","maintainAspectRatio","scales","yAxes","type","ticks","maxTicksLimit","suggestedMin","suggestedMax","callback","value","toFixed","scaleLabel","display","labelString","legend","position","usePointStyle","boxWidth","text","padding","duration","Badge","React","ref","bsPrefix","pill","Component","prefix","useBootstrapPrefix","_jsx","classNames","displayName","defaultProps","ListGroupItem","disabled","eventKey","action","useNavItem","key","makeEventKey","navItemProps","meta","handleClick","useEventCallback","event","preventDefault","stopPropagation","undefined","tabIndex","isActive","ListGroup","horizontalVariant","useUncontrolled","activeKey","initialBsPrefix","horizontal","numbered","controlledProps","BaseNav","Object","assign","GraficoDisponibilidade","pDisponivel","pIndisponivel","backgroundColor","IndisponibilidadeCurva","porcentagens","DisponibilidadeCurva","beginAtZero","HistoricoCurvas","useUpdateEffect","deps","isFirst","createWithBsPrefix","CarouselItem","finalClassName","slide","fade","controls","indicators","indicatorLabels","defaultActiveIndex","interval","keyboard","pause","wrap","touch","prevIcon","prevLabel","nextIcon","nextLabel","Carousel","uncontrolledProps","activeIndex","onSelect","onSlide","onSlid","onKeyDown","onMouseOver","onMouseOut","onTouchStart","onTouchMove","onTouchEnd","children","isRTL","useIsRTL","nextDirectionRef","direction","setDirection","paused","setPaused","isSliding","setIsSliding","renderedActiveIndex","setRenderedActiveIndex","activeChildInterval","numChildren","forEach","child","index","activeChildIntervalRef","useCommittedRef","prev","useCallback","nextActiveIndex","next","elementRef","useImperativeHandle","element","nextWhenVisible","document","hidden","style","parentNode","elementStyle","getComputedStyle","visibility","isVisible","slideDirection","orderClassName","directionalClassName","handleEnter","node","triggerBrowserReflow","handleEntered","handleKeyDown","test","target","tagName","handleMouseOver","handleMouseOut","touchStartXRef","touchDeltaXRef","touchUnpauseTimeout","handleTouchStart","touches","clientX","handleTouchMove","length","handleTouchEnd","touchDeltaX","abs","shouldPlay","intervalHandleRef","_ref","_activeChildIntervalR","nextFunc","setInterval","visibilityState","clearInterval","indicatorOnClicks","Array","from","_","_jsxs","map","TransitionWrapper","in","onEnter","onEntered","addEndListener","transitionEndListener","status","innerProps","_Fragment","Anchor","Caption","CarouselCaption","DashboardCompras","ativos","setAtivos","disponiveis","setDisponiveis","indisponiveis","setIndisponiveis","setPDisponivel","setPIndisponivel","abaixoMin","setAbaixoMin","pAbaixoMin","setPAbaixoMin","setDisponibilidades","indisponivelCurva","setIndisponivelCurva","pIndisponivelCurva","setPIndisponivelCurva","pDisponivelCurva","setPDisponivelCurva","disponibilidadesCurva","setDisponibilidadesCurva","carregado","setCarregado","carregaChamadaDash","intervalo","carregaDash","a","get","res","pdisponivel","pindisponivel","indisponivelPorCurva","pDisponivelPorCurva","disponiblidadesCurva","setIndex","role","selectedIndex","e","Row","Col","Card","Header","Body","Text","height"],"mappings":"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","file":"static/js/17.0cb56e92.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo_3.edbd2b14.png\";","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Auth } from \"../../services/amplify\";\r\n\r\nimport { Navbar, Nav, NavDropdown, Container, Spinner } from \"react-bootstrap\";\r\nimport { BsPersonCircle } from \"react-icons/bs\";\r\n\r\nimport NavbarLogo from \"../../assets/logo_3.png\";\r\n\r\nimport AuthContext from \"../../contexts/auth\";\r\n\r\nimport \"./styles.css\";\r\n\r\nfunction Menu(props) {\r\n  const history = useHistory();\r\n\r\n  const [vendasDrop, setVendasDrop] = useState(false);\r\n  const [comprasDrop, setComprasDrop] = useState(false);\r\n  const [expedicaoDrop, setExpedicaoDrop] = useState(false);\r\n  const [relatoriosDrop, setRelatoriosDrop] = useState(false);\r\n  const [cadastrosDrop, setCadastrosDrops] = useState(false);\r\n  const [userDrop, setUserDrop] = useState(false);\r\n\r\n  const [vendasActive, setVendasActive] = useState(false);\r\n  const [comprasActive, setComprasActive] = useState(false);\r\n  const [expedicaoActive, setExpedicaoActive] = useState(false);\r\n  const [relatoriosActive, setRelatoriosActive] = useState(false);\r\n  const [cadastrosActive, setCadastrosActive] = useState(false);\r\n\r\n  const [carregandoLogout, setCarregandoLogout] = useState(false);\r\n\r\n  const [userName, setUserName] = useState(\"\");\r\n\r\n  const userContext = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    const pathname = window.location.pathname;\r\n\r\n    if (pathname.includes(\"vendas\")) setVendasActive(true);\r\n    if (pathname.includes(\"compras\")) setComprasActive(true);\r\n    if (pathname.includes(\"aprovarpedidos\")) setExpedicaoActive(true);\r\n    if (pathname.includes(\"relatorio\")) setRelatoriosActive(true);\r\n    if (pathname.includes(\"prospeccao\")) setVendasActive(true);\r\n    if (pathname.includes(\"produtos\")) setCadastrosActive(true);\r\n\r\n    // Debug\r\n    // Exibir o objeto recebido via contexto\r\n    console.log(userContext);\r\n\r\n    if (userContext) {\r\n      setUserName(userContext.attributes[\"custom:displayname\"]);\r\n    } else {\r\n      setUserName(\"Convidado\");\r\n    }\r\n  }, []);\r\n\r\n  const signOut = () => {\r\n    setCarregandoLogout(true);\r\n\r\n    Auth.signOut()\r\n      .then((data) => {\r\n        window.location.reload();\r\n      })\r\n      .catch((error) => {\r\n        setCarregandoLogout(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" sticky=\"top\">\r\n        <Container fluid>\r\n          <Link to=\"/\" className=\"m-0 p-0\">\r\n            <Navbar.Brand className=\"\">\r\n              <img src={NavbarLogo} width=\"70\" alt=\"Logo Binx\" />\r\n            </Navbar.Brand>\r\n          </Link>\r\n\r\n          <Navbar.Toggle />\r\n\r\n          {props.logged && (\r\n            <>\r\n              <Navbar.Collapse>\r\n                <Nav className=\"mr-auto\" navbarScroll>\r\n                  {/* Dropdown de Vendas */}\r\n                  <NavDropdown\r\n                    title=\"Vendas\"\r\n                    show={vendasDrop}\r\n                    onMouseEnter={() => setVendasDrop(true)}\r\n                    onMouseLeave={() => setVendasDrop(false)}\r\n                  >\r\n                    <NavDropdown.Item as={Link} href=\"/fretevendas\" to=\"/fretevendas\">\r\n                      Cálculo de Frete\r\n                    </NavDropdown.Item>\r\n                    <NavDropdown.Item as={Link} href=\"/calculomargem\" to=\"/calculomargem\">\r\n                      Cálculo de Margem\r\n                    </NavDropdown.Item>\r\n                    <NavDropdown.Item as={Link} href=\"/prospeccao\" to=\"/prospeccao\">\r\n                      Prospecção de Clientes\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n\r\n                  {/* Dropdown de Compras */}\r\n                  <NavDropdown\r\n                    title=\"Compras\"\r\n                    show={comprasDrop}\r\n                    onMouseEnter={() => setComprasDrop(!comprasDrop)}\r\n                    onMouseLeave={() => setComprasDrop(false)}\r\n                    active={comprasActive}\r\n                  >\r\n                    <NavDropdown.Item as={Link} href=\"/dashcompras\" to=\"/dashcompras\">\r\n                      Dashboard de Compras\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n\r\n                  {/* Dropdown da Expedição */}\r\n                  <NavDropdown\r\n                    title=\"Expedição\"\r\n                    show={expedicaoDrop}\r\n                    onMouseEnter={() => setExpedicaoDrop(!expedicaoDrop)}\r\n                    onMouseLeave={() => setExpedicaoDrop(false)}\r\n                    active={expedicaoActive}\r\n                  >\r\n                    <NavDropdown.Item href=\"expedicao/aprovarpedidos\" to=\"/aprovarpedidos\">\r\n                      Aprovação de Pedidos\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n\r\n                  {/* Dropdown de Relatórios */}\r\n                  <NavDropdown\r\n                    title=\"Relatórios\"\r\n                    show={relatoriosDrop}\r\n                    onMouseEnter={() => setRelatoriosDrop(!relatoriosDrop)}\r\n                    onMouseLeave={() => setRelatoriosDrop(false)}\r\n                    active={relatoriosActive}\r\n                  >\r\n                    <NavDropdown.Item href=\"/relatoriominmax\" to=\"/relatoriominmax\">\r\n                      Estoque Mínimo e Máximo\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n\r\n                  {/* Dropdown da Cadastros */}\r\n                  <NavDropdown\r\n                    title=\"Cadastros\"\r\n                    show={cadastrosDrop}\r\n                    onMouseEnter={() => setCadastrosDrops(!cadastrosDrop)}\r\n                    onMouseLeave={() => setCadastrosDrops(false)}\r\n                    active={cadastrosActive}\r\n                  >\r\n                    <NavDropdown.Item href=\"/produtos\" to=\"/produtos\">\r\n                      Produtos\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n                </Nav>\r\n              </Navbar.Collapse>\r\n\r\n              <Navbar.Collapse className=\"justify-content-end\">\r\n                <Nav className=\"mr-auto\" navbarScroll>\r\n                  <BsPersonCircle />\r\n                  <NavDropdown\r\n                    className=\"dropdown-user\"\r\n                    title={\r\n                      <div className=\"user-dropdown-div \">\r\n                        <div className=\"m-0\">\r\n                          <BsPersonCircle size={25}/>\r\n                        </div>\r\n                        <div className=\"user-name\">{userName}</div>\r\n                      </div>\r\n                    }\r\n                    show={userDrop}\r\n                    onMouseEnter={() => setUserDrop(true)}\r\n                    onMouseLeave={() => setUserDrop(false)}\r\n                  >\r\n                    <NavDropdown.Item onClick={signOut}>\r\n                      {!carregandoLogout && <>Sair</>}\r\n                      {carregandoLogout && (\r\n                        <div className=\"user-menu-sair\">\r\n                          <p>Sair</p>\r\n                          <Spinner animation=\"grow\" size=\"sm\" />\r\n                        </div>\r\n                      )}\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n                </Nav>\r\n              </Navbar.Collapse>\r\n            </>\r\n          )}\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Menu;\r\n","import axios from \"axios\";\r\n\r\n// Para utilização com certificado SSL inválido\r\n// import https from \"https\";\r\n// const api = axios.create({\r\n//   baseURL: \"https://api.binx.com.br/api\",\r\n//   httpsAgent: new https.Agent({\r\n//     rejectUnauthorized: false,\r\n//   }),\r\n// });\r\n\r\nconst enviroment = process.env.REACT_APP_ENVIROMENT || \"development\";\r\n\r\nlet baseURL =\r\n  enviroment === \"development\"\r\n    ? \"http://localhost:4005/api\"\r\n    : \"https://api.binx.com.br/api\";\r\n\r\nconst api = axios.create({ baseURL: baseURL });\r\n\r\nexport default api;\r\n","import { useMemo, useRef } from 'react';\nimport useMounted from './useMounted';\nimport useWillUnmount from './useWillUnmount';\n/*\n * Browsers including Internet Explorer, Chrome, Safari, and Firefox store the\n * delay as a 32-bit signed integer internally. This causes an integer overflow\n * when using delays larger than 2,147,483,647 ms (about 24.8 days),\n * resulting in the timeout being executed immediately.\n *\n * via: https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout\n */\n\nvar MAX_DELAY_MS = Math.pow(2, 31) - 1;\n\nfunction setChainedTimeout(handleRef, fn, timeoutAtMs) {\n  var delayMs = timeoutAtMs - Date.now();\n  handleRef.current = delayMs <= MAX_DELAY_MS ? setTimeout(fn, delayMs) : setTimeout(function () {\n    return setChainedTimeout(handleRef, fn, timeoutAtMs);\n  }, MAX_DELAY_MS);\n}\n/**\n * Returns a controller object for setting a timeout that is properly cleaned up\n * once the component unmounts. New timeouts cancel and replace existing ones.\n *\n *\n *\n * ```tsx\n * const { set, clear } = useTimeout();\n * const [hello, showHello] = useState(false);\n * //Display hello after 5 seconds\n * set(() => showHello(true), 5000);\n * return (\n *   <div className=\"App\">\n *     {hello ? <h3>Hello</h3> : null}\n *   </div>\n * );\n * ```\n */\n\n\nexport default function useTimeout() {\n  var isMounted = useMounted(); // types are confused between node and web here IDK\n\n  var handleRef = useRef();\n  useWillUnmount(function () {\n    return clearTimeout(handleRef.current);\n  });\n  return useMemo(function () {\n    var clear = function clear() {\n      return clearTimeout(handleRef.current);\n    };\n\n    function set(fn, delayMs) {\n      if (delayMs === void 0) {\n        delayMs = 0;\n      }\n\n      if (!isMounted()) return;\n      clear();\n\n      if (delayMs <= MAX_DELAY_MS) {\n        // For simplicity, if the timeout is short, just set a normal timeout.\n        handleRef.current = setTimeout(fn, delayMs);\n      } else {\n        setChainedTimeout(handleRef, fn, Date.now() + delayMs);\n      }\n    }\n\n    return {\n      set: set,\n      clear: clear\n    };\n  }, []);\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nfunction HistoricoDisponibilidade(props) {\r\n  const { disponibilidades } = props;\r\n\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [data, setData] = useState({});\r\n  const [options, setOptions] = useState();\r\n\r\n  const meta = 92;\r\n\r\n  const montarDados = (disponibilidades) => {\r\n    // Declara arrays que serão montadas\r\n    let labels = [];\r\n    let valores = [];\r\n    let valoresMeta = [];\r\n\r\n    // Monta Labels com as datas de disponibilidades\r\n    for (const data of disponibilidades) {\r\n      let dataMontada =\r\n        data[\"data\"][8] + data[\"data\"][9] + \"/\" + data[\"data\"][5] + data[\"data\"][6];\r\n      labels.push(dataMontada);\r\n    }\r\n\r\n    // Monta valores de disponibilidade\r\n    for (const valor of disponibilidades) {\r\n      valores.push(valor[\"valor\"]);\r\n      valoresMeta.push(meta);\r\n    }\r\n\r\n    // Reverte as arrays montadas para exibição correta de novos dados\r\n    labels.reverse();\r\n    valores.reverse();\r\n\r\n    // Encontra o menor e maior valor existente nos dados\r\n    let menorValor = Math.min.apply(Math, valores);\r\n    let maiorValor = Math.max.apply(Math, valores);\r\n\r\n    if (maiorValor < 92) maiorValor = 92;\r\n    if (menorValor > 92) menorValor = 92;\r\n\r\n    menorValor = isFinite(menorValor) ? menorValor : 0;\r\n    maiorValor = isFinite(maiorValor) ? maiorValor : 100;\r\n\r\n    return { valores, labels, valoresMeta, menorValor, maiorValor };\r\n  };\r\n\r\n  useEffect(() => {\r\n    let { valores, labels, valoresMeta, menorValor, maiorValor } = montarDados(disponibilidades);\r\n\r\n    setData({\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          // Dataset de produtos disponíveis\r\n          label: \"Disponíveis\",\r\n          data: valores,\r\n          borderColor: [\"#198754\"],\r\n          borderWidth: 2,\r\n          fill: false,\r\n          pointBackgroundColor: \"#198754\",\r\n        },\r\n        {\r\n          // Dataset de Meta - Disponíveis\r\n          label: \"Meta\",\r\n          data: valoresMeta,\r\n          borderColor: [\"#0dcaf0\"],\r\n          borderWidth: 3,\r\n          fill: false,\r\n          borderDash: [5, 5],\r\n          pointRadius: 0,\r\n          pointBackgroundColor: \"#0dcaf0\",\r\n        },\r\n      ],\r\n    });\r\n\r\n    setOptions({\r\n      // responsive: true,\r\n      // maintainAspectRatio: false,\r\n\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            type: \"linear\",\r\n            ticks: {\r\n              maxTicksLimit: 10,\r\n              suggestedMin: menorValor - 0.1,\r\n              suggestedMax: maiorValor + 0.1,\r\n              callback: function (value) {\r\n                return value.toFixed(1) + \"%\";\r\n              },\r\n            },\r\n            scaleLabel: {\r\n              display: false,\r\n              labelString: \"Disponibilidade\",\r\n            },\r\n          },\r\n        ],\r\n      },\r\n\r\n      legend: {\r\n        display: true,\r\n        position: \"bottom\",\r\n        labels: {\r\n          usePointStyle: true,\r\n          boxWidth: 8,\r\n        },\r\n      },\r\n\r\n      title: {\r\n        display: true,\r\n        text: \"Histórico de Disponibilidade\",\r\n        padding: 20\r\n      },\r\n\r\n      animation: {\r\n        duration: 3000,\r\n      },\r\n    });\r\n\r\n    setLoaded(true);\r\n  }, []);\r\n\r\n  return <>{loaded && <Line data={data} options={options} />}</>;\r\n}\r\n\r\nexport default HistoricoDisponibilidade;\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  bg: 'primary',\n  pill: false\n};\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg,\n  pill,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import classNames from 'classnames';\nimport * as React from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useNavItem } from '@restart/ui/NavItem';\nimport { makeEventKey } from '@restart/ui/SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroupItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  disabled,\n  eventKey,\n  className,\n  variant,\n  action,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  const [navItemProps, meta] = useNavItem({\n    key: makeEventKey(eventKey, props.href),\n    active,\n    ...props\n  });\n  const handleClick = useEventCallback(event => {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    navItemProps.onClick(event);\n  });\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  } // eslint-disable-next-line no-nested-ternary\n\n\n  const Component = as || (action ? props.href ? 'a' : 'button' : 'div');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    ...navItemProps,\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, meta.isActive && 'active', disabled && 'disabled', variant && `${bsPrefix}-${variant}`, action && `${bsPrefix}-action`)\n  });\n});\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseNav from '@restart/ui/Nav';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ListGroupItem from './ListGroupItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    className,\n    bsPrefix: initialBsPrefix,\n    variant,\n    horizontal,\n    numbered,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as = 'div',\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  let horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : `horizontal-${horizontal}`;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(BaseNav, {\n    ref: ref,\n    ...controlledProps,\n    as: as,\n    className: classNames(className, bsPrefix, variant && `${bsPrefix}-${variant}`, horizontalVariant && `${bsPrefix}-${horizontalVariant}`, numbered && `${bsPrefix}-numbered`)\n  });\n});\nListGroup.displayName = 'ListGroup';\nexport default Object.assign(ListGroup, {\n  Item: ListGroupItem\n});","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\n\r\nfunction GraficoDisponibilidade(props) {\r\n  const { pDisponivel, pIndisponivel } = props;\r\n  const [data, setData] = useState();\r\n  const [options, setOptions] = useState();\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setData({\r\n      labels: [\"Disponíveis\", \"Indisponíveis\"],\r\n      datasets: [\r\n        {\r\n          data: [pDisponivel, pIndisponivel],\r\n          backgroundColor: [\"#198754\", \"#dc3545\"],\r\n          borderWidth: 4,\r\n        },\r\n      ],\r\n    });\r\n    setOptions({\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n\r\n      title: {\r\n        display: true,\r\n        text: \"Disponibilidade de Produtos\",\r\n      },\r\n      legend: {\r\n        position: \"bottom\",\r\n        labels: {\r\n          usePointStyle: true,\r\n        },\r\n      },\r\n      animation: {\r\n        duration: 3000,\r\n      },\r\n    });\r\n\r\n    setLoaded(true);\r\n  }, []);\r\n\r\n  return <>{loaded && <Doughnut data={data} options={options} />}</>;\r\n}\r\n\r\nexport default GraficoDisponibilidade;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\n\r\nfunction IndisponibilidadeCurva(props) {\r\n  const { porcentagens } = props;\r\n\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [data, setData] = useState();\r\n  const [options, setOptions] = useState();\r\n\r\n  useEffect(() => {\r\n    setData({\r\n      labels: [\"Curva A\", \"Curva B\", \"Curva C\", \"Sem Curva\"],\r\n      datasets: [\r\n        {\r\n          data: [porcentagens[0], porcentagens[1], porcentagens[2], porcentagens[3]],\r\n          backgroundColor: [\"#28a745\", \"#0dcaf0\", \"#007bff\", \"#6c757d\"],\r\n          borderWidth: 4,\r\n        },\r\n      ],\r\n    });\r\n    setOptions({\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n\r\n      title: {\r\n        display: true,\r\n        text: \"Produtos Indisponíveis Por Curva (%)\",\r\n      },\r\n      legend: {\r\n        position: \"right\",\r\n        labels: {\r\n          usePointStyle: true\r\n        }\r\n      },\r\n      animation: {\r\n        duration: 3000,\r\n      },\r\n    });\r\n    setLoaded(true);\r\n  }, []);\r\n\r\n  return <>{loaded && <Doughnut data={data} options={options} />}</>;\r\n}\r\n\r\nexport default IndisponibilidadeCurva;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nfunction DisponibilidadeCurva(props) {\r\n  const { porcentagens } = props;\r\n\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [data, setData] = useState();\r\n  const [options, setOptions] = useState();\r\n\r\n  useEffect(() => {\r\n    setData({\r\n      labels: [\"Curva A\", \"Curva B\", \"Curva C\", \"Sem Curva\"],\r\n      datasets: [\r\n        {\r\n          label: \"Meta\",\r\n          type: \"line\",\r\n          data: [92, 92, 92, 92],\r\n          borderColor: [\"#0dcaf0\"],\r\n          borderWidth: 3,\r\n          fill: false,\r\n          borderDash: [5, 5],\r\n          pointRadius: 0,\r\n        },\r\n        {\r\n          label: \"Disponibilidades\",\r\n          type: \"bar\",\r\n          data: [porcentagens[0], porcentagens[1], porcentagens[2], porcentagens[3]],\r\n          backgroundColor: [\r\n            \"rgba(40, 167, 69, 0.5)\",\r\n            \"rgba(23, 162, 184, 0.5)\",\r\n            \"rgba(0, 123, 255, 0.5)\",\r\n            \"rgba(108, 117, 125, 0.5)\",\r\n          ],\r\n          borderColor: [\"#28a745\", \"#0dcaf0\", \"#007bff\", \"#6c757d\"],\r\n          borderWidth: 2,\r\n        },\r\n      ],\r\n    });\r\n    setOptions({\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            type: \"linear\",\r\n            ticks: {\r\n              max: 100,\r\n              min: 50,\r\n              beginAtZero: true,\r\n              callback: function (value) {\r\n                return value.toFixed(1) + \"%\";\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n\r\n      title: {\r\n        display: true,\r\n        text: \"Disponibilidade por Curva (%)\",\r\n      },\r\n\r\n      legend: {\r\n        display: false,\r\n        position: \"bottom\",\r\n        labels: {\r\n          usePointStyle: true,\r\n        },\r\n      },\r\n\r\n      animation: {\r\n        duration: 3000,\r\n      },\r\n    });\r\n    setLoaded(true);\r\n  }, [porcentagens]);\r\n\r\n  return <>{loaded && <Bar data={data} options={options} />}</>;\r\n}\r\n\r\nexport default DisponibilidadeCurva;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nfunction HistoricoCurvas(props) {\r\n  const { disponibilidades } = props;\r\n\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [data, setData] = useState({});\r\n  const [options, setOptions] = useState();\r\n\r\n  const meta = 92;\r\n\r\n  const montarDados = (disponibilidades) => {\r\n    // Declara arrays que serão montadas\r\n    let labels = [];\r\n    let valores = [[], [], [], []];\r\n    let valoresMeta = [];\r\n\r\n    // Monta Labels com as datas de disponibilidades\r\n    for (const data of disponibilidades) {\r\n      let dataMontada =\r\n        data[\"data\"][8] + data[\"data\"][9] + \"/\" + data[\"data\"][5] + data[\"data\"][6];\r\n      labels.push(dataMontada);\r\n    }\r\n\r\n    // Monta valores de disponibilidade\r\n    for (const valor of disponibilidades) {\r\n      valores[0].push(valor[\"curva_1\"]);\r\n      valores[1].push(valor[\"curva_2\"]);\r\n      valores[2].push(valor[\"curva_3\"]);\r\n      valores[3].push(valor[\"curva_4\"]);\r\n    }\r\n\r\n    // Monta valores de meta de acordo com a quantidade de valores considerados\r\n    for (const valor of valores[0]) {\r\n      valoresMeta.push(meta);\r\n    }\r\n\r\n    // Reverte as arrays montadas para exibição correta de novos dados\r\n    labels.reverse();\r\n    for (const valor of valores) valor.reverse();\r\n\r\n    return { valores, labels, valoresMeta };\r\n  };\r\n\r\n  useEffect(() => {\r\n    let { valores, labels, valoresMeta } = montarDados(disponibilidades);\r\n\r\n    setData({\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          // Dataset de produtos disponíveis\r\n          label: \"Curva A\",\r\n          data: valores[0],\r\n          borderColor: [\"#28a745\"],\r\n          borderWidth: 2,\r\n          fill: false,\r\n          pointBackgroundColor: \"#28a745\",\r\n        },\r\n        {\r\n          // Dataset de produtos disponíveis\r\n          label: \"Curva B\",\r\n          data: valores[1],\r\n          borderColor: [\"#17a2b8\"],\r\n          borderWidth: 2,\r\n          fill: false,\r\n          pointBackgroundColor: \"#17a2b8\",\r\n        },\r\n\r\n        {\r\n          // Dataset de produtos disponíveis\r\n          label: \"Curva C\",\r\n          data: valores[2],\r\n          borderColor: [\"#007bff\"],\r\n          borderWidth: 2,\r\n          fill: false,\r\n          pointBackgroundColor: \"#007bff\",\r\n        },\r\n        {\r\n          // Dataset de produtos disponíveis\r\n          label: \"Sem Curva\",\r\n          data: valores[3],\r\n          borderColor: [\"#6c757d\"],\r\n          borderWidth: 2,\r\n          fill: false,\r\n          pointBackgroundColor: \"#6c757d\",\r\n        },\r\n        {\r\n          // Dataset de Meta - Disponíveis\r\n          label: \"Meta\",\r\n          data: valoresMeta,\r\n          borderColor: [\"#17a2b8\"],\r\n          borderWidth: 3,\r\n          fill: false,\r\n          borderDash: [5, 5],\r\n          pointRadius: 0,\r\n          pointBackgroundColor: \"#17a2b8\",\r\n        },\r\n      ],\r\n    });\r\n\r\n    setOptions({\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            type: \"linear\",\r\n            ticks: {\r\n              ticks: 10,\r\n              maxTicksLimit: 10,\r\n              max: 100,\r\n              min: 75,\r\n              callback: function (value) {\r\n                return value.toFixed(1) + \"%\";\r\n              },\r\n            },\r\n            scaleLabel: {\r\n              display: false,\r\n              labelString: \"Disponibilidade\",\r\n            },\r\n          },\r\n        ],\r\n      },\r\n\r\n      legend: {\r\n        display: true,\r\n        position: \"bottom\",\r\n        labels: {\r\n          usePointStyle: true,\r\n          boxWidth: 5,\r\n        },\r\n      },\r\n\r\n      title: {\r\n        display: true,\r\n        text: \"Histórico de Disponibilidade (%)\",\r\n      },\r\n\r\n      animation: {\r\n        duration: 3000,\r\n      },\r\n    });\r\n    setLoaded(true);\r\n  }, []);\r\n\r\n  return <>{loaded && <Line data={data} options={options} />}</>;\r\n}\r\n\r\nexport default HistoricoCurvas;\r\n","import { useEffect, useRef } from 'react';\n/**\n * Runs an effect only when the dependencies have changed, skipping the\n * initial \"on mount\" run. Caution, if the dependency list never changes,\n * the effect is **never run**\n *\n * ```ts\n *  const ref = useRef<HTMLInput>(null);\n *\n *  // focuses an element only if the focus changes, and not on mount\n *  useUpdateEffect(() => {\n *    const element = ref.current?.children[focusedIdx] as HTMLElement\n *\n *    element?.focus()\n *\n *  }, [focusedIndex])\n * ```\n * @param effect An effect to run on mount\n *\n * @category effects\n */\n\nfunction useUpdateEffect(fn, deps) {\n  var isFirst = useRef(true);\n  useEffect(function () {\n    if (isFirst.current) {\n      isFirst.current = false;\n      return;\n    }\n\n    return fn();\n  }, deps);\n}\n\nexport default useUpdateEffect;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('carousel-caption');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CarouselItem = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  const finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'carousel-item'));\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: finalClassName\n  });\n});\nCarouselItem.displayName = 'CarouselItem';\nexport default CarouselItem;","import useEventCallback from '@restart/hooks/useEventCallback';\nimport useUpdateEffect from '@restart/hooks/useUpdateEffect';\nimport useCommittedRef from '@restart/hooks/useCommittedRef';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport Anchor from '@restart/ui/Anchor';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport CarouselCaption from './CarouselCaption';\nimport CarouselItem from './CarouselItem';\nimport { map, forEach } from './ElementChildren';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nconst SWIPE_THRESHOLD = 40;\nconst defaultProps = {\n  slide: true,\n  fade: false,\n  controls: true,\n  indicators: true,\n  indicatorLabels: [],\n  defaultActiveIndex: 0,\n  interval: 5000,\n  keyboard: true,\n  pause: 'hover',\n  wrap: true,\n  touch: true,\n  prevIcon: /*#__PURE__*/_jsx(\"span\", {\n    \"aria-hidden\": \"true\",\n    className: \"carousel-control-prev-icon\"\n  }),\n  prevLabel: 'Previous',\n  nextIcon: /*#__PURE__*/_jsx(\"span\", {\n    \"aria-hidden\": \"true\",\n    className: \"carousel-control-next-icon\"\n  }),\n  nextLabel: 'Next'\n};\n\nfunction isVisible(element) {\n  if (!element || !element.style || !element.parentNode || !element.parentNode.style) {\n    return false;\n  }\n\n  const elementStyle = getComputedStyle(element);\n  return elementStyle.display !== 'none' && elementStyle.visibility !== 'hidden' && getComputedStyle(element.parentNode).display !== 'none';\n}\n\nconst Carousel = /*#__PURE__*/React.forwardRef((uncontrolledProps, ref) => {\n  const {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    bsPrefix,\n    slide,\n    fade,\n    controls,\n    indicators,\n    indicatorLabels,\n    activeIndex,\n    onSelect,\n    onSlide,\n    onSlid,\n    interval,\n    keyboard,\n    onKeyDown,\n    pause,\n    onMouseOver,\n    onMouseOut,\n    wrap,\n    touch,\n    onTouchStart,\n    onTouchMove,\n    onTouchEnd,\n    prevIcon,\n    prevLabel,\n    nextIcon,\n    nextLabel,\n    variant,\n    className,\n    children,\n    ...props\n  } = useUncontrolled(uncontrolledProps, {\n    activeIndex: 'onSelect'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'carousel');\n  const isRTL = useIsRTL();\n  const nextDirectionRef = useRef(null);\n  const [direction, setDirection] = useState('next');\n  const [paused, setPaused] = useState(false);\n  const [isSliding, setIsSliding] = useState(false);\n  const [renderedActiveIndex, setRenderedActiveIndex] = useState(activeIndex || 0);\n\n  if (!isSliding && activeIndex !== renderedActiveIndex) {\n    if (nextDirectionRef.current) {\n      setDirection(nextDirectionRef.current);\n    } else {\n      setDirection((activeIndex || 0) > renderedActiveIndex ? 'next' : 'prev');\n    }\n\n    if (slide) {\n      setIsSliding(true);\n    }\n\n    setRenderedActiveIndex(activeIndex || 0);\n  }\n\n  useEffect(() => {\n    if (nextDirectionRef.current) {\n      nextDirectionRef.current = null;\n    }\n  });\n  let numChildren = 0;\n  let activeChildInterval; // Iterate to grab all of the children's interval values\n  // (and count them, too)\n\n  forEach(children, (child, index) => {\n    ++numChildren;\n\n    if (index === activeIndex) {\n      activeChildInterval = child.props.interval;\n    }\n  });\n  const activeChildIntervalRef = useCommittedRef(activeChildInterval);\n  const prev = useCallback(event => {\n    if (isSliding) {\n      return;\n    }\n\n    let nextActiveIndex = renderedActiveIndex - 1;\n\n    if (nextActiveIndex < 0) {\n      if (!wrap) {\n        return;\n      }\n\n      nextActiveIndex = numChildren - 1;\n    }\n\n    nextDirectionRef.current = 'prev';\n    onSelect == null ? void 0 : onSelect(nextActiveIndex, event);\n  }, [isSliding, renderedActiveIndex, onSelect, wrap, numChildren]); // This is used in the setInterval, so it should not invalidate.\n\n  const next = useEventCallback(event => {\n    if (isSliding) {\n      return;\n    }\n\n    let nextActiveIndex = renderedActiveIndex + 1;\n\n    if (nextActiveIndex >= numChildren) {\n      if (!wrap) {\n        return;\n      }\n\n      nextActiveIndex = 0;\n    }\n\n    nextDirectionRef.current = 'next';\n    onSelect == null ? void 0 : onSelect(nextActiveIndex, event);\n  });\n  const elementRef = useRef();\n  useImperativeHandle(ref, () => ({\n    element: elementRef.current,\n    prev,\n    next\n  })); // This is used in the setInterval, so it should not invalidate.\n\n  const nextWhenVisible = useEventCallback(() => {\n    if (!document.hidden && isVisible(elementRef.current)) {\n      if (isRTL) {\n        prev();\n      } else {\n        next();\n      }\n    }\n  });\n  const slideDirection = direction === 'next' ? 'start' : 'end';\n  useUpdateEffect(() => {\n    if (slide) {\n      // These callbacks will be handled by the <Transition> callbacks.\n      return;\n    }\n\n    onSlide == null ? void 0 : onSlide(renderedActiveIndex, slideDirection);\n    onSlid == null ? void 0 : onSlid(renderedActiveIndex, slideDirection);\n  }, [renderedActiveIndex]);\n  const orderClassName = `${prefix}-item-${direction}`;\n  const directionalClassName = `${prefix}-item-${slideDirection}`;\n  const handleEnter = useCallback(node => {\n    triggerBrowserReflow(node);\n    onSlide == null ? void 0 : onSlide(renderedActiveIndex, slideDirection);\n  }, [onSlide, renderedActiveIndex, slideDirection]);\n  const handleEntered = useCallback(() => {\n    setIsSliding(false);\n    onSlid == null ? void 0 : onSlid(renderedActiveIndex, slideDirection);\n  }, [onSlid, renderedActiveIndex, slideDirection]);\n  const handleKeyDown = useCallback(event => {\n    if (keyboard && !/input|textarea/i.test(event.target.tagName)) {\n      switch (event.key) {\n        case 'ArrowLeft':\n          event.preventDefault();\n\n          if (isRTL) {\n            next(event);\n          } else {\n            prev(event);\n          }\n\n          return;\n\n        case 'ArrowRight':\n          event.preventDefault();\n\n          if (isRTL) {\n            prev(event);\n          } else {\n            next(event);\n          }\n\n          return;\n\n        default:\n      }\n    }\n\n    onKeyDown == null ? void 0 : onKeyDown(event);\n  }, [keyboard, onKeyDown, prev, next, isRTL]);\n  const handleMouseOver = useCallback(event => {\n    if (pause === 'hover') {\n      setPaused(true);\n    }\n\n    onMouseOver == null ? void 0 : onMouseOver(event);\n  }, [pause, onMouseOver]);\n  const handleMouseOut = useCallback(event => {\n    setPaused(false);\n    onMouseOut == null ? void 0 : onMouseOut(event);\n  }, [onMouseOut]);\n  const touchStartXRef = useRef(0);\n  const touchDeltaXRef = useRef(0);\n  const touchUnpauseTimeout = useTimeout();\n  const handleTouchStart = useCallback(event => {\n    touchStartXRef.current = event.touches[0].clientX;\n    touchDeltaXRef.current = 0;\n\n    if (pause === 'hover') {\n      setPaused(true);\n    }\n\n    onTouchStart == null ? void 0 : onTouchStart(event);\n  }, [pause, onTouchStart]);\n  const handleTouchMove = useCallback(event => {\n    if (event.touches && event.touches.length > 1) {\n      touchDeltaXRef.current = 0;\n    } else {\n      touchDeltaXRef.current = event.touches[0].clientX - touchStartXRef.current;\n    }\n\n    onTouchMove == null ? void 0 : onTouchMove(event);\n  }, [onTouchMove]);\n  const handleTouchEnd = useCallback(event => {\n    if (touch) {\n      const touchDeltaX = touchDeltaXRef.current;\n\n      if (Math.abs(touchDeltaX) > SWIPE_THRESHOLD) {\n        if (touchDeltaX > 0) {\n          prev(event);\n        } else {\n          next(event);\n        }\n      }\n    }\n\n    if (pause === 'hover') {\n      touchUnpauseTimeout.set(() => {\n        setPaused(false);\n      }, interval || undefined);\n    }\n\n    onTouchEnd == null ? void 0 : onTouchEnd(event);\n  }, [touch, pause, prev, next, touchUnpauseTimeout, interval, onTouchEnd]);\n  const shouldPlay = interval != null && !paused && !isSliding;\n  const intervalHandleRef = useRef();\n  useEffect(() => {\n    var _ref, _activeChildIntervalR;\n\n    if (!shouldPlay) {\n      return undefined;\n    }\n\n    const nextFunc = isRTL ? prev : next;\n    intervalHandleRef.current = window.setInterval(document.visibilityState ? nextWhenVisible : nextFunc, (_ref = (_activeChildIntervalR = activeChildIntervalRef.current) != null ? _activeChildIntervalR : interval) != null ? _ref : undefined);\n    return () => {\n      if (intervalHandleRef.current !== null) {\n        clearInterval(intervalHandleRef.current);\n      }\n    };\n  }, [shouldPlay, prev, next, activeChildIntervalRef, interval, nextWhenVisible, isRTL]);\n  const indicatorOnClicks = useMemo(() => indicators && Array.from({\n    length: numChildren\n  }, (_, index) => event => {\n    onSelect == null ? void 0 : onSelect(index, event);\n  }), [indicators, numChildren, onSelect]);\n  return /*#__PURE__*/_jsxs(Component, {\n    ref: elementRef,\n    ...props,\n    onKeyDown: handleKeyDown,\n    onMouseOver: handleMouseOver,\n    onMouseOut: handleMouseOut,\n    onTouchStart: handleTouchStart,\n    onTouchMove: handleTouchMove,\n    onTouchEnd: handleTouchEnd,\n    className: classNames(className, prefix, slide && 'slide', fade && `${prefix}-fade`, variant && `${prefix}-${variant}`),\n    children: [indicators && /*#__PURE__*/_jsx(\"div\", {\n      className: `${prefix}-indicators`,\n      children: map(children, (_, index) => /*#__PURE__*/_jsx(\"button\", {\n        type: \"button\",\n        \"data-bs-target\": \"\" // Bootstrap requires this in their css.\n        ,\n        \"aria-label\": indicatorLabels != null && indicatorLabels.length ? indicatorLabels[index] : `Slide ${index + 1}`,\n        className: index === renderedActiveIndex ? 'active' : undefined,\n        onClick: indicatorOnClicks ? indicatorOnClicks[index] : undefined,\n        \"aria-current\": index === renderedActiveIndex\n      }, index))\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: `${prefix}-inner`,\n      children: map(children, (child, index) => {\n        const isActive = index === renderedActiveIndex;\n        return slide ? /*#__PURE__*/_jsx(TransitionWrapper, {\n          in: isActive,\n          onEnter: isActive ? handleEnter : undefined,\n          onEntered: isActive ? handleEntered : undefined,\n          addEndListener: transitionEndListener,\n          children: (status, innerProps) => /*#__PURE__*/React.cloneElement(child, { ...innerProps,\n            className: classNames(child.props.className, isActive && status !== 'entered' && orderClassName, (status === 'entered' || status === 'exiting') && 'active', (status === 'entering' || status === 'exiting') && directionalClassName)\n          })\n        }) : /*#__PURE__*/React.cloneElement(child, {\n          className: classNames(child.props.className, isActive && 'active')\n        });\n      })\n    }), controls && /*#__PURE__*/_jsxs(_Fragment, {\n      children: [(wrap || activeIndex !== 0) && /*#__PURE__*/_jsxs(Anchor, {\n        className: `${prefix}-control-prev`,\n        onClick: prev,\n        children: [prevIcon, prevLabel && /*#__PURE__*/_jsx(\"span\", {\n          className: \"visually-hidden\",\n          children: prevLabel\n        })]\n      }), (wrap || activeIndex !== numChildren - 1) && /*#__PURE__*/_jsxs(Anchor, {\n        className: `${prefix}-control-next`,\n        onClick: next,\n        children: [nextIcon, nextLabel && /*#__PURE__*/_jsx(\"span\", {\n          className: \"visually-hidden\",\n          children: nextLabel\n        })]\n      })]\n    })]\n  });\n});\nCarousel.displayName = 'Carousel';\nCarousel.defaultProps = defaultProps;\nexport default Object.assign(Carousel, {\n  Caption: CarouselCaption,\n  Item: CarouselItem\n});","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport Menu from \"../../components/Menu\";\r\nimport GraficoDisponibilidade from \"../../components/DashCompras/GraficoDisponibilidade\";\r\nimport HistoricoDisponibilidade from \"../../components/DashCompras/HistoricoDisponibilidade\";\r\n\r\nimport IndisponibilidadeCurva from \"../../components/DashCompras/IndisponibilidadeCurva\";\r\nimport DisponibilidadeCurva from \"../../components/DashCompras/DisponibilidadeCurva\";\r\nimport HistoricoCurvas from \"../../components/DashCompras/HistoricoCurvas\";\r\n\r\nimport api from \"../../services/api\";\r\n\r\nimport { BsChevronRight } from \"react-icons/bs\";\r\n\r\nimport {\r\n  Container,\r\n  Card,\r\n  Col,\r\n  Row,\r\n  Spinner,\r\n  ListGroup,\r\n  Badge,\r\n  Carousel,\r\n} from \"react-bootstrap\";\r\n\r\nfunction DashboardCompras() {\r\n  const [ativos, setAtivos] = useState();\r\n  const [disponiveis, setDisponiveis] = useState();\r\n  const [indisponiveis, setIndisponiveis] = useState();\r\n  const [pDisponivel, setPDisponivel] = useState();\r\n  const [pIndisponivel, setPIndisponivel] = useState();\r\n  const [abaixoMin, setAbaixoMin] = useState();\r\n  const [pAbaixoMin, setPAbaixoMin] = useState();\r\n  const [disponibilidades, setDisponibilidades] = useState([]);\r\n\r\n  const [indisponivelCurva, setIndisponivelCurva] = useState([]);\r\n  const [pIndisponivelCurva, setPIndisponivelCurva] = useState([]);\r\n  const [pDisponivelCurva, setPDisponivelCurva] = useState([]);\r\n  const [disponibilidadesCurva, setDisponibilidadesCurva] = useState([]);\r\n\r\n  const [carregado, setCarregado] = useState(false);\r\n\r\n  const [carregaChamadaDash, setCarregaChamadaDash] = useState(0);\r\n  const intervalo = useRef(null);\r\n\r\n  const iniciaContador = () => {\r\n    intervalo.current = setInterval(carregaDash, 180000);\r\n  };\r\n\r\n  const stopCounter = () => clearInterval(intervalo.current);\r\n\r\n  useEffect(() => {\r\n    carregaDash();\r\n    iniciaContador();\r\n  }, [carregaChamadaDash]);\r\n\r\n  const carregaDash = async () => {\r\n    const pathname = window.location.pathname;\r\n\r\n    // Para o contador caso sai do escopo da página do dashboard de compras\r\n    if (!pathname.includes(\"dashcompras\")) {\r\n      stopCounter();\r\n      return;\r\n    }\r\n\r\n    await api\r\n      .get(\"/compras/dashboard\")\r\n      .then((res) => {\r\n        // Desestrutura variáveis da resposta do dashboard\r\n        // Nomes coerentes com os nomes do retorno da API\r\n        const {\r\n          ativos,\r\n          disponiveis,\r\n          indisponiveis,\r\n          pdisponivel,\r\n          pindisponivel,\r\n          abaixoMin,\r\n          pAbaixoMin,\r\n          disponibilidades,\r\n          pIndisponivelCurva,\r\n          indisponivelPorCurva,\r\n          pDisponivelPorCurva,\r\n          disponiblidadesCurva,\r\n        } = res.data;\r\n\r\n        setAtivos(ativos);\r\n        setDisponiveis(disponiveis);\r\n        setIndisponiveis(indisponiveis);\r\n        setPDisponivel(pdisponivel);\r\n        setPIndisponivel(pindisponivel);\r\n        setAbaixoMin(abaixoMin);\r\n        setPAbaixoMin(pAbaixoMin);\r\n        setDisponibilidades(disponibilidades);\r\n\r\n        setIndisponivelCurva(indisponivelPorCurva);\r\n        setPIndisponivelCurva(pIndisponivelCurva);\r\n        setPDisponivelCurva(pDisponivelPorCurva);\r\n        setDisponibilidadesCurva(disponiblidadesCurva);\r\n\r\n        setCarregado(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"Erro na requisição de atualização dos dados da dashboard de compras\"\r\n        );\r\n      });\r\n  };\r\n\r\n  const [index, setIndex] = useState(0);\r\n\r\n  const handleSelect = (selectedIndex, e) => {\r\n    setIndex(selectedIndex);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Menu logged={true} />\r\n\r\n      {!carregado && (\r\n        <Container fluid className=\"text-center container-binx\">\r\n          <Container fluid className=\"center-vertically\">\r\n            <Spinner\r\n              animation=\"grow\"\r\n              size=\"md\"\r\n              role=\"status\"\r\n              aria-hidden=\"true\"\r\n            />\r\n          </Container>\r\n        </Container>\r\n      )}\r\n\r\n      {carregado && (\r\n        <>\r\n          <Carousel interval={null} activeIndex={index} onSelect={handleSelect}>\r\n            <Carousel.Item>\r\n              <Container className=\"mt-4 p-0\">\r\n                {/* Primeira Linha */}\r\n                <Row className=\"mb-4\">\r\n                  {/* Card de Produtos Disponíveis */}\r\n                  <Col>\r\n                    <Card className=\"text-center\">\r\n                      <Card.Header>Produtos Disponíveis</Card.Header>\r\n                      <Card.Body>\r\n                        <Card.Text>\r\n                          Quantidade de produtos com estoque disponível para venda\r\n                        </Card.Text>\r\n                        <ListGroup>\r\n                          <ListGroup.Item className=\"p-2\">\r\n                            <Row>\r\n                              <Col>\r\n                                <h2>\r\n                                  <Badge bg=\"success\">{disponiveis}</Badge>\r\n                                </h2>\r\n                              </Col>\r\n                              <Col>\r\n                                <h2>\r\n                                  <Badge bg=\"success\">{pDisponivel}%</Badge>\r\n                                </h2>\r\n                              </Col>\r\n                            </Row>\r\n                          </ListGroup.Item>\r\n                          <ListGroup>\r\n                            <ListGroup.Item className=\"mt-2\">\r\n                              Nossa meta é manter acima de: <Badge bg=\"info\">92%</Badge>\r\n                            </ListGroup.Item>\r\n                          </ListGroup>\r\n                        </ListGroup>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n\r\n                  {/* Gráfico de Disponibilidade */}\r\n                  <Col>\r\n                    <div style={{ height: \"250px\" }}>\r\n                      <GraficoDisponibilidade\r\n                        pDisponivel={pDisponivel}\r\n                        pIndisponivel={pIndisponivel}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n\r\n                  {/* Card de Produtos Indisponíveis */}\r\n                  <Col>\r\n                    <Card className=\"text-center\">\r\n                      <Card.Header>Produtos Indisponíveis</Card.Header>\r\n                      <Card.Body>\r\n                        {/* <Card.Title>Produtos</Card.Title> */}\r\n                        <Card.Text>\r\n                          Quantidade de produtos sem estoque disponível para venda\r\n                        </Card.Text>\r\n                        <ListGroup>\r\n                          <ListGroup.Item className=\"p-2\">\r\n                            <Row>\r\n                              <Col>\r\n                                <h2>\r\n                                  <Badge bg=\"danger\">{indisponiveis}</Badge>\r\n                                </h2>\r\n                              </Col>\r\n                              <Col>\r\n                                <h2>\r\n                                  <Badge bg=\"danger\">{pIndisponivel}%</Badge>\r\n                                </h2>\r\n                              </Col>\r\n                            </Row>\r\n                          </ListGroup.Item>\r\n                        </ListGroup>\r\n                        <ListGroup>\r\n                          <ListGroup.Item className=\"mt-2\">\r\n                            Nossa meta é manter abaixo de:{\"  \"}\r\n                            <Badge bg=\"info\">8%</Badge>\r\n                          </ListGroup.Item>\r\n                        </ListGroup>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                </Row>\r\n\r\n                {/* Segunda Linha */}\r\n                <Row className=\"mt-4 align-items-center\">\r\n                  {/* Quantidade Total de Produtos Ativos */}\r\n                  <Col>\r\n                    <Card className=\"text-center\">\r\n                      <Card.Header>Produtos Ativos</Card.Header>\r\n                      <Card.Body>\r\n                        <Card.Text>Quantidade de produtos ativos no sistema</Card.Text>\r\n                        <ListGroup className=\"p-0\">\r\n                          <ListGroup.Item className=\"p-2\">\r\n                            <h2>\r\n                              <Badge bg=\"primary\">{ativos}</Badge>\r\n                            </h2>\r\n                          </ListGroup.Item>\r\n                        </ListGroup>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n\r\n                  {/* Segundo Gráfico */}\r\n                  <Col>\r\n                    <div style={{ height: \"350px\" }}>\r\n                      <HistoricoDisponibilidade disponibilidades={disponibilidades} />\r\n                    </div>\r\n                  </Col>\r\n\r\n                  {/* Card de Situação de Estoque*/}\r\n                  <Col>\r\n                    <Card className=\"text-center\">\r\n                      <Card.Header>Situação de Estoque</Card.Header>\r\n                      <Card.Body>\r\n                        <Card.Text>Produtos com estoque abaixo do mínimo</Card.Text>\r\n                        <ListGroup>\r\n                          <ListGroup.Item className=\"p-2\">\r\n                            <Row>\r\n                              <Col>\r\n                                <h2>\r\n                                  <Badge bg=\"warning\">{abaixoMin}</Badge>\r\n                                </h2>\r\n                              </Col>\r\n                              <Col>\r\n                                <h2>\r\n                                  <Badge bg=\"warning\">{pAbaixoMin}%</Badge>\r\n                                </h2>\r\n                              </Col>\r\n                            </Row>\r\n                          </ListGroup.Item>\r\n                        </ListGroup>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            </Carousel.Item>\r\n\r\n            <Carousel.Item>\r\n              <Container className=\"mt-4 p-0\">\r\n                <Row className=\"mt-4 align-items-center\">\r\n                  <Col>\r\n                    <Card className=\"text-center\">\r\n                      <Card.Header>Indisponibilidade por Curva</Card.Header>\r\n                      <Card.Body>\r\n                        <Card.Text>Produtos Indisponíveis</Card.Text>\r\n                        <ListGroup>\r\n                          <ListGroup.Item className=\"p-2\">\r\n                            <Row className=\"align-items-end\">\r\n                              <Col>\r\n                                Curva A\r\n                                <h5>\r\n                                  <Badge bg=\"success\">{indisponivelCurva[0]}</Badge>\r\n                                </h5>\r\n                              </Col>\r\n                              <Col>\r\n                                Curva B\r\n                                <h5>\r\n                                  <Badge bg=\"info\">{indisponivelCurva[1]}</Badge>\r\n                                </h5>\r\n                              </Col>\r\n                              <Col>\r\n                                Curva C\r\n                                <h5>\r\n                                  <Badge bg=\"primary\">{indisponivelCurva[2]}</Badge>\r\n                                </h5>\r\n                              </Col>\r\n                              <Col>\r\n                                Sem Curva\r\n                                <h5>\r\n                                  <Badge bg=\"secondary\">{indisponivelCurva[3]}</Badge>\r\n                                </h5>\r\n                              </Col>\r\n                            </Row>\r\n                          </ListGroup.Item>\r\n                        </ListGroup>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                  <Col>\r\n                    <div style={{ height: \"200px\" }}>\r\n                      <IndisponibilidadeCurva porcentagens={pIndisponivelCurva} />\r\n                    </div>\r\n                  </Col>\r\n                  <Col>\r\n                    <Card className=\"text-center\">\r\n                      <Card.Header>Indisponibilidade Relativa</Card.Header>\r\n                      <Card.Body>\r\n                        <Card.Text>Parcela dos produtos indisponíveis</Card.Text>\r\n                        <ListGroup className=\"mt-2\">\r\n                          <ListGroup.Item className=\"p-2\">\r\n                            <Row className=\"align-items-end\">\r\n                              <Col>\r\n                                Curva A\r\n                                <h5>\r\n                                  <Badge bg=\"success\">{pIndisponivelCurva[0]}%</Badge>\r\n                                </h5>\r\n                              </Col>\r\n                              <Col>\r\n                                Curva B\r\n                                <h5>\r\n                                  <Badge bg=\"info\">{pIndisponivelCurva[1]}%</Badge>\r\n                                </h5>\r\n                              </Col>\r\n                              <Col>\r\n                                Curva C\r\n                                <h5>\r\n                                  <Badge bg=\"primary\">{pIndisponivelCurva[2]}%</Badge>\r\n                                </h5>\r\n                              </Col>\r\n                              <Col>\r\n                                Sem Curva\r\n                                <h5>\r\n                                  <Badge bg=\"secondary\">{pIndisponivelCurva[3]}%</Badge>\r\n                                </h5>\r\n                              </Col>\r\n                            </Row>\r\n                          </ListGroup.Item>\r\n                        </ListGroup>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"mt-4 align-items-center\">\r\n                  <Col>\r\n                    <div style={{ height: \"250px\" }}>\r\n                      <DisponibilidadeCurva porcentagens={pDisponivelCurva} />\r\n                    </div>\r\n                  </Col>\r\n                  <Col>\r\n                    <Card className=\"text-center\">\r\n                      <Card.Header>Disponibilidade por Curva</Card.Header>\r\n                      <Card.Body>\r\n                        <Card.Text>Produtos disponíveis por curva (total)</Card.Text>\r\n                        <ListGroup className=\"mt-2\">\r\n                          <ListGroup.Item className=\"p-2\">\r\n                            <Row className=\"align-items-end\">\r\n                              <Col>\r\n                                Curva A\r\n                                <h5>\r\n                                  <Badge bg=\"success\">{pDisponivelCurva[0]}%</Badge>\r\n                                </h5>\r\n                              </Col>\r\n                              <Col>\r\n                                Curva B\r\n                                <h5>\r\n                                  <Badge bg=\"info\">{pDisponivelCurva[1]}%</Badge>\r\n                                </h5>\r\n                              </Col>\r\n                              <Col>\r\n                                Curva C\r\n                                <h5>\r\n                                  <Badge bg=\"primary\">{pDisponivelCurva[2]}%</Badge>\r\n                                </h5>\r\n                              </Col>\r\n                              <Col>\r\n                                Sem Curva\r\n                                <h5>\r\n                                  <Badge bg=\"secondary\">{pDisponivelCurva[3]}%</Badge>\r\n                                </h5>\r\n                              </Col>\r\n                            </Row>\r\n                          </ListGroup.Item>\r\n                        </ListGroup>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                  <Col>\r\n                    <div style={{ height: \"300px\" }}>\r\n                      <HistoricoCurvas disponibilidades={disponibilidadesCurva} />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            </Carousel.Item>\r\n          </Carousel>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DashboardCompras;\r\n"],"sourceRoot":""}