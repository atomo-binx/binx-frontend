{"version":3,"sources":["assets/logo_3.png","components/Menu/index.js","services/api.js","components/ButtonBlock/index.js","../node_modules/currency.js/dist/currency.min.js","../node_modules/react-bootstrap/esm/Badge.js","../node_modules/react-bootstrap/esm/Table.js","pages/CalculoMargem/index.js"],"names":["Menu","props","useHistory","useState","vendasDrop","setVendasDrop","comprasDrop","setComprasDrop","expedicaoDrop","setExpedicaoDrop","relatoriosDrop","setRelatoriosDrop","cadastrosDrop","setCadastrosDrops","userDrop","setUserDrop","setVendasActive","comprasActive","setComprasActive","expedicaoActive","setExpedicaoActive","relatoriosActive","setRelatoriosActive","cadastrosActive","setCadastrosActive","carregandoLogout","setCarregandoLogout","userName","setUserName","userContext","useContext","AuthContext","useEffect","pathname","window","location","includes","console","log","attributes","Navbar","bg","variant","expand","sticky","Container","fluid","to","className","Brand","src","NavbarLogo","width","alt","Toggle","logged","Collapse","Nav","navbarScroll","NavDropdown","title","show","onMouseEnter","onMouseLeave","Item","as","Link","href","active","size","onClick","Auth","signOut","then","data","reload","catch","error","Spinner","animation","baseURL","process","REACT_APP_ENVIROMENT","api","axios","create","ButtonBlock","children","module","exports","e","b","a","this","Object","assign","m","d","Math","pow","precision","intValue","g","value","increment","groups","useVedic","n","p","s","arguments","length","c","decimal","h","errorOnInvalid","k","fromCents","l","f","RegExp","replace","Error","toFixed","round","symbol","separator","pattern","negativePattern","format","split","q","prototype","add","subtract","multiply","divide","distribute","abs","push","dollars","cents","toString","toJSON","Badge","React","ref","bsPrefix","pill","text","Component","prefix","useBootstrapPrefix","_jsx","classNames","displayName","defaultProps","Table","striped","bordered","borderless","hover","responsive","decoratedBsPrefix","classes","table","responsiveClass","BRL","currency","formatBRL","CalculoMargem","tipoCalculo","setTipoCalculo","identificador","setIdentificador","dados","setDados","itens","setItens","qntdItens","setQntdItens","carregando","setCarregando","respostaCarregada","setRespostaCarregada","custos","setCustos","margens","setMargens","formRef","useRef","carregarDados","event","preventDefault","current","reset","urlAlvo","post","resposta","message","xs","md","lg","Overflow","ToC","Header","onSubmit","Control","custom","onChange","target","disabled","placeholder","type","block","role","Title","Subtitle","Body","sm","Group","Label","numeroProposta","readOnly","cliente","vendedor","situacao","subTotal","frete","total","map","item","index","sku","nome","quantidade","precoLista","descontoItem","valorUnidade","htmlSize","arrayCustos","arrayMargens","valorVenda","valorCusto","margem","parseFloat","alterarMargem","undefined"],"mappings":"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","file":"static/js/15.91419d89.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo_3.edbd2b14.png\";","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Auth } from \"../../services/amplify\";\r\n\r\nimport { Navbar, Nav, NavDropdown, Container, Spinner } from \"react-bootstrap\";\r\nimport { BsPersonCircle } from \"react-icons/bs\";\r\n\r\nimport NavbarLogo from \"../../assets/logo_3.png\";\r\n\r\nimport AuthContext from \"../../contexts/auth\";\r\n\r\nimport \"./styles.css\";\r\n\r\nfunction Menu(props) {\r\n  const history = useHistory();\r\n\r\n  const [vendasDrop, setVendasDrop] = useState(false);\r\n  const [comprasDrop, setComprasDrop] = useState(false);\r\n  const [expedicaoDrop, setExpedicaoDrop] = useState(false);\r\n  const [relatoriosDrop, setRelatoriosDrop] = useState(false);\r\n  const [cadastrosDrop, setCadastrosDrops] = useState(false);\r\n  const [userDrop, setUserDrop] = useState(false);\r\n\r\n  const [vendasActive, setVendasActive] = useState(false);\r\n  const [comprasActive, setComprasActive] = useState(false);\r\n  const [expedicaoActive, setExpedicaoActive] = useState(false);\r\n  const [relatoriosActive, setRelatoriosActive] = useState(false);\r\n  const [cadastrosActive, setCadastrosActive] = useState(false);\r\n\r\n  const [carregandoLogout, setCarregandoLogout] = useState(false);\r\n\r\n  const [userName, setUserName] = useState(\"\");\r\n\r\n  const userContext = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    const pathname = window.location.pathname;\r\n\r\n    if (pathname.includes(\"vendas\")) setVendasActive(true);\r\n    if (pathname.includes(\"compras\")) setComprasActive(true);\r\n    if (pathname.includes(\"aprovarpedidos\")) setExpedicaoActive(true);\r\n    if (pathname.includes(\"relatorio\")) setRelatoriosActive(true);\r\n    if (pathname.includes(\"prospeccao\")) setVendasActive(true);\r\n    if (pathname.includes(\"produtos\")) setCadastrosActive(true);\r\n\r\n    // Debug\r\n    // Exibir o objeto recebido via contexto\r\n    console.log(userContext);\r\n\r\n    if (userContext) {\r\n      setUserName(userContext.attributes[\"custom:displayname\"]);\r\n    } else {\r\n      setUserName(\"Convidado\");\r\n    }\r\n  }, []);\r\n\r\n  const signOut = () => {\r\n    setCarregandoLogout(true);\r\n\r\n    Auth.signOut()\r\n      .then((data) => {\r\n        window.location.reload();\r\n      })\r\n      .catch((error) => {\r\n        setCarregandoLogout(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" sticky=\"top\">\r\n        <Container fluid>\r\n          <Link to=\"/\" className=\"m-0 p-0\">\r\n            <Navbar.Brand className=\"\">\r\n              <img src={NavbarLogo} width=\"70\" alt=\"Logo Binx\" />\r\n            </Navbar.Brand>\r\n          </Link>\r\n\r\n          <Navbar.Toggle />\r\n\r\n          {props.logged && (\r\n            <>\r\n              <Navbar.Collapse>\r\n                <Nav className=\"mr-auto\" navbarScroll>\r\n                  {/* Dropdown de Vendas */}\r\n                  <NavDropdown\r\n                    title=\"Vendas\"\r\n                    show={vendasDrop}\r\n                    onMouseEnter={() => setVendasDrop(true)}\r\n                    onMouseLeave={() => setVendasDrop(false)}\r\n                  >\r\n                    <NavDropdown.Item as={Link} href=\"/fretevendas\" to=\"/fretevendas\">\r\n                      Cálculo de Frete\r\n                    </NavDropdown.Item>\r\n                    <NavDropdown.Item as={Link} href=\"/calculomargem\" to=\"/calculomargem\">\r\n                      Cálculo de Margem\r\n                    </NavDropdown.Item>\r\n                    <NavDropdown.Item as={Link} href=\"/prospeccao\" to=\"/prospeccao\">\r\n                      Prospecção de Clientes\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n\r\n                  {/* Dropdown de Compras */}\r\n                  <NavDropdown\r\n                    title=\"Compras\"\r\n                    show={comprasDrop}\r\n                    onMouseEnter={() => setComprasDrop(!comprasDrop)}\r\n                    onMouseLeave={() => setComprasDrop(false)}\r\n                    active={comprasActive}\r\n                  >\r\n                    <NavDropdown.Item as={Link} href=\"/dashcompras\" to=\"/dashcompras\">\r\n                      Dashboard de Compras\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n\r\n                  {/* Dropdown da Expedição */}\r\n                  <NavDropdown\r\n                    title=\"Expedição\"\r\n                    show={expedicaoDrop}\r\n                    onMouseEnter={() => setExpedicaoDrop(!expedicaoDrop)}\r\n                    onMouseLeave={() => setExpedicaoDrop(false)}\r\n                    active={expedicaoActive}\r\n                  >\r\n                    <NavDropdown.Item href=\"expedicao/aprovarpedidos\" to=\"/aprovarpedidos\">\r\n                      Aprovação de Pedidos\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n\r\n                  {/* Dropdown de Relatórios */}\r\n                  <NavDropdown\r\n                    title=\"Relatórios\"\r\n                    show={relatoriosDrop}\r\n                    onMouseEnter={() => setRelatoriosDrop(!relatoriosDrop)}\r\n                    onMouseLeave={() => setRelatoriosDrop(false)}\r\n                    active={relatoriosActive}\r\n                  >\r\n                    <NavDropdown.Item href=\"/relatoriominmax\" to=\"/relatoriominmax\">\r\n                      Estoque Mínimo e Máximo\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n\r\n                  {/* Dropdown da Cadastros */}\r\n                  <NavDropdown\r\n                    title=\"Cadastros\"\r\n                    show={cadastrosDrop}\r\n                    onMouseEnter={() => setCadastrosDrops(!cadastrosDrop)}\r\n                    onMouseLeave={() => setCadastrosDrops(false)}\r\n                    active={cadastrosActive}\r\n                  >\r\n                    <NavDropdown.Item href=\"/produtos\" to=\"/produtos\">\r\n                      Produtos\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n                </Nav>\r\n              </Navbar.Collapse>\r\n\r\n              <Navbar.Collapse className=\"justify-content-end\">\r\n                <Nav className=\"mr-auto\" navbarScroll>\r\n                  <BsPersonCircle />\r\n                  <NavDropdown\r\n                    className=\"dropdown-user\"\r\n                    title={\r\n                      <div className=\"user-dropdown-div \">\r\n                        <div className=\"m-0\">\r\n                          <BsPersonCircle size={25}/>\r\n                        </div>\r\n                        <div className=\"user-name\">{userName}</div>\r\n                      </div>\r\n                    }\r\n                    show={userDrop}\r\n                    onMouseEnter={() => setUserDrop(true)}\r\n                    onMouseLeave={() => setUserDrop(false)}\r\n                  >\r\n                    <NavDropdown.Item onClick={signOut}>\r\n                      {!carregandoLogout && <>Sair</>}\r\n                      {carregandoLogout && (\r\n                        <div className=\"user-menu-sair\">\r\n                          <p>Sair</p>\r\n                          <Spinner animation=\"grow\" size=\"sm\" />\r\n                        </div>\r\n                      )}\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n                </Nav>\r\n              </Navbar.Collapse>\r\n            </>\r\n          )}\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Menu;\r\n","import axios from \"axios\";\r\n\r\n// Para utilização com certificado SSL inválido\r\n// import https from \"https\";\r\n// const api = axios.create({\r\n//   baseURL: \"https://api.binx.com.br/api\",\r\n//   httpsAgent: new https.Agent({\r\n//     rejectUnauthorized: false,\r\n//   }),\r\n// });\r\n\r\nconst enviroment = process.env.REACT_APP_ENVIROMENT || \"development\";\r\n\r\nlet baseURL =\r\n  enviroment === \"development\"\r\n    ? \"http://localhost:4005/api\"\r\n    : \"https://api.binx.com.br/api\";\r\n\r\nconst api = axios.create({ baseURL: baseURL });\r\n\r\nexport default api;\r\n","import React from \"react\";\r\n\r\nexport default function ButtonBlock(props) {\r\n  return <div className=\"d-grid gap-2\">{props.children}</div>;\r\n}\r\n","/*\n currency.js - v2.0.4\n http://scurker.github.io/currency.js\n\n Copyright (c) 2021 Jason Wilson\n Released under MIT license\n*/\n(function(e,g){\"object\"===typeof exports&&\"undefined\"!==typeof module?module.exports=g():\"function\"===typeof define&&define.amd?define(g):(e=e||self,e.currency=g())})(this,function(){function e(b,a){if(!(this instanceof e))return new e(b,a);a=Object.assign({},m,a);var d=Math.pow(10,a.precision);this.intValue=b=g(b,a);this.value=b/d;a.increment=a.increment||1/d;a.groups=a.useVedic?n:p;this.s=a;this.p=d}function g(b,a){var d=2<arguments.length&&void 0!==arguments[2]?arguments[2]:!0;var c=a.decimal;\nvar h=a.errorOnInvalid,k=a.fromCents,l=Math.pow(10,a.precision),f=b instanceof e;if(f&&k)return b.intValue;if(\"number\"===typeof b||f)c=f?b.value:b;else if(\"string\"===typeof b)h=new RegExp(\"[^-\\\\d\"+c+\"]\",\"g\"),c=new RegExp(\"\\\\\"+c,\"g\"),c=(c=b.replace(/\\((.*)\\)/,\"-$1\").replace(h,\"\").replace(c,\".\"))||0;else{if(h)throw Error(\"Invalid Input\");c=0}k||(c=(c*l).toFixed(4));return d?Math.round(c):c}var m={symbol:\"$\",separator:\",\",decimal:\".\",errorOnInvalid:!1,precision:2,pattern:\"!#\",negativePattern:\"-!#\",format:function(b,\na){var d=a.pattern,c=a.negativePattern,h=a.symbol,k=a.separator,l=a.decimal;a=a.groups;var f=(\"\"+b).replace(/^-/,\"\").split(\".\"),q=f[0];f=f[1];return(0<=b.value?d:c).replace(\"!\",h).replace(\"#\",q.replace(a,\"$1\"+k)+(f?l+f:\"\"))},fromCents:!1},p=/(\\d)(?=(\\d{3})+\\b)/g,n=/(\\d)(?=(\\d\\d)+\\d\\b)/g;e.prototype={add:function(b){var a=this.s,d=this.p;return e((this.intValue+g(b,a))/(a.fromCents?1:d),a)},subtract:function(b){var a=this.s,d=this.p;return e((this.intValue-g(b,a))/(a.fromCents?1:d),a)},multiply:function(b){var a=\nthis.s;return e(this.intValue*b/(a.fromCents?1:Math.pow(10,a.precision)),a)},divide:function(b){var a=this.s;return e(this.intValue/g(b,a,!1),a)},distribute:function(b){var a=this.intValue,d=this.p,c=this.s,h=[],k=Math[0<=a?\"floor\":\"ceil\"](a/b),l=Math.abs(a-k*b);for(d=c.fromCents?1:d;0!==b;b--){var f=e(k/d,c);0<l--&&(f=f[0<=a?\"add\":\"subtract\"](1/d));h.push(f)}return h},dollars:function(){return~~this.value},cents:function(){return~~(this.intValue%this.p)},format:function(b){var a=this.s;return\"function\"===\ntypeof b?b(this,a):a.format(this,Object.assign({},a,b))},toString:function(){var b=this.s,a=b.increment;return(Math.round(this.intValue/this.p/a)*a).toFixed(b.precision)},toJSON:function(){return this.value}};return e});\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  bg: 'primary',\n  pill: false\n};\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg,\n  pill,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-striped`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;","import React, { useRef, useState, useEffect } from \"react\";\r\nimport Menu from \"../../components/Menu\";\r\n\r\nimport currency from \"currency.js\";\r\n\r\nimport api from \"../../services/api\";\r\n\r\nimport \"react-bootstrap-drawer/lib/style.css\";\r\nimport { Drawer } from \"react-bootstrap-drawer\";\r\n\r\nimport ButtonBlock from \"../../components/ButtonBlock\";\r\n\r\nimport {\r\n  Card,\r\n  Badge,\r\n  Container,\r\n  Row,\r\n  Form,\r\n  Button,\r\n  Col,\r\n  Table,\r\n  Spinner,\r\n  Alert,\r\n  Collapse,\r\n} from \"react-bootstrap\";\r\n\r\n// Funções auxiliares para manuseio de valores monetários\r\nconst BRL = (value, precision) => currency(value, { precision });\r\nconst formatBRL = (currency, symbol) =>\r\n  currency.format({ symbol }).replace(\",\", \"+\").replace(\".\", \",\").replace(\"+\", \".\");\r\n\r\nfunction CalculoMargem() {\r\n  const [tipoCalculo, setTipoCalculo] = useState(\"proposta\");\r\n  const [identificador, setIdentificador] = useState(\"\");\r\n\r\n  const [dados, setDados] = useState([]);\r\n  const [itens, setItens] = useState([]);\r\n\r\n  const [qntdItens, setQntdItens] = useState(0);\r\n\r\n  const [carregando, setCarregando] = useState(false);\r\n  const [respostaCarregada, setRespostaCarregada] = useState(false);\r\n\r\n  const [custos, setCustos] = useState([]);\r\n  const [margens, setMargens] = useState([]);\r\n\r\n  const [margemAtual, setMargemAtual] = useState(0);\r\n\r\n  const formRef = useRef(null);\r\n\r\n  const alterarMargem = (index, value) => {\r\n    // Prepara o valor de value para ser trabalhado como número\r\n    value = value.replace(\",\", \".\");\r\n\r\n    // Adquire valores atuais das arrays nos states\r\n    let arrayCustos = [...custos];\r\n    let arrayMargens = [...margens];\r\n\r\n    // Atualiza valor de custo\r\n    arrayCustos[index] = value;\r\n\r\n    // Calcula nova margem\r\n    let valorVenda = itens[index].valorUnidade;\r\n    let valorCusto = arrayCustos[index];\r\n    let margem = parseFloat(((valorVenda - valorCusto) / valorVenda) * 100).toFixed(2);\r\n\r\n    // Margem = ( Custo / Venda ) - 1\r\n\r\n    // Atualiza valor de margem\r\n    arrayMargens[index] = margem;\r\n\r\n    // Calcula margem atual do pedido completo\r\n\r\n    // A margem total deve levar em consideração o pedido completo\r\n    // Deve ser calculado custo * quantidade, e então calculado em relação ao valor subTotal\r\n\r\n    // let custoTotal = arrayCustos.reduce(function (acc, val) {\r\n    //   return BRL(acc, 3).add(val);\r\n    // }, 0);\r\n\r\n    // let margemTotal = parseFloat(\r\n    //   ((dados.subTotal - custoTotal) / dados.subTotal) * 100\r\n    // ).toFixed(2);\r\n\r\n    // Atualiza os states\r\n    setCustos(arrayCustos);\r\n    setMargens(arrayMargens);\r\n  };\r\n\r\n  const carregarDados = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // Configura flags de carregamento\r\n    setCarregando(true);\r\n    setRespostaCarregada(false);\r\n\r\n    // Reseta valores prévios de margem e de custo\r\n    setCustos([]);\r\n    setMargens([]);\r\n\r\n    // Realiza reset dos valores dos campos de custos:\r\n    // Os campos de <Form.Control> criados programaticamente são reutilizados\r\n    // Caso o usuario busque uma nova proposta após editar um custo, o valor anterior será mantido\r\n    // É necessário encapsular a tabela de custos/margens em um <Form> e realizar o reset via useRef\r\n    if (formRef.current != null) formRef.current.reset();\r\n\r\n    // Define URL Alvo para disparo da API para proposta comercial ou pedido de venda\r\n    const urlAlvo = tipoCalculo === \"proposta\" ? \"margemproposta\" : \"margempedido\";\r\n\r\n    await api\r\n      .post(`/${urlAlvo}/${identificador}`)\r\n      .then((resposta) => {\r\n        // Carrega todos os dados da proposta/pedido\r\n        setDados(resposta.data);\r\n\r\n        // Carrega itens\r\n        setItens(resposta.data.itens);\r\n\r\n        // Altera variavel de estado para contar a quantidade total de itens\r\n        setQntdItens(resposta.data.itens.length);\r\n\r\n        setRespostaCarregada(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Erro ao carregar proposta/pedido:\", error.message);\r\n      });\r\n\r\n    setCarregando(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Menu logged={true} />\r\n\r\n      <Container fluid>\r\n        <Row className=\"flex-xl-nowrap\">\r\n          {/* Drawer */}\r\n          <Col xs={12} md={3} lg={2} className=\"p-0\">\r\n            <Drawer>\r\n              <Drawer.Toggle />\r\n              <Collapse>\r\n                <Drawer.Overflow>\r\n                  <Drawer.ToC>\r\n                    <Drawer.Header className=\"text-center\">\r\n                      Cálculo de Margem\r\n                    </Drawer.Header>\r\n\r\n                    <Drawer.Nav>\r\n                      <Drawer.Item>\r\n                        <hr className=\"m-0 my-2\" />\r\n                      </Drawer.Item>\r\n                      <Drawer.Item>\r\n                        <p className=\"text-muted text-center\">Dados:</p>\r\n\r\n                        <Form onSubmit={carregarDados}>\r\n                          <Form.Control\r\n                            as=\"select\"\r\n                            custom\r\n                            onChange={(event) => setTipoCalculo(event.target.value)}\r\n                            className=\"mb-3\"\r\n                          >\r\n                            <option value=\"proposta\">Proposta</option>\r\n                            <option value=\"pedido\" disabled>\r\n                              Pedido\r\n                            </option>\r\n                          </Form.Control>\r\n                          <Form.Control\r\n                            placeholder=\"Número\"\r\n                            onChange={(event) => {\r\n                              setIdentificador(event.target.value);\r\n                            }}\r\n                            className=\"mb-3\"\r\n                          />\r\n                          <ButtonBlock>\r\n                            <Button variant=\"primary\" type=\"submit\" block>\r\n                              {carregando && (\r\n                                <Spinner\r\n                                  animation=\"border\"\r\n                                  size=\"sm\"\r\n                                  role=\"status\"\r\n                                  aria-hidden=\"true\"\r\n                                />\r\n                              )}\r\n                              {!carregando && <>Carregar</>}\r\n                            </Button>\r\n                          </ButtonBlock>\r\n                        </Form>\r\n                      </Drawer.Item>\r\n                      <Drawer.Item>\r\n                        <hr className=\"m-0 my-2\" />\r\n                      </Drawer.Item>\r\n                      {respostaCarregada && !carregando && (\r\n                        <>\r\n                          <Drawer.Item>\r\n                            <p className=\"text-muted text-center\">Alterações:</p>\r\n\r\n                            <ButtonBlock>\r\n                              <Button variant=\"outline-success\" block disabled>\r\n                                Salvar no Binx\r\n                              </Button>\r\n                            </ButtonBlock>\r\n                          </Drawer.Item>\r\n                          <Drawer.Item>\r\n                            <ButtonBlock>\r\n                              <Button variant=\"outline-primary\" block disabled>\r\n                                Exportar\r\n                              </Button>\r\n                            </ButtonBlock>\r\n                          </Drawer.Item>\r\n                        </>\r\n                      )}\r\n                    </Drawer.Nav>\r\n                  </Drawer.ToC>\r\n                </Drawer.Overflow>\r\n              </Collapse>\r\n            </Drawer>\r\n          </Col>\r\n\r\n          <Col xs={12} md={9} lg={10}>\r\n            {/* <Card className=\"p-3 my-3\"> */}\r\n            <Container fluid className=\"mt-4\">\r\n              <Card.Title className=\"mt-2\">Cálculo de Margem</Card.Title>\r\n              <Card.Subtitle className=\"my-2 text-muted\">\r\n                Calcular margem sobre proposta comercial ou pedido de venda\r\n              </Card.Subtitle>\r\n\r\n              {!respostaCarregada && !carregando && (\r\n                <Alert variant=\"warning\" className=\"mt-3\">\r\n                  Selecione o tipo de cálculo a ser realizado e carregue o pedido ou\r\n                  proposta para visualizar os resultados\r\n                </Alert>\r\n              )}\r\n            </Container>\r\n\r\n            {!respostaCarregada && carregando && (\r\n              <Container fluid className=\"text-center mt-4\">\r\n                <Spinner\r\n                  animation=\"border\"\r\n                  size=\"md\"\r\n                  role=\"status\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n              </Container>\r\n            )}\r\n\r\n            <Card.Body>\r\n              {respostaCarregada && !carregando && (\r\n                <>\r\n                  <hr className=\"m-0 mb-4\" />\r\n\r\n                  <Container fluid className=\"p-0\">\r\n                    <h5>\r\n                      Dados{\" \"}\r\n                      {tipoCalculo === \"proposta\" ? \"da Proposta\" : \"do Pedido de Venda\"}\r\n                    </h5>\r\n                    <p className=\"text-muted\">\r\n                      Dados referentes{\" \"}\r\n                      {tipoCalculo === \"proposta\"\r\n                        ? \"a proposta comercial\"\r\n                        : \"ao pedido de compra\"}\r\n                    </p>\r\n                  </Container>\r\n\r\n                  <Row>\r\n                    <Col sm={2}>\r\n                      <Form.Group>\r\n                        <Form.Label className=\"text-muted\">Proposta:</Form.Label>\r\n                        <Form.Control size=\"sm\" value={dados.numeroProposta} readOnly />\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col sm={6}>\r\n                      <Form.Group>\r\n                        <Form.Label className=\"text-muted\">Cliente:</Form.Label>\r\n                        <Form.Control size=\"sm\" value={dados.cliente} readOnly />\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col sm={2}>\r\n                      <Form.Group>\r\n                        <Form.Label className=\"text-muted\">Vendedor:</Form.Label>\r\n                        <Form.Control size=\"sm\" value={dados.vendedor} readOnly />\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col sm={2}>\r\n                      <Form.Group>\r\n                        <Form.Label className=\"text-muted\">Situação:</Form.Label>\r\n                        <Form.Control size=\"sm\" value={dados.situacao} readOnly />\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col sm={2}>\r\n                      <Form.Group>\r\n                        <Form.Label className=\"text-muted\">\r\n                          Quantidade de Itens:\r\n                        </Form.Label>\r\n                        <Form.Control size=\"sm\" value={qntdItens} readOnly />\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col sm={2}>\r\n                      <Form.Group>\r\n                        <Form.Label className=\"text-muted\">Valor dos itens:</Form.Label>\r\n                        <Form.Control\r\n                          size=\"sm\"\r\n                          value={formatBRL(BRL(dados.subTotal, 2), \"R$\")}\r\n                          readOnly\r\n                        />\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col sm={2}>\r\n                      <Form.Group>\r\n                        <Form.Label className=\"text-muted\">Valor do Frete:</Form.Label>\r\n                        <Form.Control\r\n                          size=\"sm\"\r\n                          value={formatBRL(BRL(dados.frete, 2), \"R$\")}\r\n                          readOnly\r\n                        />\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col sm={2}>\r\n                      <Form.Group>\r\n                        <Form.Label className=\"text-muted\">Total da Proposta:</Form.Label>\r\n                        <Form.Control\r\n                          size=\"sm\"\r\n                          value={formatBRL(BRL(dados.total, 2), \"R$\")}\r\n                          readOnly\r\n                        />\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col sm={2}>\r\n                      <Form.Group>\r\n                        <Form.Label className=\"text-muted\">Margem Salva:</Form.Label>\r\n                        <Form.Control size=\"sm\" value=\"\" readOnly />\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col sm={2}>\r\n                      <Form.Group>\r\n                        <Form.Label className=\"text-muted\">Margem Atual:</Form.Label>\r\n                        <Form.Control size=\"sm\" value=\"\" readOnly />\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <hr />\r\n\r\n                  <Container className=\"mb-4 p-0\">\r\n                    <h5>\r\n                      Itens{\" \"}\r\n                      {tipoCalculo === \"proposta\" ? \"da Proposta\" : \"do Pedido de Venda\"}\r\n                    </h5>\r\n                    <p className=\"text-muted\">\r\n                      Itens presentes{\" \"}\r\n                      {tipoCalculo === \"proposta\"\r\n                        ? \"na Proposta Comercial\"\r\n                        : \"no Pedido de Compra\"}\r\n                    </p>\r\n                  </Container>\r\n\r\n                  <Form ref={formRef}>\r\n                    <Table hover size=\"sm\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th></th>\r\n                          <th>SKU</th>\r\n                          <th>Item</th>\r\n                          <th>Qntd</th>\r\n                          <th>Preço Lista</th>\r\n                          <th>Desc %</th>\r\n                          <th>Preço Un</th>\r\n                          <th>Preço Total</th>\r\n                          <th>Custo Un.</th>\r\n                          <th>Custo Total</th>\r\n                          <th>Margem</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {itens.map((item, index) => (\r\n                          <tr key={index}>\r\n                            <td>\r\n                              <Badge bg=\"secondary\">{index + 1}</Badge>\r\n                            </td>\r\n                            <td>{item.sku}</td>\r\n                            <td>{item.nome}</td>\r\n                            <td>{item.quantidade}</td>\r\n                            <td>{formatBRL(BRL(item.precoLista, 3), \"\")}</td>\r\n                            <td>{item.descontoItem.replace(\".\", \",\")}</td>\r\n                            <td>{formatBRL(BRL(item.valorUnidade, 3), \"\")}</td>\r\n                            <td>\r\n                              {formatBRL(\r\n                                BRL(item.valorUnidade, 2).multiply(item.quantidade),\r\n                                \"\"\r\n                              )}\r\n                            </td>\r\n                            <td>\r\n                              {/* Form de custo */}\r\n                              <Form.Control\r\n                                size=\"sm\"\r\n                                type=\"text\"\r\n                                htmlSize=\"6\"\r\n                                onChange={(event) =>\r\n                                  alterarMargem(index, event.target.value)\r\n                                }\r\n                              />\r\n                            </td>\r\n                            <td></td>\r\n                            <td>\r\n                              {/* Form de margem */}\r\n                              <Form.Control\r\n                                size=\"sm\"\r\n                                type=\"text\"\r\n                                htmlSize=\"6\"\r\n                                readOnly={true}\r\n                                value={\r\n                                  margens[index] == undefined ? \"\" : margens[index] + \"%\"\r\n                                }\r\n                              />\r\n                            </td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </Table>\r\n                  </Form>\r\n                </>\r\n              )}\r\n            </Card.Body>\r\n            {/* </Card> */}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CalculoMargem;\r\n"],"sourceRoot":""}