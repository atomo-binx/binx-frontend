{"version":3,"file":"static/js/487.2d9f6d73.chunk.js","mappings":"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","sources":["components/ButtonBlock/index.js","../node_modules/react-bootstrap/esm/InputGroup.js","components/Login/ModalCriarSenha/index.js","pages/Login/index.js","services/api.js","../node_modules/react-bootstrap/esm/Alert.js","../node_modules/react-bootstrap/esm/Image.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js"],"sourcesContent":["import React from \"react\";\r\n\r\nexport default function ButtonBlock(props) {\r\n  return <div className=\"d-grid gap-2\">{props.children}</div>;\r\n}\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nconst InputGroupCheckbox = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\n\nconst InputGroupRadio = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\n\n/**\n *\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nconst InputGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  hasValidation,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group'); // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n\n  const contextValue = useMemo(() => ({}), []);\n  return /*#__PURE__*/_jsx(InputGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, hasValidation && 'has-validation')\n    })\n  });\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});","import { React, useState, useEffect, useRef } from \"react\";\r\nimport { Auth } from \"../../../services/amplify\";\r\n\r\nimport {\r\n  Modal,\r\n  Button,\r\n  Form,\r\n  Spinner,\r\n  Alert,\r\n  Overlay,\r\n  Tooltip,\r\n  InputGroup,\r\n  Container\r\n} from \"react-bootstrap\";\r\n\r\nimport { BsFillEyeFill, BsFillEyeSlashFill } from \"react-icons/bs\";\r\n\r\nimport api from \"../../../services/api\";\r\n\r\nimport \"./styles.css\";\r\n\r\nfunction ModalCriarSenha(props) {\r\n  const { showModal, handleClose, cognitoUser } = props;\r\n\r\n  const [primeiraSenha, setPrimeiraSenha] = useState(\"\");\r\n  const [segundaSenha, setSegundaSenha] = useState(\"\");\r\n\r\n  const [carregando, setCarregando] = useState(false);\r\n\r\n  const [erro, setErro] = useState(false);\r\n  const [mensagemErro, setMensagemErro] = useState(\"\");\r\n\r\n  const [nomeInvalido, setNomeInvalido] = useState(false);\r\n  const [nome, setNome] = useState(\"\");\r\n  const [sub, setSub] = useState(\"\");\r\n\r\n  const refNome = useRef(null);\r\n\r\n  const [exibirPrimeiraSenha, setExibirPrimeiraSenha] = useState(false);\r\n  const [exibirSegundaSenha, setExibirSegundaSenha] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setErro(false);\r\n    setCarregando(false);\r\n    if (cognitoUser) {\r\n      setNome(cognitoUser.challengeParam.userAttributes[\"custom:displayname\"]);\r\n      setSub(cognitoUser[\"username\"]);\r\n    }\r\n  }, [cognitoUser, showModal]);\r\n\r\n  const confirmarSenha = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // Reset Flags\r\n    setCarregando(true);\r\n    setNomeInvalido(false);\r\n    setErro(false);\r\n\r\n    // Verificação de requisitos de nome\r\n    if (nome === \"\" || nome.length < 3 || nome.length > 20) {\r\n      setNomeInvalido(true);\r\n      setCarregando(false);\r\n      return;\r\n    }\r\n\r\n    // Iniciar Verificação de requisitos de novas senhas\r\n    if (primeiraSenha === \"\" && segundaSenha === \"\") {\r\n      setErro(true);\r\n      setMensagemErro(\"As senhas não podem estar vazias.\");\r\n      setCarregando(false);\r\n      return;\r\n    }\r\n\r\n    if (primeiraSenha !== segundaSenha) {\r\n      setErro(true);\r\n      setMensagemErro(\"As senhas inseridas devem ser idênticas.\");\r\n      setCarregando(false);\r\n      return;\r\n    }\r\n\r\n    if (primeiraSenha.includes(\" \") || segundaSenha.includes(\" \")) {\r\n      setErro(true);\r\n      setMensagemErro(\"A senha não deve conter espaços em branco.\");\r\n      setCarregando(false);\r\n      return;\r\n    }\r\n\r\n    if (primeiraSenha.length < 8 || segundaSenha.length < 8) {\r\n      setErro(true);\r\n      setMensagemErro(\"A senha deve ter ao menos 8 caracteres.\");\r\n      setCarregando(false);\r\n      return;\r\n    }\r\n\r\n    // Senhas atendem aos requisitos mínimos\r\n    Auth.completeNewPassword(cognitoUser, segundaSenha, {\r\n      \"custom:displayname\": nome,\r\n    })\r\n      .then(async (user) => {\r\n        // Contato foi criado e atualizado no Cognito, vamos tentar atualizar no Binx\r\n        // A compleção do cadastro no Binx não é necessária para continuar o redirecionamento\r\n        // A única divergência ficará sendo o nome de usuário que não estará atualizado\r\n        await api\r\n          .put(\"/usuario\", {\r\n            usuario: {\r\n              idusuario: sub,\r\n              nome: nome,\r\n            },\r\n          })\r\n          .catch((error) => {\r\n            console.log(\r\n              \"Erro durante a atualização de usuário no banco de dados do binx.\"\r\n            );\r\n          });\r\n\r\n        window.location.reload();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n\r\n        setErro(true);\r\n        setCarregando(false);\r\n\r\n        // Liga com erro de resposta da operação de alteração de senha\r\n        switch (error.message) {\r\n          case \"Password does not conform to policy: Password not long enough\":\r\n            setMensagemErro(\"A senha deve ter ao menos 8 caracteres.\");\r\n            break;\r\n          default:\r\n            setMensagemErro(\"Erro ao criar nova senha. Tente novamente.\");\r\n            break;\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        Modal\r\n        show={showModal}\r\n        onHide={handleClose}\r\n        centered\r\n        size=\"md\"\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Nova Senha de Usuário</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"p-4\">\r\n          <p>Crie uma nova senha de usuário para utilizar o Binx.</p>\r\n          <Form onSubmit={confirmarSenha}>\r\n            <Form.Group>\r\n              <Form.Label className=\"text-muted\">Nome de exibição</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                defaultValue={nome}\r\n                onChange={(e) => setNome(e.target.value)}\r\n                ref={refNome}\r\n              />\r\n              <Overlay target={refNome.current} show={nomeInvalido} placement=\"right\">\r\n                {(props) => (\r\n                  <Tooltip id=\"overlay-example\" {...props}>\r\n                    O nome deve ter entre 3 e 20 caracteres\r\n                  </Tooltip>\r\n                )}\r\n              </Overlay>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mt-3\">\r\n              <Form.Label className=\"text-muted\">Insira uma nova senha</Form.Label>\r\n              <InputGroup>\r\n                <Form.Control\r\n                  id=\"senha-input\"\r\n                  type={exibirPrimeiraSenha ? \"text\" : \"password\"}\r\n                  placeholder=\"Nova Senha\"\r\n                  onChange={(e) => setPrimeiraSenha(e.target.value)}\r\n                  isInvalid={erro}\r\n                />\r\n                <InputGroup.Text\r\n                  className={`password-eye bg-white ${erro ? \"eye-invalid\" : \"\"} `}\r\n                  onClick={() => setExibirPrimeiraSenha(!exibirPrimeiraSenha)}\r\n                >\r\n                  {!exibirPrimeiraSenha && <BsFillEyeFill />}\r\n                  {exibirPrimeiraSenha && <BsFillEyeSlashFill />}\r\n                </InputGroup.Text>\r\n              </InputGroup>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mt-3\">\r\n              <Form.Label className=\"text-muted\">Confirmar nova senha</Form.Label>\r\n              <InputGroup>\r\n                <Form.Control\r\n                  id=\"senha-input\"\r\n                  type={exibirSegundaSenha ? \"text\" : \"password\"}\r\n                  placeholder=\"Nova Senha\"\r\n                  onChange={(e) => setSegundaSenha(e.target.value)}\r\n                  isInvalid={erro}\r\n                />\r\n                <InputGroup.Text\r\n                  className={`password-eye bg-white ${erro ? \"eye-invalid\" : \"\"} `}\r\n                  onClick={() => setExibirSegundaSenha(!exibirSegundaSenha)}\r\n                >\r\n                  {!exibirSegundaSenha && <BsFillEyeFill />}\r\n                  {exibirSegundaSenha && <BsFillEyeSlashFill />}\r\n                </InputGroup.Text>\r\n              </InputGroup>\r\n            </Form.Group>\r\n\r\n            {erro && (\r\n              <Container className=\"m-0 p-0\">\r\n                <p className=\"error-message mb-0\">{mensagemErro}</p>\r\n              </Container>\r\n            )}\r\n\r\n            <div className=\"d-grid gap-2\">\r\n              <Button variant=\"primary\" type=\"submit\" className=\"mt-4\">\r\n                {carregando && (\r\n                  <Spinner\r\n                    animation=\"border\"\r\n                    size=\"sm\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                  />\r\n                )}\r\n                {!carregando && <>Confirmar</>}\r\n              </Button>\r\n            </div>\r\n\r\n            <Alert className=\"mt-4 text-center\" variant=\"info\">\r\n              Sua senha deve ter no mínimo 8 caracteres.\r\n            </Alert>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ModalCriarSenha;\r\n","import React, { useState, useRef } from \"react\";\r\nimport { Auth } from \"../../services/amplify\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Form,\r\n  Button,\r\n  Spinner,\r\n  Image,\r\n  InputGroup,\r\n  Overlay,\r\n  Tooltip,\r\n} from \"react-bootstrap\";\r\nimport { BsFillEyeFill, BsFillEyeSlashFill } from \"react-icons/bs\";\r\n\r\nimport LogoBinx from \"../../assets/logo_original.png\";\r\nimport \"./styles.css\";\r\n\r\nimport Menu from \"../../components/Menu\";\r\nimport ButtonBlock from \"../../components/ButtonBlock\";\r\nimport ModalCriarSenha from \"../../components/Login/ModalCriarSenha\";\r\n\r\nfunction Home() {\r\n  const navigate = useNavigate();\r\n\r\n  const [cognitoUser, setCognitoUser] = useState(null);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [carregando, setCarregando] = useState(false);\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const [emailInvalido, setEmailInvalido] = useState(false);\r\n  const [senhaInvalida, setSenhaInvalida] = useState(false);\r\n  const [loginInvalido, setLoginInvalido] = useState(false);\r\n  const [mensagemErro, setMensagemErro] = useState(\"\");\r\n\r\n  const [exibirSenha, setExibirSenha] = useState(false);\r\n\r\n  const refEmail = useRef(null);\r\n  const refSenha = useRef(null);\r\n\r\n  const handleClose = () => {\r\n    setShowModal(false);\r\n    setCarregando(false);\r\n    setLoginInvalido(false);\r\n  };\r\n\r\n  const realizarLogin = async (event) => {\r\n    event.preventDefault();\r\n\r\n    setCarregando(true);\r\n    setLoginInvalido(false);\r\n    setEmailInvalido(false);\r\n    setSenhaInvalida(false);\r\n\r\n    // Testar dados inseridos no formulário\r\n    const testaEmail =\r\n      /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n\r\n    const testaSenha = /^\\S+$/;\r\n\r\n    // Teste para um email válido\r\n    if (!testaEmail.test(String(username).toLowerCase())) {\r\n      setEmailInvalido(true);\r\n      setCarregando(false);\r\n      return;\r\n    }\r\n\r\n    // Teste para uma senha válida (que não tenha espaços em branco)\r\n    if (!testaSenha.test(String(password).toLowerCase())) {\r\n      setSenhaInvalida(true);\r\n      setCarregando(false);\r\n      return;\r\n    }\r\n\r\n    await Auth.signIn(username, password)\r\n      .then((user) => {\r\n        if (user.challengeName === \"NEW_PASSWORD_REQUIRED\") {\r\n          setCognitoUser(user);\r\n          setShowModal(true);\r\n        } else {\r\n          navigate(\"/painel\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setCarregando(false);\r\n\r\n        setLoginInvalido(true);\r\n        console.log(error.message);\r\n\r\n        switch (error.message) {\r\n          case \"Password attempts exceeded\":\r\n            setMensagemErro(\r\n              \"Número máximo de tentativas excedidas. Tente novamente em alguns instantes.\"\r\n            );\r\n            break;\r\n          case \"Incorrect username or password.\":\r\n            setMensagemErro(\"Usuário e/ou senha incorretos\");\r\n            break;\r\n          default:\r\n            setMensagemErro(\"Erro ao realizar login. Tente novamente.\");\r\n            break;\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Menu logged={false} />\r\n\r\n      <Container className=\"m-0 bg-gray container-binx\" fluid>\r\n        <Row className=\"justify-content-center\">\r\n          <Container\r\n            className=\"bg-white binx-card text-center card-login p-4\"\r\n            style={{ width: \"20rem\" }}\r\n          >\r\n            <Container className=\"text-center mt-2 mb-4\">\r\n              <Image src={LogoBinx} width=\"150\" />\r\n            </Container>\r\n            <Form noValidate onSubmit={realizarLogin}>\r\n              <Form.Group controlId=\"form-login-email\">\r\n                <Form.Control\r\n                  id=\"email-input\"\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  onChange={(e) => setUsername(e.target.value)}\r\n                  isInvalid={loginInvalido}\r\n                  ref={refEmail}\r\n                />\r\n                <Overlay\r\n                  target={refEmail.current}\r\n                  show={emailInvalido}\r\n                  placement=\"right\"\r\n                >\r\n                  {(props) => (\r\n                    <Tooltip id=\"overlay-example\" {...props}>\r\n                      Insira um email válido\r\n                    </Tooltip>\r\n                  )}\r\n                </Overlay>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"form-login-senha\" className=\"mt-4\">\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    id=\"senha-input\"\r\n                    type={exibirSenha ? \"text\" : \"password\"}\r\n                    placeholder=\"Senha\"\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    isInvalid={loginInvalido}\r\n                  />\r\n                  <InputGroup.Text\r\n                    ref={refSenha}\r\n                    className={`password-eye bg-white ${\r\n                      loginInvalido ? \"eye-invalid\" : \"\"\r\n                    }`}\r\n                    onClick={() => setExibirSenha(!exibirSenha)}\r\n                  >\r\n                    {!exibirSenha && <BsFillEyeFill />}\r\n                    {exibirSenha && <BsFillEyeSlashFill />}\r\n                  </InputGroup.Text>\r\n                </InputGroup>\r\n\r\n                <Overlay\r\n                  target={refSenha.current}\r\n                  show={senhaInvalida}\r\n                  placement=\"right\"\r\n                >\r\n                  {(props) => (\r\n                    <Tooltip id=\"overlay-example\" {...props}>\r\n                      Insira uma senha válida\r\n                    </Tooltip>\r\n                  )}\r\n                </Overlay>\r\n              </Form.Group>\r\n\r\n              {loginInvalido && (\r\n                <Container className=\"m-0\">\r\n                  <p className=\"error-message mb-0\">{mensagemErro}</p>\r\n                </Container>\r\n              )}\r\n\r\n              <ButtonBlock>\r\n                <Button className=\"my-4\" variant=\"primary\" type=\"submit\">\r\n                  {carregando && (\r\n                    <Spinner\r\n                      as=\"span\"\r\n                      animation=\"border\"\r\n                      size=\"sm\"\r\n                      role=\"status\"\r\n                      aria-hidden=\"true\"\r\n                    />\r\n                  )}\r\n                  {!carregando && <>Entrar</>}\r\n                </Button>\r\n              </ButtonBlock>\r\n            </Form>\r\n          </Container>\r\n        </Row>\r\n      </Container>\r\n\r\n      {/* Modal de Criação de Nova Senha */}\r\n      <ModalCriarSenha\r\n        showModal={showModal}\r\n        handleClose={handleClose}\r\n        cognitoUser={cognitoUser}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import axios from \"axios\";\r\n\r\n// Para utilização com certificado SSL inválido\r\n// import https from \"https\";\r\n// const api = axios.create({\r\n//   baseURL: \"https://api.binx.com.br/api\",\r\n//   httpsAgent: new https.Agent({\r\n//     rejectUnauthorized: false,\r\n//   }),\r\n// });\r\n\r\nconst enviroment = process.env.REACT_APP_ENVIROMENT || \"development\";\r\n\r\nlet baseURL =\r\n  enviroment === \"development\"\r\n    ? \"http://localhost:4005/api\"\r\n    : \"https://api.binx.com.br/api\";\r\n\r\nconst api = axios.create({ baseURL: baseURL });\r\n\r\nexport default api;\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Fade from './Fade';\nimport CloseButton from './CloseButton';\nimport divWithClassName from './divWithClassName';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nDivStyledAsH4.displayName = 'DivStyledAsH4';\nconst AlertHeading = createWithBsPrefix('alert-heading', {\n  Component: DivStyledAsH4\n});\nconst AlertLink = createWithBsPrefix('alert-link', {\n  Component: Anchor\n});\nconst defaultProps = {\n  variant: 'primary',\n  show: true,\n  transition: Fade,\n  closeLabel: 'Close alert'\n};\nconst Alert = /*#__PURE__*/React.forwardRef((uncontrolledProps, ref) => {\n  const {\n    bsPrefix,\n    show,\n    closeLabel,\n    closeVariant,\n    className,\n    children,\n    variant,\n    onClose,\n    dismissible,\n    transition,\n    ...props\n  } = useUncontrolled(uncontrolledProps, {\n    show: 'onClose'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'alert');\n  const handleClose = useEventCallback(e => {\n    if (onClose) {\n      onClose(false, e);\n    }\n  });\n  const Transition = transition === true ? Fade : transition;\n\n  const alert = /*#__PURE__*/_jsxs(\"div\", {\n    role: \"alert\",\n    ...(!Transition ? props : undefined),\n    ref: ref,\n    className: classNames(className, prefix, variant && `${prefix}-${variant}`, dismissible && `${prefix}-dismissible`),\n    children: [dismissible && /*#__PURE__*/_jsx(CloseButton, {\n      onClick: handleClose,\n      \"aria-label\": closeLabel,\n      variant: closeVariant\n    }), children]\n  });\n\n  if (!Transition) return show ? alert : null;\n  return /*#__PURE__*/_jsx(Transition, {\n    unmountOnExit: true,\n    ...props,\n    ref: undefined,\n    in: show,\n    children: alert\n  });\n});\nAlert.displayName = 'Alert';\nAlert.defaultProps = defaultProps;\nexport default Object.assign(Alert, {\n  Link: AlertLink,\n  Heading: AlertHeading\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const propTypes = {\n  /**\n   * @default 'img'\n   */\n  bsPrefix: PropTypes.string,\n\n  /**\n   * Sets image as fluid image.\n   */\n  fluid: PropTypes.bool,\n\n  /**\n   * Sets image shape as rounded.\n   */\n  rounded: PropTypes.bool,\n\n  /**\n   * Sets image shape as circle.\n   */\n  roundedCircle: PropTypes.bool,\n\n  /**\n   * Sets image shape as thumbnail.\n   */\n  thumbnail: PropTypes.bool\n};\nconst defaultProps = {\n  fluid: false,\n  rounded: false,\n  roundedCircle: false,\n  thumbnail: false\n};\nconst Image = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  fluid,\n  rounded,\n  roundedCircle,\n  thumbnail,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'img');\n  return /*#__PURE__*/_jsx(\"img\", {\n    // eslint-disable-line jsx-a11y/alt-text\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid && `${bsPrefix}-fluid`, rounded && `rounded`, roundedCircle && `rounded-circle`, thumbnail && `${bsPrefix}-thumbnail`)\n  });\n});\nImage.displayName = 'Image';\nImage.defaultProps = defaultProps;\nexport default Image;","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", { ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix)\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  animation: true,\n  dialogAs: ModalDialog\n};\n/* eslint-disable no-use-before-define, react/no-multi-comp */\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n/* eslint-enable no-use-before-define */\n\n\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n\n  /* BaseModal props */\n  show,\n  animation,\n  backdrop,\n  keyboard,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  }); // We prevent the modal from closing during a drag by detecting where the\n  // the click originates from. If it starts in the modal and then ends outside\n  // don't close.\n\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n\n    waitingForMouseUpRef.current = false;\n  };\n\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    handleStaticModalAnimation();\n  };\n\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n\n    onHide == null ? void 0 : onHide();\n  };\n\n  const handleEscapeKeyDown = e => {\n    if (!keyboard && backdrop === 'static') {\n      // Call preventDefault to stop modal from closing in restart ui,\n      // then play our animation.\n      e.preventDefault();\n      handleStaticModalAnimation();\n    } else if (keyboard && onEscapeKeyDown) {\n      onEscapeKeyDown(e);\n    }\n  };\n\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing); // FIXME: This should work even when animation is disabled.\n\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n\n    onExited == null ? void 0 : onExited(node); // FIXME: This should work even when animation is disabled.\n\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = { ...style,\n    ...modalStyle\n  }; // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n\n  baseModalStyle.display = 'block';\n\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, { ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nModal.defaultProps = defaultProps;\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});"],"names":["ButtonBlock","props","className","children","InputGroupText","createWithBsPrefix","Component","InputGroup","React","ref","bsPrefix","size","hasValidation","as","useBootstrapPrefix","contextValue","useMemo","_jsx","InputGroupContext","value","classNames","displayName","Object","assign","Text","Radio","FormCheckInput","type","Checkbox","showModal","handleClose","cognitoUser","useState","primeiraSenha","setPrimeiraSenha","segundaSenha","setSegundaSenha","carregando","setCarregando","erro","setErro","mensagemErro","setMensagemErro","nomeInvalido","setNomeInvalido","nome","setNome","sub","setSub","refNome","useRef","exibirPrimeiraSenha","setExibirPrimeiraSenha","exibirSegundaSenha","setExibirSegundaSenha","useEffect","challengeParam","userAttributes","confirmarSenha","event","preventDefault","length","includes","Auth","then","user","api","usuario","idusuario","catch","error","console","log","window","location","reload","message","Modal","show","onHide","centered","backdrop","keyboard","closeButton","Form","onSubmit","defaultValue","onChange","e","target","Overlay","current","placement","Tooltip","id","placeholder","isInvalid","onClick","Container","Button","variant","Spinner","animation","role","Alert","navigate","useNavigate","setCognitoUser","username","setUsername","password","setPassword","setShowModal","emailInvalido","setEmailInvalido","senhaInvalida","setSenhaInvalida","loginInvalido","setLoginInvalido","exibirSenha","setExibirSenha","refEmail","refSenha","realizarLogin","testaSenha","test","String","toLowerCase","challengeName","Menu","logged","fluid","Row","style","width","Image","src","noValidate","controlId","baseURL","process","REACT_APP_ENVIROMENT","axios","DivStyledAsH4","divWithClassName","AlertHeading","AlertLink","Anchor","defaultProps","transition","Fade","closeLabel","uncontrolledProps","useUncontrolled","closeVariant","onClose","dismissible","prefix","useEventCallback","Transition","alert","_jsxs","undefined","CloseButton","unmountOnExit","in","Link","Heading","propTypes","PropTypes","rounded","roundedCircle","thumbnail","scrollbarSize","recalc","canUseDOM","scrollDiv","document","createElement","position","top","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","ModalDialog","contentClassName","fullscreen","scrollable","dialogClass","fullScreenClass","ModalHeader","AbstractModalHeader","autoFocus","enforceFocus","restoreFocus","dialogAs","DialogTransition","timeout","BackdropTransition","dialogClassName","Dialog","ariaLabelledby","ariaDescribedby","ariaLabel","onEscapeKeyDown","onShow","container","restoreFocusOptions","onEntered","onExit","onExiting","onEnter","onEntering","onExited","backdropClassName","propsManager","manager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","useCallbackRef","modal","setModalRef","mergedRef","useMergedRefs","handleHide","isRTL","useIsRTL","modalContext","getModalManager","getSharedManager","updateDialogStyle","node","containerIsOverflowing","getScrollbarWidth","modalIsOverflowing","scrollHeight","ownerDocument","documentElement","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","dialog","useWillUnmount","removeEventListener","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","transitionEnd","handleClick","currentTarget","handleStaticBackdropClick","renderBackdrop","useCallback","backdropProps","baseModalStyle","display","ModalContext","BaseModal","isAppearing","addEventListener","backdropTransition","renderDialog","dialogProps","onMouseUp","onMouseDown","Body","ModalBody","Header","Title","ModalTitle","Footer","ModalFooter","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION"],"sourceRoot":""}