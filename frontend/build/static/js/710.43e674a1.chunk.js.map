{"version":3,"file":"static/js/710.43e674a1.chunk.js","mappings":"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","sources":["components/ButtonBlock/index.js","components/Menu/index.js","pages/Etiquetas/index.js","services/api.js"],"sourcesContent":["import React from \"react\";\r\n\r\nexport default function ButtonBlock(props) {\r\n  return <div className=\"d-grid gap-2\">{props.children}</div>;\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Auth } from \"../../services/amplify\";\r\n\r\nimport { Navbar, Nav, NavDropdown, Container } from \"react-bootstrap\";\r\nimport { BsPersonCircle } from \"react-icons/bs\";\r\n\r\nimport NavbarLogo from \"../../assets/logo_3.png\";\r\n\r\nimport AuthContext from \"../../contexts/auth\";\r\n\r\nimport \"./styles.css\";\r\n\r\nfunction Menu(props) {\r\n  const navigate = useNavigate();\r\n\r\n  const [vendasDrop, setVendasDrop] = useState(false);\r\n  const [comprasDrop, setComprasDrop] = useState(false);\r\n  const [expedicaoDrop, setExpedicaoDrop] = useState(false);\r\n  const [relatoriosDrop, setRelatoriosDrop] = useState(false);\r\n  const [cadastrosDrop, setCadastrosDrops] = useState(false);\r\n  const [userDrop, setUserDrop] = useState(false);\r\n\r\n  const [vendasActive, setVendasActive] = useState(false);\r\n  const [comprasActive, setComprasActive] = useState(false);\r\n  const [expedicaoActive, setExpedicaoActive] = useState(false);\r\n  const [relatoriosActive, setRelatoriosActive] = useState(false);\r\n  const [cadastrosActive, setCadastrosActive] = useState(false);\r\n\r\n  const [userName, setUserName] = useState(\"\");\r\n\r\n  const userContext = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    const pathname = window.location.pathname;\r\n\r\n    if (pathname.includes(\"vendas\")) setVendasActive(true);\r\n    if (pathname.includes(\"compras\")) setComprasActive(true);\r\n    if (pathname.includes(\"expedicao\")) setExpedicaoActive(true);\r\n    if (pathname.includes(\"relatorios\")) setRelatoriosActive(true);\r\n    if (pathname.includes(\"cadastros\")) setCadastrosActive(true);\r\n\r\n    if (userContext) {\r\n      setUserName(userContext.attributes[\"custom:displayname\"]);\r\n    } else {\r\n      setUserName(\"Convidado\");\r\n    }\r\n  }, [userContext]);\r\n\r\n  const signOut = () => {\r\n    Auth.signOut()\r\n      .then((data) => {\r\n        navigate(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        navigate(\"/\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" sticky=\"top\">\r\n        <Container fluid>\r\n          <Link to=\"/\" className=\"m-0 p-0\">\r\n            <Navbar.Brand className=\"\">\r\n              <img src={NavbarLogo} width=\"70\" alt=\"Logo Binx\" />\r\n            </Navbar.Brand>\r\n          </Link>\r\n\r\n          <Navbar.Toggle />\r\n\r\n          {props.logged && (\r\n            <>\r\n              <Navbar.Collapse>\r\n                <Nav className=\"mr-auto\" navbarScroll>\r\n                  {/* Dropdown de Vendas */}\r\n                  <NavDropdown\r\n                    title=\"Vendas\"\r\n                    active={vendasActive}\r\n                    show={vendasDrop}\r\n                    onMouseEnter={() => setVendasDrop(true)}\r\n                    onMouseLeave={() => setVendasDrop(false)}\r\n                  >\r\n                    <NavDropdown.Item\r\n                      as={Link}\r\n                      href=\"/vendas/frete\"\r\n                      to=\"/vendas/frete\"\r\n                    >\r\n                      Cálculo de Frete\r\n                    </NavDropdown.Item>\r\n                    <NavDropdown.Item\r\n                      as={Link}\r\n                      href=\"/vendas/margem\"\r\n                      to=\"/vendas/margem\"\r\n                    >\r\n                      Cálculo de Margem\r\n                    </NavDropdown.Item>\r\n                    <NavDropdown.Item\r\n                      as={Link}\r\n                      href=\"/vendas/prospeccao\"\r\n                      to=\"/vendas/prospeccao\"\r\n                    >\r\n                      Prospecção de Clientes\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n\r\n                  {/* Dropdown de Compras */}\r\n                  <NavDropdown\r\n                    title=\"Compras\"\r\n                    show={comprasDrop}\r\n                    active={comprasActive}\r\n                    onMouseEnter={() => setComprasDrop(!comprasDrop)}\r\n                    onMouseLeave={() => setComprasDrop(false)}\r\n                  >\r\n                    <NavDropdown.Item\r\n                      as={Link}\r\n                      href=\"/compras/dashboard\"\r\n                      to=\"/compras/dashboard\"\r\n                    >\r\n                      Dashboard de Compras\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n\r\n                  {/* Dropdown da Expedição */}\r\n                  <NavDropdown\r\n                    title=\"Expedição\"\r\n                    show={expedicaoDrop}\r\n                    active={expedicaoActive}\r\n                    onMouseEnter={() => setExpedicaoDrop(!expedicaoDrop)}\r\n                    onMouseLeave={() => setExpedicaoDrop(false)}\r\n                  >\r\n                    <NavDropdown.Item\r\n                      href=\"/expedicao/aprovar\"\r\n                      to=\"/expedicao/aprovar\"\r\n                    >\r\n                      Aprovação de Pedidos\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n\r\n                  {/* Dropdown de Relatórios */}\r\n                  <NavDropdown\r\n                    title=\"Relatórios\"\r\n                    show={relatoriosDrop}\r\n                    active={relatoriosActive}\r\n                    onMouseEnter={() => setRelatoriosDrop(!relatoriosDrop)}\r\n                    onMouseLeave={() => setRelatoriosDrop(false)}\r\n                  >\r\n                    <NavDropdown.Item\r\n                      href=\"/relatorios/minmax\"\r\n                      to=\"/relatorios/minmax\"\r\n                    >\r\n                      Estoque Mínimo e Máximo\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n\r\n                  {/* Dropdown da Cadastros */}\r\n                  <NavDropdown\r\n                    title=\"Cadastros\"\r\n                    show={cadastrosDrop}\r\n                    active={cadastrosActive}\r\n                    onMouseEnter={() => setCadastrosDrops(!cadastrosDrop)}\r\n                    onMouseLeave={() => setCadastrosDrops(false)}\r\n                  >\r\n                    <NavDropdown.Item\r\n                      href=\"/cadastros/produtos\"\r\n                      to=\"/cadastros/produtos\"\r\n                    >\r\n                      Produtos\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n                </Nav>\r\n              </Navbar.Collapse>\r\n\r\n              <Navbar.Collapse className=\"justify-content-end\">\r\n                <Nav className=\"mr-auto\" navbarScroll>\r\n                  <BsPersonCircle />\r\n                  <NavDropdown\r\n                    className=\"dropdown-user\"\r\n                    title={\r\n                      <div className=\"user-dropdown-div \">\r\n                        <div className=\"m-0\">\r\n                          <BsPersonCircle size={25} />\r\n                        </div>\r\n                        <div className=\"user-name\">{userName}</div>\r\n                      </div>\r\n                    }\r\n                    show={userDrop}\r\n                    onMouseEnter={() => setUserDrop(true)}\r\n                    onMouseLeave={() => setUserDrop(false)}\r\n                  >\r\n                    <NavDropdown.Item onClick={signOut}>Sair</NavDropdown.Item>\r\n                  </NavDropdown>\r\n                </Nav>\r\n              </Navbar.Collapse>\r\n            </>\r\n          )}\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Menu;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Menu from \"../../components/Menu\";\r\nimport ButtonBlock from \"../../components/ButtonBlock\";\r\n\r\nimport api from \"../../services/api\";\r\n\r\nimport { Form, Card, Badge, Container, Row, Button, Spinner, Col } from \"react-bootstrap\";\r\n\r\nexport default function Etiquetas() {\r\n  const [carregando, setCarregando] = useState(false);\r\n  const [sku, setSku] = useState(\"\");\r\n  const [pedido, setPedido] = useState(\"\");\r\n\r\n  const etiquetaProduto = async (event) => {\r\n    event.preventDefault();\r\n\r\n    await api\r\n      .get(\"/expedicao/etiqueta/produto\", {\r\n        params: {\r\n          sku,\r\n        },\r\n        responseType: \"blob\",\r\n      })\r\n      .then((response) => {\r\n        const file = new Blob([response.data], { type: \"application/pdf\" });\r\n        const fileURL = URL.createObjectURL(file);\r\n        window.open(fileURL);\r\n        URL.revokeObjectURL();\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Erro:\", error.message);\r\n      });\r\n  };\r\n\r\n  const etiquetaPedido = async (event) => {\r\n    event.preventDefault();\r\n\r\n    await api\r\n      .get(\"/expedicao/etiqueta/pedido\", {\r\n        params: {\r\n          pedido,\r\n        },\r\n        responseType: \"blob\",\r\n      })\r\n      .then((response) => {\r\n        const file = new Blob([response.data], { type: \"application/pdf\" });\r\n        const fileURL = URL.createObjectURL(file);\r\n        window.open(fileURL);\r\n        URL.revokeObjectURL();\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Erro:\", error.message);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Menu logged={true} />\r\n\r\n      <h3>Produto</h3>\r\n      <Form onSubmit={etiquetaProduto}>\r\n        <Row className=\"align-items-center\">\r\n          <Col xs=\"6\">\r\n            <Form.Group>\r\n              <Form.Control\r\n                type=\"text\"\r\n                onChange={(e) => setSku(e.target.value)}\r\n                placeholder=\"SKU\"\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n          <Col>\r\n            <ButtonBlock>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                {carregando && (\r\n                  <Spinner\r\n                    animation=\"border\"\r\n                    size=\"sm\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                  />\r\n                )}\r\n                {!carregando && <>Enviar</>}\r\n              </Button>\r\n            </ButtonBlock>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n\r\n      <h3>Pedido</h3>\r\n      <Form onSubmit={etiquetaPedido}>\r\n        <Row className=\"align-items-center\">\r\n          <Col xs=\"6\">\r\n            <Form.Group>\r\n              <Form.Control\r\n                type=\"text\"\r\n                onChange={(e) => setPedido(e.target.value)}\r\n                placeholder=\"Pedido\"\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n          <Col>\r\n            <ButtonBlock>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                {carregando && (\r\n                  <Spinner\r\n                    animation=\"border\"\r\n                    size=\"sm\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                  />\r\n                )}\r\n                {!carregando && <>Enviar</>}\r\n              </Button>\r\n            </ButtonBlock>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\n// Para utilização com certificado SSL inválido\r\n// import https from \"https\";\r\n// const api = axios.create({\r\n//   baseURL: \"https://api.binx.com.br/api\",\r\n//   httpsAgent: new https.Agent({\r\n//     rejectUnauthorized: false,\r\n//   }),\r\n// });\r\n\r\nconst enviroment = process.env.REACT_APP_ENVIROMENT || \"development\";\r\n\r\nlet baseURL =\r\n  enviroment === \"development\"\r\n    ? \"http://localhost:4005/api\"\r\n    : \"https://api.binx.com.br/api\";\r\n\r\nconst api = axios.create({ baseURL: baseURL });\r\n\r\nexport default api;\r\n"],"names":["ButtonBlock","props","className","children","navigate","useNavigate","useState","vendasDrop","setVendasDrop","comprasDrop","setComprasDrop","expedicaoDrop","setExpedicaoDrop","relatoriosDrop","setRelatoriosDrop","cadastrosDrop","setCadastrosDrops","userDrop","setUserDrop","vendasActive","setVendasActive","comprasActive","setComprasActive","expedicaoActive","setExpedicaoActive","relatoriosActive","setRelatoriosActive","cadastrosActive","setCadastrosActive","userName","setUserName","userContext","useContext","AuthContext","useEffect","pathname","window","location","includes","attributes","Navbar","bg","variant","expand","sticky","Container","fluid","to","src","NavbarLogo","width","alt","logged","Nav","navbarScroll","NavDropdown","title","active","show","onMouseEnter","onMouseLeave","as","Link","href","size","onClick","Auth","then","data","catch","error","Etiquetas","carregando","sku","setSku","pedido","setPedido","etiquetaProduto","event","preventDefault","api","params","responseType","response","file","Blob","type","fileURL","URL","createObjectURL","open","revokeObjectURL","console","log","message","etiquetaPedido","onSubmit","xs","onChange","e","target","value","placeholder","animation","role","baseURL","process","REACT_APP_ENVIROMENT","axios"],"sourceRoot":""}