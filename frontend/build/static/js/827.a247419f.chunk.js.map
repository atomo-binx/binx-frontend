{"version":3,"file":"static/js/827.a247419f.chunk.js","mappings":"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","sources":["assets/grid-fill.svg","components/ButtonBlock/index.js","components/Menu/index.js","components/PageContent/index.js","util/formatar.js","components/Prospeccoes/ModalProspeccao/index.js","components/Prospeccoes/TabelaResultados/index.js","pages/Prospeccoes/index.js","services/api.js"],"sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgGridFill(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M1.5 3.75C1.5 3.15326 1.73705 2.58097 2.15901 2.15901C2.58097 1.73705 3.15326 1.5 3.75 1.5H8.25C8.84674 1.5 9.41903 1.73705 9.84099 2.15901C10.2629 2.58097 10.5 3.15326 10.5 3.75V8.25C10.5 8.84674 10.2629 9.41903 9.84099 9.84099C9.41903 10.2629 8.84674 10.5 8.25 10.5H3.75C3.15326 10.5 2.58097 10.2629 2.15901 9.84099C1.73705 9.41903 1.5 8.84674 1.5 8.25V3.75ZM13.5 3.75C13.5 3.15326 13.7371 2.58097 14.159 2.15901C14.581 1.73705 15.1533 1.5 15.75 1.5H20.25C20.8467 1.5 21.419 1.73705 21.841 2.15901C22.2629 2.58097 22.5 3.15326 22.5 3.75V8.25C22.5 8.84674 22.2629 9.41903 21.841 9.84099C21.419 10.2629 20.8467 10.5 20.25 10.5H15.75C15.1533 10.5 14.581 10.2629 14.159 9.84099C13.7371 9.41903 13.5 8.84674 13.5 8.25V3.75ZM1.5 15.75C1.5 15.1533 1.73705 14.581 2.15901 14.159C2.58097 13.7371 3.15326 13.5 3.75 13.5H8.25C8.84674 13.5 9.41903 13.7371 9.84099 14.159C10.2629 14.581 10.5 15.1533 10.5 15.75V20.25C10.5 20.8467 10.2629 21.419 9.84099 21.841C9.41903 22.2629 8.84674 22.5 8.25 22.5H3.75C3.15326 22.5 2.58097 22.2629 2.15901 21.841C1.73705 21.419 1.5 20.8467 1.5 20.25V15.75ZM13.5 15.75C13.5 15.1533 13.7371 14.581 14.159 14.159C14.581 13.7371 15.1533 13.5 15.75 13.5H20.25C20.8467 13.5 21.419 13.7371 21.841 14.159C22.2629 14.581 22.5 15.1533 22.5 15.75V20.25C22.5 20.8467 22.2629 21.419 21.841 21.841C21.419 22.2629 20.8467 22.5 20.25 22.5H15.75C15.1533 22.5 14.581 22.2629 14.159 21.841C13.7371 21.419 13.5 20.8467 13.5 20.25V15.75Z\",\n    fill: \"white\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgGridFill);\nexport default __webpack_public_path__ + \"static/media/grid-fill.a90198cdea88b8c2de274b533273c135.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\n\r\nexport default function ButtonBlock(props) {\r\n  return <div className=\"d-grid gap-2\">{props.children}</div>;\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Auth } from \"../../services/amplify\";\r\n\r\nimport { Navbar, Nav, NavDropdown, Container } from \"react-bootstrap\";\r\nimport { BsPersonCircle } from \"react-icons/bs\";\r\n\r\nimport NavbarLogo from \"../../assets/logo_3.png\";\r\n\r\nimport AuthContext from \"../../contexts/auth\";\r\n\r\nimport \"./styles.css\";\r\n\r\nfunction Menu(props) {\r\n  const navigate = useNavigate();\r\n\r\n  const [vendasDrop, setVendasDrop] = useState(false);\r\n  const [comprasDrop, setComprasDrop] = useState(false);\r\n  const [expedicaoDrop, setExpedicaoDrop] = useState(false);\r\n  const [relatoriosDrop, setRelatoriosDrop] = useState(false);\r\n  const [cadastrosDrop, setCadastrosDrops] = useState(false);\r\n  const [userDrop, setUserDrop] = useState(false);\r\n\r\n  const [vendasActive, setVendasActive] = useState(false);\r\n  const [comprasActive, setComprasActive] = useState(false);\r\n  const [expedicaoActive, setExpedicaoActive] = useState(false);\r\n  const [relatoriosActive, setRelatoriosActive] = useState(false);\r\n  const [cadastrosActive, setCadastrosActive] = useState(false);\r\n\r\n  const [userName, setUserName] = useState(\"\");\r\n\r\n  const userContext = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    const pathname = window.location.pathname;\r\n\r\n    if (pathname.includes(\"vendas\")) setVendasActive(true);\r\n    if (pathname.includes(\"compras\")) setComprasActive(true);\r\n    if (pathname.includes(\"expedicao\")) setExpedicaoActive(true);\r\n    if (pathname.includes(\"relatorios\")) setRelatoriosActive(true);\r\n    if (pathname.includes(\"cadastros\")) setCadastrosActive(true);\r\n\r\n    if (userContext) {\r\n      setUserName(userContext.attributes[\"custom:displayname\"]);\r\n    } else {\r\n      setUserName(\"Convidado\");\r\n    }\r\n  }, [userContext]);\r\n\r\n  const signOut = () => {\r\n    Auth.signOut()\r\n      .then((data) => {\r\n        navigate(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        navigate(\"/\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" sticky=\"top\">\r\n        <Container fluid>\r\n          <Link to=\"/\" className=\"m-0 p-0\">\r\n            <Navbar.Brand className=\"\">\r\n              <img src={NavbarLogo} width=\"70\" alt=\"Logo Binx\" />\r\n            </Navbar.Brand>\r\n          </Link>\r\n\r\n          <Navbar.Toggle />\r\n\r\n          {props.logged && (\r\n            <>\r\n              <Navbar.Collapse>\r\n                <Nav className=\"mr-auto\" navbarScroll>\r\n                  {/* Dropdown de Vendas */}\r\n                  <NavDropdown\r\n                    title=\"Vendas\"\r\n                    active={vendasActive}\r\n                    show={vendasDrop}\r\n                    onMouseEnter={() => setVendasDrop(true)}\r\n                    onMouseLeave={() => setVendasDrop(false)}\r\n                  >\r\n                    <NavDropdown.Item\r\n                      as={Link}\r\n                      href=\"/vendas/frete\"\r\n                      to=\"/vendas/frete\"\r\n                    >\r\n                      Cálculo de Frete\r\n                    </NavDropdown.Item>\r\n                    <NavDropdown.Item\r\n                      as={Link}\r\n                      href=\"/vendas/margem\"\r\n                      to=\"/vendas/margem\"\r\n                    >\r\n                      Cálculo de Margem\r\n                    </NavDropdown.Item>\r\n                    <NavDropdown.Item\r\n                      as={Link}\r\n                      href=\"/vendas/prospeccao\"\r\n                      to=\"/vendas/prospeccao\"\r\n                    >\r\n                      Prospecção de Clientes\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n\r\n                  {/* Dropdown de Compras */}\r\n                  <NavDropdown\r\n                    title=\"Compras\"\r\n                    show={comprasDrop}\r\n                    active={comprasActive}\r\n                    onMouseEnter={() => setComprasDrop(!comprasDrop)}\r\n                    onMouseLeave={() => setComprasDrop(false)}\r\n                  >\r\n                    <NavDropdown.Item\r\n                      as={Link}\r\n                      href=\"/compras/dashboard\"\r\n                      to=\"/compras/dashboard\"\r\n                    >\r\n                      Dashboard de Compras\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n\r\n                  {/* Dropdown da Expedição */}\r\n                  <NavDropdown\r\n                    title=\"Expedição\"\r\n                    show={expedicaoDrop}\r\n                    active={expedicaoActive}\r\n                    onMouseEnter={() => setExpedicaoDrop(!expedicaoDrop)}\r\n                    onMouseLeave={() => setExpedicaoDrop(false)}\r\n                  >\r\n                    <NavDropdown.Item\r\n                      href=\"/expedicao/aprovar\"\r\n                      to=\"/expedicao/aprovar\"\r\n                    >\r\n                      Aprovação de Pedidos\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n\r\n                  {/* Dropdown de Relatórios */}\r\n                  <NavDropdown\r\n                    title=\"Relatórios\"\r\n                    show={relatoriosDrop}\r\n                    active={relatoriosActive}\r\n                    onMouseEnter={() => setRelatoriosDrop(!relatoriosDrop)}\r\n                    onMouseLeave={() => setRelatoriosDrop(false)}\r\n                  >\r\n                    <NavDropdown.Item\r\n                      href=\"/relatorios/minmax\"\r\n                      to=\"/relatorios/minmax\"\r\n                    >\r\n                      Estoque Mínimo e Máximo\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n\r\n                  {/* Dropdown da Cadastros */}\r\n                  <NavDropdown\r\n                    title=\"Cadastros\"\r\n                    show={cadastrosDrop}\r\n                    active={cadastrosActive}\r\n                    onMouseEnter={() => setCadastrosDrops(!cadastrosDrop)}\r\n                    onMouseLeave={() => setCadastrosDrops(false)}\r\n                  >\r\n                    <NavDropdown.Item\r\n                      href=\"/cadastros/produtos\"\r\n                      to=\"/cadastros/produtos\"\r\n                    >\r\n                      Produtos\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n                </Nav>\r\n              </Navbar.Collapse>\r\n\r\n              <Navbar.Collapse className=\"justify-content-end\">\r\n                <Nav className=\"mr-auto\" navbarScroll>\r\n                  <BsPersonCircle />\r\n                  <NavDropdown\r\n                    className=\"dropdown-user\"\r\n                    title={\r\n                      <div className=\"user-dropdown-div \">\r\n                        <div className=\"m-0\">\r\n                          <BsPersonCircle size={25} />\r\n                        </div>\r\n                        <div className=\"user-name\">{userName}</div>\r\n                      </div>\r\n                    }\r\n                    show={userDrop}\r\n                    onMouseEnter={() => setUserDrop(true)}\r\n                    onMouseLeave={() => setUserDrop(false)}\r\n                  >\r\n                    <NavDropdown.Item onClick={signOut}>Sair</NavDropdown.Item>\r\n                  </NavDropdown>\r\n                </Nav>\r\n              </Navbar.Collapse>\r\n            </>\r\n          )}\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\n\r\nimport { Col, Container } from \"react-bootstrap\";\r\n\r\nimport \"./styles.css\";\r\n\r\nexport default function PageContent(props) {\r\n  return (\r\n    <Container\r\n    as={Col}\r\n      md={props.open ? 10 : 11}\r\n      className={`\r\n      page-content-drawer-${props.open ? \"opened\" : \"closed\"}\r\n      mb-5\r\n      `}\r\n      fluid\r\n    >\r\n      {props.children}\r\n    </Container>\r\n  );\r\n}\r\n","function formatarCNPJ(cnpj) {\r\n  if (cnpj) return cnpj.replace(/^(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})/, \"$1.$2.$3/$4-$5\");\r\n  return \"\";\r\n}\r\n\r\nfunction formatarTelefone(telefone) {\r\n  if (!telefone) return \"\";\r\n\r\n  // Telefone 0800\r\n  if (telefone.slice(0, 4) === \"0800\") {\r\n    const a = telefone.slice(0, 4);\r\n    const b = telefone.slice(4, 7);\r\n    const c = telefone.slice(7, 11);\r\n\r\n    return `${a} ${b} ${c}`;\r\n  }\r\n\r\n  // Telefone com DD\r\n  if (telefone.length == 10) {\r\n    const a = telefone.slice(0, 2);\r\n    const b = telefone.slice(2, 6);\r\n    const c = telefone.slice(6, 10);\r\n\r\n    return `(${a}) ${b}-${c}`;\r\n  }\r\n\r\n  // Celular com DDD\r\n  if (telefone.length === 11) {\r\n    const a = telefone.slice(0, 2);\r\n    const b = telefone.slice(2, 7);\r\n    const c = telefone.slice(7, 11);\r\n\r\n    return `(${a}) ${b}-${c}`;\r\n  }\r\n\r\n  return telefone;\r\n}\r\n\r\nexport { formatarTelefone, formatarCNPJ };\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Modal, Button, Form, Row, Col, Spinner, Toast, Alert } from \"react-bootstrap\";\r\nimport ButtonBlock from \"../../ButtonBlock\";\r\nimport { formatarCNPJ, formatarTelefone } from \"../../../util/formatar\";\r\nimport AuthContext from \"../../../contexts/auth\";\r\nimport api from \"../../../services/api\";\r\n\r\nexport default function ModalProspeccao(props) {\r\n  // Contexto de Usuário\r\n  const userContext = useContext(AuthContext);\r\n  const [idusuario, setIdusuario] = useState();\r\n\r\n  // Controle do Modal\r\n  const { show, setShow, prospeccao, carregar } = props;\r\n\r\n  // Controlled Inputs\r\n  const [idProspeccao, setIdProspeccao] = useState(\"\");\r\n  const [empresa, setEmpresa] = useState(\"\");\r\n  const [contato, setContato] = useState(\"\");\r\n  const [cnpj, setCnpj] = useState(\"\");\r\n  const [telefone, setTelefone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [comentarios, setComentarios] = useState(\"\");\r\n  const [vendedor, setVendedor] = useState(\"\");\r\n\r\n  // Indicadores de erro para validação do formulário\r\n  const [erroEmpresa, setErroEmpresa] = useState(false);\r\n  const [erroContato, setErroContato] = useState(false);\r\n  const [erroCnpj, setErroCnpj] = useState(false);\r\n  const [erroTelefone, setErroTelefone] = useState(false);\r\n  const [erroEmail, setErroEmail] = useState(false);\r\n  const [erroVendedor, setErroVendedor] = useState(false);\r\n\r\n  // Flag de registro/validação de nova prospecação\r\n  const [enviando, setEnviando] = useState(false);\r\n  const [validando, setValidando] = useState(false);\r\n  const [editando, setEditando] = useState(false);\r\n\r\n  // Modal de falha na realização de prospecção\r\n  const [falhaProspeccao, setFalhaProspeccao] = useState(false);\r\n  const [mensagemFalha, setMensagemFalha] = useState(false);\r\n  const [prospeccaoCriada, setProspeccaoCriada] = useState(false);\r\n  const [prospeccaoAtualizada, setProspeccaoAtualizada] = useState(false);\r\n\r\n  // Modal de resultado da validação\r\n  const [showResultadoValidacao, setShowResultadoValidacao] = useState(false);\r\n  const [mensagemValidacao, setMensagemValidacao] = useState(\"\");\r\n\r\n  // Permissionamento\r\n  const [usuarioDono, setUsuarioDono] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Carregar valores nos inputs controlados\r\n    setIdProspeccao(prospeccao.id);\r\n    setEmpresa(prospeccao.empresa);\r\n    setContato(prospeccao.contato);\r\n    setCnpj(prospeccao.cnpj);\r\n    setTelefone(prospeccao.telefone);\r\n    setEmail(prospeccao.email);\r\n    setComentarios(prospeccao.comentarios);\r\n    setVendedor(prospeccao.vendedor);\r\n\r\n    // Carrega contexto de usuário\r\n    setIdusuario(useContext[\"username\"]);\r\n    if (idusuario === prospeccao.idusuario) {\r\n      setUsuarioDono(true);\r\n    }\r\n  }, [prospeccao]);\r\n\r\n  const resetarFlags = () => {\r\n    setEditando(false);\r\n    setFalhaProspeccao(false);\r\n    setProspeccaoCriada(false);\r\n\r\n    // Reseta flags de erros\r\n    setErroEmpresa(false);\r\n    setErroContato(false);\r\n    setErroCnpj(false);\r\n    setErroTelefone(false);\r\n    setErroEmail(false);\r\n    setErroVendedor(false);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    // Fecha o modal\r\n    setShow(false);\r\n\r\n    // Reseta todas as flags ao fechar o modal\r\n    resetarFlags();\r\n\r\n    // Disparar chamada de recarregar a tabela de resultados de prospecções\r\n    if (prospeccaoAtualizada) {\r\n      setProspeccaoAtualizada(false);\r\n      carregar();\r\n    }\r\n  };\r\n\r\n  const verificaRequisitos = () => {\r\n    setErroEmpresa(false);\r\n    setErroContato(false);\r\n    setErroCnpj(false);\r\n    setErroTelefone(false);\r\n    setErroEmail(false);\r\n    setErroVendedor(false);\r\n\r\n    // Aplicar regras na construção do formulário\r\n    let contemErros = false;\r\n\r\n    if (empresa === \"\") {\r\n      setErroEmpresa(true);\r\n      contemErros = true;\r\n    }\r\n\r\n    if (contato === \"\") {\r\n      setErroContato(true);\r\n      contemErros = true;\r\n    }\r\n\r\n    if (telefone === \"\") {\r\n      setErroTelefone(true);\r\n      contemErros = true;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      setErroEmail(true);\r\n      contemErros = true;\r\n    }\r\n\r\n    if (vendedor === \"\") {\r\n      setErroVendedor(true);\r\n      contemErros = true;\r\n    }\r\n\r\n    return contemErros;\r\n  };\r\n\r\n  const atualizarProspeccao = async () => {\r\n    // Configura/Reseta flags necessárias\r\n    resetarFlags();\r\n    setEditando(true);\r\n\r\n    // Checa se a verificação de requisitos encontrou algum erro\r\n    if (verificaRequisitos()) {\r\n      setEditando(false);\r\n      return;\r\n    }\r\n\r\n    // Requisição não contém erros, prosseguir com o envio para a API\r\n    api\r\n      .put(\"/vendas/prospeccao\", {\r\n        id: idProspeccao,\r\n        idusuario,\r\n        empresa,\r\n        contato,\r\n        telefone,\r\n        email,\r\n        cnpj,\r\n        vendedor,\r\n        comentarios,\r\n      })\r\n      .then((result) => {\r\n        if (result.data.message === \"Prospecção atualizada com sucesso.\") {\r\n          setProspeccaoAtualizada(true);\r\n        } else {\r\n          setFalhaProspeccao(true);\r\n          setMensagemFalha(result.data.message);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Erro na atualização de prospecção:\", error.message);\r\n      })\r\n      .finally(() => {\r\n        setEditando(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={handleClose} size=\"lg\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{prospeccao.empresa}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Row className=\"mb-3\">\r\n              <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                <Form.Label>Empresa</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={empresa}\r\n                  onChange={(e) => setEmpresa(e.target.value)}\r\n                  isInvalid={erroEmpresa}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  Insira o nome da empresa\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} sm={4} controlId=\"formGridPassword\">\r\n                <Form.Label>CNPJ</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={formatarCNPJ(cnpj)}\r\n                  onChange={(e) => setCnpj(e.target.value)}\r\n                  isInvalid={erroCnpj}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} sm={2} controlId=\"formGridPassword\">\r\n                <Form.Label>Data</Form.Label>\r\n                <Form.Control\r\n                  readOnly\r\n                  type=\"text\"\r\n                  value={new Date(prospeccao.createdAt).toLocaleDateString(\"pt-BR\")}\r\n                />\r\n              </Form.Group>\r\n            </Row>\r\n            <Row className=\"mb-3\">\r\n              <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                <Form.Label>Vendedor</Form.Label>\r\n                <Form.Control readOnly type=\"text\" value={vendedor} />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                <Form.Label>Contato</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={contato}\r\n                  onChange={(e) => setContato(e.target.value)}\r\n                  isInvalid={erroContato}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  Insira o nome do contato\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Row>\r\n            <Row className=\"mb-3\">\r\n              <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  isInvalid={erroEmail}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  Insira um email válido\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group as={Col} sm={4} controlId=\"formGridEmail\">\r\n                <Form.Label>Telefone</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={formatarTelefone(telefone)}\r\n                  onChange={(e) => setTelefone(e.target.value)}\r\n                  isInvalid={erroTelefone}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  Insira um número de telefone\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Row>\r\n            <Row className=\"mb-3\">\r\n              <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                <Form.Label>Comentarios</Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows={6}\r\n                  value={comentarios}\r\n                  onChange={(e) => setComentarios(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n            </Row>\r\n          </Form>\r\n\r\n          {/* Resultados da operação */}\r\n          {prospeccaoAtualizada && (\r\n            <Alert variant=\"success\" className=\"text-center\">\r\n              Os dados da prospecção foram atualizados com sucesso.\r\n            </Alert>\r\n          )}\r\n\r\n          {falhaProspeccao && (\r\n            <>\r\n              <Alert variant=\"warning\" className=\"text-center\">\r\n                <p>Não foi possível atualizar os dados da prospecção.</p>\r\n\r\n                <p>{mensagemFalha}</p>\r\n              </Alert>\r\n            </>\r\n          )}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          {/* {usuarioDono && (\r\n            <Button variant=\"outline-danger\" onClick={() => setShow(false)}>\r\n              Remover Prospecção\r\n            </Button>\r\n          )} */}\r\n          <Button variant=\"primary\" onClick={atualizarProspeccao}>\r\n            {editando && (\r\n              <Spinner\r\n                className=\"mx-4\"\r\n                as=\"span\"\r\n                animation=\"border\"\r\n                size=\"sm\"\r\n                role=\"status\"\r\n                aria-hidden=\"true\"\r\n              />\r\n            )}\r\n            {!editando && <>Salvar Alterações</>}\r\n          </Button>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Fechar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport \"react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css\";\r\n\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport filterFactory, {\r\n  textFilter,\r\n  selectFilter,\r\n  Comparator,\r\n} from \"react-bootstrap-table2-filter\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nimport ModalProspeccao from \"../ModalProspeccao\";\r\nimport { formatarCNPJ, formatarTelefone } from \"../../../util/formatar\";\r\n\r\nimport \"./styles.css\";\r\n\r\nfunction TabelaResultados(props) {\r\n  const { resultados, carregar } = props;\r\n\r\n  const [carregado, setCarregado] = useState(true);\r\n\r\n  const [abrirProspeccao, setAbrirProspeccao] = useState(false);\r\n\r\n  const [prospeccaoParaAbrir, setProspeccaoParaAbrir] = useState({});\r\n\r\n  const vendedoresSelectOptions = {\r\n    Amanda: \"Amanda\",\r\n    Daiane: \"Daiane\",\r\n    Dayane: \"Dayane\",\r\n    Gabriela: \"Gabriela\",\r\n    Guilherme: \"Guilherme\",\r\n    Mariane: \"Mariane\",\r\n    Felipe: \"Felipe\",\r\n  };\r\n\r\n  const customTotal = (from, to, size) => (\r\n    <span className=\"react-bootstrap-table-pagination-total mx-3\">{size} Resultados</span>\r\n  );\r\n\r\n  const options = {\r\n    alwaysShowAllBtns: true,\r\n    showTotal: true,\r\n    disablePageTitle: true,\r\n    paginationTotalRenderer: customTotal,\r\n    sizePerPage: 20,\r\n\r\n    firstPageText: \"<<\",\r\n    prePageText: \"<\",\r\n    nextPageText: \">\",\r\n    lastPageText: \">>\",\r\n\r\n    nextPageTitle: \"Primeira Página\",\r\n    prePageTitle: \"Página Anterior\",\r\n    firstPageTitle: \"Próxima Página\",\r\n    lastPageTitle: \"Última Página\",\r\n  };\r\n\r\n  function dateFormatter(cell, row) {\r\n    return new Date(cell).toLocaleDateString(\"pt-BR\");\r\n  }\r\n\r\n  const rowEvents = {\r\n    onClick: (e, row, rowIndex) => {\r\n      setAbrirProspeccao(true);\r\n      setProspeccaoParaAbrir(row);\r\n    },\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"createdAt\",\r\n      text: \"Data\",\r\n      formatter: dateFormatter,\r\n      headerStyle: {\r\n        width: \"9%\",\r\n      },\r\n    },\r\n    {\r\n      dataField: \"empresa\",\r\n      text: \"Empresa\",\r\n      filter: textFilter({\r\n        placeholder: \"Nome\",\r\n        style: {\r\n          fontSize: \"0.8rem\",\r\n        },\r\n      }),\r\n    },\r\n    {\r\n      dataField: \"contato\",\r\n      text: \"Contato\",\r\n      headerStyle: {\r\n        width: \"8%\",\r\n      },\r\n      filter: textFilter({\r\n        placeholder: \"Contato\",\r\n        style: {\r\n          fontSize: \"0.8rem\",\r\n        },\r\n      }),\r\n    },\r\n    {\r\n      dataField: \"telefone\",\r\n      text: \"Telefone\",\r\n      formatter: (cell) => formatarTelefone(cell),\r\n      filter: textFilter({\r\n        placeholder: \"Telefone\",\r\n        style: {\r\n          fontSize: \"0.8rem\",\r\n        },\r\n      }),\r\n      headerStyle: {\r\n        width: \"10%\",\r\n      },\r\n    },\r\n    {\r\n      dataField: \"email\",\r\n      text: \"Email\",\r\n      filter: textFilter({\r\n        placeholder: \"Email\",\r\n        style: {\r\n          fontSize: \"0.8rem\",\r\n        },\r\n      }),\r\n      headerStyle: {\r\n        width: \"20%\",\r\n      },\r\n    },\r\n    {\r\n      dataField: \"cnpj\",\r\n      text: \"CNPJ\",\r\n      formatter: (cell) => formatarCNPJ(cell),\r\n      filter: textFilter({\r\n        placeholder: \"CNPJ\",\r\n        style: {\r\n          fontSize: \"0.8rem\",\r\n        },\r\n      }),\r\n      headerStyle: {\r\n        width: \"12%\",\r\n      },\r\n    },\r\n    {\r\n      dataField: \"vendedor\",\r\n      text: \"Vendedor\",\r\n      formatter: (cell) => vendedoresSelectOptions[cell],\r\n      filter: selectFilter({\r\n        options: vendedoresSelectOptions,\r\n        placeholder: \"Vendedor\",\r\n        label: false,\r\n        style: {\r\n          fontSize: \"0.8rem\",\r\n        },\r\n      }),\r\n      headerStyle: {\r\n        width: \"8%\",\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {carregado && (\r\n        <BootstrapTable\r\n          classes=\"table-sm\"\r\n          keyField=\"id\"\r\n          data={resultados}\r\n          columns={columns}\r\n          hover\r\n          bordered={false}\r\n          filter={filterFactory()}\r\n          filterPosition={\"top\"}\r\n          pagination={paginationFactory(options)}\r\n          rowEvents={rowEvents}\r\n          noDataIndication=\"Nenhum Resultado Encontrado\"\r\n          rowStyle={{ cursor: \"pointer\" }}\r\n        />\r\n      )}\r\n\r\n      {/* Modal de Prospecção */}\r\n      <ModalProspeccao\r\n        show={abrirProspeccao}\r\n        setShow={setAbrirProspeccao}\r\n        prospeccao={prospeccaoParaAbrir}\r\n        carregar={carregar}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TabelaResultados;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport api from \"../../services/api\";\r\n\r\nimport Menu from \"../../components/Menu\";\r\n\r\nimport TabelaResultados from \"../../components/Prospeccoes/TabelaResultados\";\r\nimport { BsFillBackspaceFill, BsPlusLg } from \"react-icons/bs\";\r\nimport GridFillWhite from \"../../assets/grid-fill.svg\";\r\n\r\nimport PageContent from \"../../components/PageContent\";\r\n\r\nimport ButtonBlock from \"../../components/ButtonBlock\";\r\n\r\nimport moment from \"moment\";\r\n\r\nimport \"./styles.css\";\r\nimport {\r\n  Card,\r\n  Container,\r\n  Row,\r\n  Form,\r\n  Button,\r\n  Spinner,\r\n  Col,\r\n  Image,\r\n} from \"react-bootstrap\";\r\n\r\nimport AuthContext from \"../../contexts/auth\";\r\n\r\nconst Drawer = (props) => {\r\n  const { open, setOpen } = props;\r\n  const {\r\n    dataInicial,\r\n    setDataInicial,\r\n    dataFinal,\r\n    setDataFinal,\r\n    carregarProspeccoes,\r\n  } = props;\r\n\r\n  const [drawerStateClass, setDrawerStateClass] = useState(\"drawer-closed\");\r\n\r\n  const [segundoDatePicker, setSegundoDatePicker] = useState(true);\r\n\r\n  const handleDrawerToggle = () => {\r\n    if (open) {\r\n      setOpen(false);\r\n      setDrawerStateClass(\"drawer-closed\");\r\n    } else {\r\n      setOpen(true);\r\n      setDrawerStateClass(\"drawer-opened\");\r\n    }\r\n  };\r\n\r\n  const OpenDrawer = () => {\r\n    return (\r\n      <div className=\"drawer-open-button-div\" onClick={handleDrawerToggle}>\r\n        <Image src={GridFillWhite} width=\"16px\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const selecionarPeriodo = (value) => {\r\n    let inicio = \"\";\r\n    let final = \"\";\r\n\r\n    switch (value) {\r\n      // Hoje\r\n      case \"0\":\r\n        setSegundoDatePicker(false);\r\n        inicio = moment().format(\"YYYY-MM-DD\");\r\n        final = moment().format(\"YYYY-MM-DD\");\r\n        break;\r\n      // Mês Atual\r\n      case \"1\":\r\n        setSegundoDatePicker(true);\r\n        inicio = moment().startOf(\"month\").format(\"YYYY-MM-DD\");\r\n        final = moment().endOf(\"month\").format(\"YYYY-MM-DD\");\r\n        break;\r\n      // Mês Passado\r\n      case \"2\":\r\n        setSegundoDatePicker(true);\r\n        inicio = moment()\r\n          .subtract(1, \"months\")\r\n          .startOf(\"month\")\r\n          .format(\"YYYY-MM-DD\");\r\n        final = moment()\r\n          .subtract(1, \"months\")\r\n          .endOf(\"month\")\r\n          .format(\"YYYY-MM-DD\");\r\n        break;\r\n      case \"3\":\r\n        // Período Customizado\r\n        setSegundoDatePicker(true);\r\n        inicio = moment().startOf(\"month\").format(\"YYYY-MM-DD\");\r\n        final = moment().endOf(\"month\").format(\"YYYY-MM-DD\");\r\n        break;\r\n    }\r\n\r\n    console.log(\"Configurando Inicio para:\", inicio);\r\n    console.log(\"Configurando Final para:\", final);\r\n\r\n    setDataInicial(inicio);\r\n    setDataFinal(final);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <OpenDrawer />\r\n      <Container\r\n        as={Col}\r\n        className={`drawer-div ${drawerStateClass}`}\r\n        xs={10}\r\n        sm={4}\r\n        lg={3}\r\n        xl={2}\r\n      >\r\n        <BsFillBackspaceFill\r\n          className=\"close-icon\"\r\n          size={25}\r\n          onClick={handleDrawerToggle}\r\n        />\r\n        <div className=\"drawer-content \">\r\n          <div className=\"drawer-header\">\r\n            <h5 style={{ fontSize: \"1.2rem\" }}>Prospecções</h5>\r\n          </div>\r\n          <div>\r\n            <p style={{ fontSize: \"0.8rem\" }}>\r\n              Prospecções de clientes corporativos\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"my-3\">\r\n            <h5 style={{ fontSize: \"1rem\" }}>Filtrar por Data</h5>\r\n          </div>\r\n\r\n          <div>\r\n            {/* <Form> */}\r\n            <Form.Label>Período</Form.Label>\r\n            <Form.Select\r\n              aria-label=\"Default select example\"\r\n              onChange={(e) => selecionarPeriodo(e.target.value)}\r\n            >\r\n              <option value=\"0\">Hoje</option>\r\n              <option value=\"1\" selected>\r\n                Mês atual\r\n              </option>\r\n              <option value=\"2\">Mês passado</option>\r\n              <option value=\"3\">Período customizado</option>\r\n            </Form.Select>\r\n            {/* </Form> */}\r\n          </div>\r\n\r\n          <div>\r\n            <div className=\"my-2\">\r\n              {/* <Form> */}\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Data Inicial</Form.Label>\r\n                <Form.Control\r\n                  type=\"date\"\r\n                  value={dataInicial}\r\n                  onChange={(e) => setDataInicial(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n\r\n              {segundoDatePicker && (\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Data Final</Form.Label>\r\n                  <Form.Control\r\n                    type=\"date\"\r\n                    value={dataFinal}\r\n                    onChange={(e) => setDataFinal(e.target.value)}\r\n                  />\r\n                </Form.Group>\r\n              )}\r\n              {/* </Form> */}\r\n            </div>\r\n\r\n            <Container fluid className=\"p-0 m-0\">\r\n              <ButtonBlock>\r\n                <Button variant=\"primary\" onClick={carregarProspeccoes}>\r\n                  Filtrar\r\n                </Button>\r\n              </ButtonBlock>\r\n            </Container>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nfunction Prospeccoes() {\r\n  // Contexto de Usuário\r\n  const userContext = useContext(AuthContext);\r\n\r\n  const [idusuario, setIdusuario] = useState(\"\");\r\n\r\n  const [openDrawer, setOpenDrawer] = useState(false);\r\n\r\n  const [prospeccoes, setProspeccoes] = useState([]);\r\n  const [prospeccoesCarregadas, setProspeccoesCarregadas] = useState(false);\r\n  const [carregando, setCarregando] = useState(true);\r\n\r\n  const [dataInicial, setDataInicial] = useState(\r\n    moment().startOf(\"month\").format(\"YYYY-MM-DD\")\r\n  );\r\n  const [dataFinal, setDataFinal] = useState(\r\n    moment().endOf(\"month\").format(\"YYYY-MM-DD\")\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (userContext) {\r\n      carregarProspeccoes();\r\n    }\r\n  }, []);\r\n\r\n  const carregarProspeccoes = () => {\r\n    setProspeccoesCarregadas(false);\r\n    setCarregando(true);\r\n\r\n    try {\r\n      api\r\n        .get(`/vendas/prospeccao`, {\r\n          params: {\r\n            idusuario: userContext[\"username\"],\r\n            inicio: dataInicial,\r\n            final: dataFinal,\r\n          },\r\n        })\r\n        .then((result) => {\r\n          console.log(\"Prospeccoes adquiridas\");\r\n          setProspeccoes(result.data.prospeccoes);\r\n          setCarregando(false);\r\n          setProspeccoesCarregadas(true);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Erro ao carregar prospeccções\");\r\n    }\r\n  };\r\n\r\n  const Asterisco = () => {\r\n    return <span style={{ color: \"red\" }}>*</span>;\r\n  };\r\n\r\n  const [open, setOpen] = useState(true);\r\n\r\n  const handleToggle = () => setOpen(!open);\r\n\r\n  return (\r\n    <>\r\n      <Menu logged={true} />\r\n\r\n      <Container className=\"bg-gray container-binx\" fluid>\r\n        <Row className=\"flex-xl-nowrap pt-4\">\r\n          <Col\r\n            xs={openDrawer ? 10 : 1}\r\n            sm={openDrawer ? 4 : 1}\r\n            lg={openDrawer ? 3 : 1}\r\n            xl={openDrawer ? 2 : 1}\r\n          >\r\n            <Drawer\r\n              open={openDrawer}\r\n              setOpen={setOpenDrawer}\r\n              dataInicial={dataInicial}\r\n              setDataInicial={setDataInicial}\r\n              dataFinal={dataFinal}\r\n              setDataFinal={setDataFinal}\r\n              carregarProspeccoes={carregarProspeccoes}\r\n            />\r\n          </Col>\r\n          <PageContent open={openDrawer}>\r\n            <Container fluid className=\"bg-white container-binx binx-card p-4\">\r\n              <div\r\n                fluid\r\n                className=\"d-flex justify-content-between align-itens-center\"\r\n              >\r\n                <div>\r\n                  <Card.Title className=\"mt-2\">\r\n                    Prospecção de Clientes Corporativos\r\n                  </Card.Title>\r\n                  <Card.Subtitle className=\"my-3 text-muted\">\r\n                    Minha lista de prospeccções realizadas.\r\n                  </Card.Subtitle>\r\n                </div>\r\n                <div>\r\n                  <ButtonBlock>\r\n                    <Link to=\"/vendas/prospeccao/incluir\">\r\n                      <Button variant=\"success\">\r\n                        <Container className=\"m-0 p-0 d-flex\">\r\n                          <div>\r\n                            <BsPlusLg size={15} />\r\n                          </div>\r\n                          <div className=\"mx-3\">Incluir Prospecção</div>\r\n                        </Container>\r\n                      </Button>\r\n                    </Link>\r\n                  </ButtonBlock>\r\n                </div>\r\n              </div>\r\n\r\n              {/* <Button onClick={handleToggle}>Fechar</Button> */}\r\n\r\n              {carregando && (\r\n                <Container className=\"text-center center-vertically\">\r\n                  <Spinner\r\n                    as=\"span\"\r\n                    animation=\"grow\"\r\n                    size=\"lg\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                  />\r\n                </Container>\r\n              )}\r\n\r\n              {prospeccoesCarregadas && (\r\n                <>\r\n                  <Container fluid className=\"p-0 mt-4\">\r\n                    <TabelaResultados\r\n                      resultados={prospeccoes}\r\n                      carregar={carregarProspeccoes}\r\n                    />\r\n                  </Container>\r\n                </>\r\n              )}\r\n            </Container>\r\n          </PageContent>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Prospeccoes;\r\n","import axios from \"axios\";\r\n\r\n// Para utilização com certificado SSL inválido\r\n// import https from \"https\";\r\n// const api = axios.create({\r\n//   baseURL: \"https://api.binx.com.br/api\",\r\n//   httpsAgent: new https.Agent({\r\n//     rejectUnauthorized: false,\r\n//   }),\r\n// });\r\n\r\nconst enviroment = process.env.REACT_APP_ENVIROMENT || \"development\";\r\n\r\nlet baseURL =\r\n  enviroment === \"development\"\r\n    ? \"http://localhost:4005/api\"\r\n    : \"https://api.binx.com.br/api\";\r\n\r\nconst api = axios.create({ baseURL: baseURL });\r\n\r\nexport default api;\r\n"],"names":["ButtonBlock","props","className","children","navigate","useNavigate","useState","vendasDrop","setVendasDrop","comprasDrop","setComprasDrop","expedicaoDrop","setExpedicaoDrop","relatoriosDrop","setRelatoriosDrop","cadastrosDrop","setCadastrosDrops","userDrop","setUserDrop","vendasActive","setVendasActive","comprasActive","setComprasActive","expedicaoActive","setExpedicaoActive","relatoriosActive","setRelatoriosActive","cadastrosActive","setCadastrosActive","userName","setUserName","userContext","useContext","AuthContext","useEffect","pathname","window","location","includes","attributes","Navbar","bg","variant","expand","sticky","Container","fluid","to","src","NavbarLogo","width","alt","logged","Nav","navbarScroll","NavDropdown","title","active","show","onMouseEnter","onMouseLeave","as","Link","href","size","onClick","Auth","then","data","catch","error","PageContent","Col","md","open","formatarCNPJ","cnpj","replace","formatarTelefone","telefone","slice","a","b","c","length","ModalProspeccao","idusuario","setIdusuario","setShow","prospeccao","carregar","idProspeccao","setIdProspeccao","empresa","setEmpresa","contato","setContato","setCnpj","setTelefone","email","setEmail","comentarios","setComentarios","vendedor","setVendedor","erroEmpresa","setErroEmpresa","erroContato","setErroContato","erroCnpj","setErroCnpj","erroTelefone","setErroTelefone","erroEmail","setErroEmail","setErroVendedor","editando","setEditando","falhaProspeccao","setFalhaProspeccao","mensagemFalha","setMensagemFalha","setProspeccaoCriada","prospeccaoAtualizada","setProspeccaoAtualizada","setUsuarioDono","id","resetarFlags","handleClose","verificaRequisitos","contemErros","atualizarProspeccao","api","result","message","console","log","finally","Modal","onHide","closeButton","Form","Row","controlId","type","value","onChange","e","target","isInvalid","sm","readOnly","Date","createdAt","toLocaleDateString","rows","Alert","Button","Spinner","animation","role","resultados","carregado","abrirProspeccao","setAbrirProspeccao","prospeccaoParaAbrir","setProspeccaoParaAbrir","vendedoresSelectOptions","Amanda","Daiane","Dayane","Gabriela","Guilherme","Mariane","Felipe","options","alwaysShowAllBtns","showTotal","disablePageTitle","paginationTotalRenderer","from","sizePerPage","firstPageText","prePageText","nextPageText","lastPageText","nextPageTitle","prePageTitle","firstPageTitle","lastPageTitle","rowEvents","row","rowIndex","columns","dataField","text","formatter","cell","headerStyle","filter","textFilter","placeholder","style","fontSize","selectFilter","label","classes","keyField","hover","bordered","filterFactory","filterPosition","pagination","paginationFactory","noDataIndication","rowStyle","cursor","Drawer","setOpen","dataInicial","setDataInicial","dataFinal","setDataFinal","carregarProspeccoes","drawerStateClass","setDrawerStateClass","segundoDatePicker","setSegundoDatePicker","handleDrawerToggle","OpenDrawer","Image","GridFillWhite","xs","lg","xl","inicio","final","moment","format","startOf","endOf","subtract","selecionarPeriodo","selected","openDrawer","setOpenDrawer","prospeccoes","setProspeccoes","prospeccoesCarregadas","setProspeccoesCarregadas","carregando","setCarregando","params","Menu","Card","baseURL","process","REACT_APP_ENVIROMENT","axios"],"sourceRoot":""}