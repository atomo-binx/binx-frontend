{"version":3,"file":"static/js/67.81c4be2d.chunk.js","mappings":"2XA6BMA,EAAM,SAACC,EAAOC,GAAR,OAAsBC,GAAAA,CAASF,EAAO,CAAEC,UAAAA,KAC9CE,EAAY,SAACD,EAAUE,GAAX,OAChBF,EAASG,OAAO,CAAED,OAAAA,IAAUE,QAAQ,IAAK,KAAKA,QAAQ,IAAK,KAAKA,QAAQ,IAAK,MAmU/E,MAjUA,WACE,OAA4CC,EAAAA,EAAAA,YAA5C,eAAOC,EAAP,KAAuBC,EAAvB,KAEA,GAAoCF,EAAAA,EAAAA,WAAS,GAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACA,GAAkDJ,EAAAA,EAAAA,WAAS,GAA3D,eAAOK,EAAP,KAA0BC,EAA1B,KAEA,GAAwCN,EAAAA,EAAAA,UAAS,IAAjD,eAAOO,EAAP,KAAqBC,EAArB,KACA,GAA0CR,EAAAA,EAAAA,UAAS,IAAnD,eAAOS,EAAP,KAAsBC,EAAtB,KACA,GAA0CV,EAAAA,EAAAA,UAAS,IAAnD,eAAOW,EAAP,KAAsBC,EAAtB,KAEA,GAA4CZ,EAAAA,EAAAA,WAAS,GAArD,eAAOa,EAAP,KAAuBC,EAAvB,KAEA,GAAkCd,EAAAA,EAAAA,WAAS,GAA3C,eAAOe,EAAP,KAAkBC,EAAlB,KAEMC,GAAa,mCAAG,WAAOC,GAAP,iEACpBA,EAAMC,iBAENf,GAAc,GACdE,GAAqB,GACrBU,GAAa,GAEbR,EAAgB,IAChBE,EAAiB,IACjBE,EAAiB,IACjBE,GAAkB,GAElBM,EAAAA,EAAAA,IAAA,iBACiBnB,IACdoB,MAAK,SAACC,GAKL,IAAMC,EAAYD,EAASE,KAAKC,IAAIC,UAAU,EAAG,GAC3CC,EAAWL,EAASE,KAAKC,IAAIC,UAAU,EAAG,GAChDJ,EAASE,KAAKC,IAAMF,EAAY,IAAMI,EAGtCjB,EAAiBY,EAASE,MAGtBF,EAASE,KAAKI,eAAe,UAC/BpB,EAAgBc,EAASE,KAAKK,OAI5BP,EAASE,KAAKI,eAAe,UAC/BhB,EAAiBU,EAASE,KAAKM,OAI7BR,EAASE,KAAKI,eAAe,mBAC/Bd,EAAkBQ,EAASE,KAAT,gBAIpBpB,GAAc,GACdE,GAAqB,MAEtByB,OAAM,SAACC,GACNC,QAAQC,IAAI,0BACZ9B,GAAc,GACdY,GAAa,MAhDG,2CAAH,sDAoDnB,OACE,iCACE,SAACmB,EAAA,EAAD,CAAMC,QAAQ,KAEd,SAACC,EAAA,EAAD,CAAWC,UAAU,OAArB,UACE,UAACC,EAAA,EAAD,YACE,UAACC,EAAA,EAAD,YACE,SAACD,EAAA,EAAD,CAAKD,UAAU,qCAAf,UACE,UAACG,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,SAAWL,UAAU,WAA3C,WACE,SAACG,EAAA,SAAD,kCACA,UAACA,EAAA,OAAD,CAAWH,UAAU,MAArB,WACE,SAACG,EAAA,OAAD,kFAIA,SAACG,EAAA,EAAD,CAAMC,SAAU5B,GAAhB,UACE,UAACsB,EAAA,EAAD,CAAKD,UAAU,qBAAf,WACE,SAACE,EAAA,EAAD,CAAKM,GAAG,IAAR,UACE,SAACF,EAAA,QAAD,WACE,SAACA,EAAA,UAAD,CACEG,KAAK,OACLC,SAAU,SAACC,GAAD,OAAO/C,EAAkB+C,EAAEC,OAAOzD,QAC5C0D,YAAY,+BAIlB,SAACX,EAAA,EAAD,WACE,SAACY,EAAA,EAAD,WACE,UAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUP,KAAK,SAA/B,UACG5C,IACC,SAACoD,EAAA,EAAD,CACEC,UAAU,SACVC,KAAK,KACLC,KAAK,SACL,cAAY,UAGdvD,IAAc,gEAShC,SAACoC,EAAA,EAAD,CAAKD,UAAU,4BAAf,UACE,UAACG,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,SAAWL,UAAU,MAA3C,WACE,SAACG,EAAA,SAAD,CAAaH,UAAU,cAAvB,yBACA,UAACG,EAAA,OAAD,WAEGtC,IACC,SAACkC,EAAA,EAAD,CAAWC,UAAU,cAArB,UACE,SAACiB,EAAA,EAAD,CAASC,UAAU,SAASE,KAAK,aAKpC3C,IACC,SAAC4C,EAAA,EAAD,CAAOrB,UAAU,cAAcgB,QAAQ,SAAvC,4FAODjD,IACC,iCACE,SAACgC,EAAA,EAAD,CAAWC,UAAU,mBAArB,UACE,SAACsB,EAAA,EAAD,CAAOC,GAAG,UAAV,kDAGDhD,IACC,SAAC8C,EAAA,EAAD,CAAOrB,UAAU,cAAcgB,QAAQ,SAAvC,mFAKsB,GAAvB/C,EAAauD,SACZ,+BACE,SAACC,EAAA,EAAD,CAAWzB,UAAU,OAArB,UACE,SAACyB,EAAA,OAAD,wDAOLxD,EAAauD,OAAS,GACrBvD,EAAayD,KAAI,SAACC,GAAD,OACf,+BACE,SAACF,EAAA,EAAD,CAA8BzB,UAAU,OAAxC,UACE,UAACyB,EAAA,OAAD,WAE4B,QAAzBE,EAAOC,iBACN,SAACC,EAAA,QAAD,CACExB,MAAO,GACPyB,IAAI,aACJC,I,67TACA/B,UAAU,iBAGY,YAAzB2B,EAAOC,iBACN,SAACC,EAAA,QAAD,CACExB,MAAO,GACPyB,IAAI,aACJC,I,qoJACA/B,UAAU,kBAIZ2B,EAAOK,OACP,gCACGL,EAAOC,eADV,MAC6BD,EAAOM,QADpC,KAC+C,IAC5CN,EAAOO,MAFV,mBAE8B,KAC5B,SAACZ,EAAA,EAAD,CAAOC,GAAG,UAAV,SACGjE,EAAUJ,EAAIyE,EAAOQ,MAAO,GAAI,WAItCR,EAAOK,OACN,gCACGL,EAAOC,eADV,MAC6BD,EAAOM,QADpC,KAC+C,IAC5CN,EAAOS,gBAhCAT,EAAOQ,aAwC7B,SAACpC,EAAA,EAAD,CAAWC,UAAU,mBAArB,UACE,SAACsB,EAAA,EAAD,CAAOC,GAAG,UAAV,kCAGF,UAACxB,EAAA,EAAD,YACE,UAAC0B,EAAA,EAAD,CAAWY,GAAG,KAAKrC,UAAU,OAA7B,WACE,SAACyB,EAAA,OAAD,CAAgBY,GAAG,KAAKrB,QAAQ,UAAhC,UACE,UAACf,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,WACE,0DAEF,UAACA,EAAA,EAAD,eAAO/B,EAAcR,wBAGzB,SAAC8D,EAAA,OAAD,CAAgBY,GAAG,KAAnB,UACE,UAACpC,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,WACE,8CAEF,UAACA,EAAA,EAAD,WACG,IACA5C,EAAUJ,EAAIiB,EAAcmE,cAAe,GAAI,eAItD,SAACb,EAAA,OAAD,CAAgBY,GAAG,KAAnB,UACE,UAACpC,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,WACE,6CAEF,UAACA,EAAA,EAAD,eAAO/B,EAAcoE,qBAI3B,UAACd,EAAA,EAAD,CAAWY,GAAG,KAAd,WACE,UAACZ,EAAA,OAAD,CAAgBY,GAAG,KAAKrB,QAAQ,UAAhC,WACE,yCADF,IAC6B7C,EAAcqE,YAE3C,UAACf,EAAA,OAAD,CAAgBY,GAAG,KAAnB,WACE,8CACClE,EAAcsE,SAFjB,KAE6BtE,EAAcuE,OAF3C,IAEoD,IACjDvE,EAAcwE,OAHjB,MAG4BxE,EAAcyE,OAH1C,IAGmD,IAChDzE,EAAc0E,OAEjB,SAACpB,EAAA,OAAD,CAAgBY,GAAG,KAAnB,UACE,SAACpC,EAAA,EAAD,WACE,UAACC,EAAA,EAAD,YACE,sCADF,IAC0B/B,EAAcgB,gCAY5D,SAACe,EAAA,EAAD,WACE,SAACD,EAAA,EAAD,CAAKD,UAAU,4BAAf,UACE,UAACG,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,SAAWL,UAAU,MAA3C,WACE,SAACG,EAAA,SAAD,CAAaH,UAAU,cAAvB,0CAGA,UAACG,EAAA,OAAD,WACG5B,IACC,SAAC8C,EAAA,EAAD,CAAOrB,UAAU,cAAcgB,QAAQ,SAAvC,mFAMDnD,IACC,SAACkC,EAAA,EAAD,CAAWC,UAAU,cAArB,UACE,SAACiB,EAAA,EAAD,CAASC,UAAU,SAASE,KAAK,aAIpCrD,IACC,iCACE,UAAC+E,EAAA,EAAD,CAAOC,OAAK,EAACC,UAAQ,EAAC7B,KAAK,KAA3B,WACE,4BACE,2BACE,iCACA,6CACA,mCACA,kCACA,wCAGJ,2BACG9C,EAAcqD,KAAI,SAACuB,GAAD,OACjB,2BACE,wBAAKA,EAAKC,SACV,wBAAKD,EAAKE,QACV,wBAAKF,EAAKG,cACV,wBAAKH,EAAKI,QACV,wBAAKJ,EAAKK,cALHL,EAAKC,gBAapB,SAACzB,EAAA,EAAD,CAAWzB,UAAU,cAArB,UACE,UAACyB,EAAA,OAAD,yBACc,KACZ,SAACH,EAAA,EAAD,CAAOC,GAAG,UAAV,SAAqBpD,EAAcoF,oBAFrC,kC,uJC1UlBC,EAA2BC,EAAAA,YAAiB,WAG/CC,GAH+C,IAChD1D,EADgD,EAChDA,UACG2D,GAF6C,mBAG1BC,EAAAA,EAAAA,KAAKC,EAAAA,GAAD,QAAC,QAC3BH,IAAKA,GACFC,GAFuB,IAG1B3D,UAAW8D,GAAAA,CAAW9D,EAAW,oBAEnCwD,EAAYO,YAAc,cAC1BP,EAAYQ,UAAYC,EAAAA,EACxBT,EAAYU,aAbS,CACnBC,OAAO,GAaT,QCdA,GAHsBC,EAAAA,EAAAA,GAAmB,iBAAkB,CACzDC,UAAW,eCCPxC,GAASuC,EAAAA,EAAAA,GAAmB,SAAU,CAC1CC,UAAW,WAEb,EAAeC,OAAOC,OAAO1C,EAAQ,CACnCgC,MAAOL,EACPgB,QAASC,K,wNCHET,EAAY,CAIvBU,SAAUC,IAAAA,OAKVR,MAAOQ,IAAAA,KAKPC,QAASD,IAAAA,KAKTE,cAAeF,IAAAA,KAKfG,UAAWH,IAAAA,MAQPd,EAAqBJ,EAAAA,YAAiB,WAQzCC,GAAQ,IAPTgB,EAOS,EAPTA,SACA1E,EAMS,EANTA,UACAmE,EAKS,EALTA,MACAS,EAIS,EAJTA,QACAC,EAGS,EAHTA,cACAC,EAES,EAFTA,UACGnB,GACM,YAET,OADAe,GAAWK,EAAAA,EAAAA,IAAmBL,EAAU,QACpBd,EAAAA,EAAAA,KAAK,OAAD,QAAC,QAEvBF,IAAKA,GACFC,GAHmB,IAItB3D,UAAW8D,GAAAA,CAAW9D,EAAWmE,GAAS,GAAJ,OAAOO,EAAP,UAAyBE,GAAW,UAAWC,GAAiB,iBAAkBC,GAAa,GAAJ,OAAOJ,EAAP,qBAGrIb,EAAME,YAAc,QACpBF,EAAMK,aAxBe,CACnBC,OAAO,EACPS,SAAS,EACTC,eAAe,EACfC,WAAW,GAqBb,O,kRCjDME,EAA6BvB,EAAAA,YAAiB,WAUjDC,GAAQ,IATTgB,EASS,EATTA,SACAO,EAQS,EARTA,OACAC,EAOS,EAPTA,SACAC,EAMS,EANTA,SACAnF,EAKS,EALTA,UACAgB,EAIS,EAJTA,QACAoE,EAGS,EAHTA,OACA/C,EAES,EAFTA,GACGsB,GACM,YACTe,GAAWK,EAAAA,EAAAA,IAAmBL,EAAU,mBACxC,OAA6BW,EAAAA,EAAAA,IAAW,QACtCC,KAAKC,EAAAA,EAAAA,GAAaJ,EAAUxB,EAAM6B,MAClCP,OAAAA,GACGtB,IAHL,eAAO8B,EAAP,KAAqBC,EAArB,KAKMC,GAAcC,EAAAA,EAAAA,IAAiB,SAAAhH,GACnC,GAAIsG,EAGF,OAFAtG,EAAMC,sBACND,EAAMiH,kBAIRJ,EAAaK,QAAQlH,MAGnBsG,QAA+Ba,IAAnBpC,EAAMqC,WACpBrC,EAAMqC,UAAY,EAClBrC,EAAM,kBAAmB,GAI3B,IAAMU,EAAYhC,IAAO+C,EAASzB,EAAM6B,KAAO,IAAM,SAAW,OAChE,OAAoB5B,EAAAA,EAAAA,KAAKS,GAAD,QAAC,gBACvBX,IAAKA,GACFC,GACA8B,GAHmB,IAItBK,QAASH,EACT3F,UAAW8D,GAAAA,CAAW9D,EAAW0E,EAAUgB,EAAKO,UAAY,SAAUf,GAAY,WAAYlE,GAAW,GAAJ,OAAO0D,EAAP,YAAmB1D,GAAWoE,GAAU,GAAJ,OAAOV,EAAP,kBAG7IM,EAAcjB,YAAc,gBAC5B,Q,kEC1CMtC,EAAyBgC,EAAAA,YAAiB,SAACE,EAAOD,GACtD,IAaIwC,EAbJ,GASIC,EAAAA,EAAAA,IAAgBxC,EAAO,CACzByC,UAAW,aATXpG,EADF,EACEA,UACUqG,EAFZ,EAEE3B,SACA1D,EAHF,EAGEA,QACAsF,EAJF,EAIEA,WACAC,EALF,EAKEA,SALF,IAOElE,GAAAA,OAPF,MAOO,MAPP,EAQKmE,GARL,YAYM9B,GAAWK,EAAAA,EAAAA,IAAmBsB,EAAiB,cAQrD,OALIC,IACFJ,GAAmC,IAAfI,EAAsB,aAAtB,qBAAmDA,KAIrD1C,EAAAA,EAAAA,KAAK6C,EAAAA,GAAD,QAAC,QACvB/C,IAAKA,GACF8C,GAFmB,IAGtBnE,GAAIA,EACJrC,UAAW8D,GAAAA,CAAW9D,EAAW0E,EAAU1D,GAAW,GAAJ,OAAO0D,EAAP,YAAmB1D,GAAWkF,GAAqB,GAAJ,OAAOxB,EAAP,YAAmBwB,GAAqBK,GAAY,GAAJ,OAAO7B,EAAP,oBAGrJjD,EAAUsC,YAAc,YACxB,MAAeO,OAAOC,OAAO9C,EAAW,CACtCiF,KAAM1B","sources":["pages/FreteVendas/index.js","../node_modules/react-bootstrap/esm/FigureImage.js","../node_modules/react-bootstrap/esm/FigureCaption.js","../node_modules/react-bootstrap/esm/Figure.js","../node_modules/react-bootstrap/esm/Image.js","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport currency from \"currency.js\";\r\n\r\nimport Menu from \"../../components/Menu\";\r\nimport ButtonBlock from \"../../components/ButtonBlock\";\r\n\r\nimport api from \"../../services/api\";\r\n\r\nimport DLogLogo from \"../../assets/dlog.png\";\r\nimport CorreiosLogo from \"../../assets/correios.png\";\r\n\r\nimport {\r\n  Card,\r\n  Badge,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Spinner,\r\n  ListGroup,\r\n  Table,\r\n  Alert,\r\n  Figure,\r\n  InputGroup,\r\n} from \"react-bootstrap\";\r\n\r\n// Funções auxiliares para manuseio de valores monetários\r\nconst BRL = (value, precision) => currency(value, { precision });\r\nconst formatBRL = (currency, symbol) =>\r\n  currency.format({ symbol }).replace(\",\", \"+\").replace(\".\", \",\").replace(\"+\", \".\");\r\n\r\nfunction FreteVendas() {\r\n  const [numeroProposta, setNumeroProposta] = useState();\r\n\r\n  const [carregando, setCarregando] = useState(false);\r\n  const [respostaCarregada, setRespostaCarregada] = useState(false);\r\n\r\n  const [metodosFrete, setMetodosFrete] = useState([]);\r\n  const [dadosProposta, setDadosProposta] = useState([]);\r\n  const [itensProposta, setItensProposta] = useState([]);\r\n\r\n  const [possuiPesoZero, setPossuiPesoZero] = useState(false);\r\n\r\n  const [erroFrete, setErroFrete] = useState(false);\r\n\r\n  const calcularFrete = async (event) => {\r\n    event.preventDefault();\r\n\r\n    setCarregando(true);\r\n    setRespostaCarregada(false);\r\n    setErroFrete(false);\r\n\r\n    setMetodosFrete([]);\r\n    setDadosProposta([]);\r\n    setItensProposta([]);\r\n    setPossuiPesoZero(false);\r\n\r\n    api\r\n      .get(`/frete/${numeroProposta}`)\r\n      .then((resposta) => {\r\n        // Debug\r\n        // console.log(resposta.data);\r\n\r\n        // Formata CEP para exibição\r\n        const inicioCep = resposta.data.cep.substring(0, 5);\r\n        const finalCep = resposta.data.cep.substring(5, 8);\r\n        resposta.data.cep = inicioCep + \"-\" + finalCep;\r\n\r\n        // Dados brutos completos\r\n        setDadosProposta(resposta.data);\r\n\r\n        // Informações de frete, se existirem\r\n        if (resposta.data.hasOwnProperty(\"frete\")) {\r\n          setMetodosFrete(resposta.data.frete);\r\n        }\r\n\r\n        // Informações de itens, se existirem\r\n        if (resposta.data.hasOwnProperty(\"itens\")) {\r\n          setItensProposta(resposta.data.itens);\r\n        }\r\n\r\n        // Verifica se possui pesos zero\r\n        if (resposta.data.hasOwnProperty(\"possuiPesoZero\")) {\r\n          setPossuiPesoZero(resposta.data[\"possuiPesoZero\"]);\r\n        }\r\n\r\n        // Finaliza indicadores de loading\r\n        setCarregando(false);\r\n        setRespostaCarregada(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Erro na chamada de API\");\r\n        setCarregando(false);\r\n        setErroFrete(true);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Menu logged={true} />\r\n\r\n      <Container className=\"mt-4\">\r\n        <Row>\r\n          <Col>\r\n            <Row className=\"justify-content-center text-center\">\r\n              <Card style={{ width: \"30rem\" }} className=\"mb-4 p-0\">\r\n                <Card.Header>Proposta Comercial</Card.Header>\r\n                <Card.Body className=\"p-4\">\r\n                  <Card.Text>\r\n                    Insira o número da proposta para realizar o cálculo de frete\r\n                  </Card.Text>\r\n\r\n                  <Form onSubmit={calcularFrete}>\r\n                    <Row className=\"align-items-center\">\r\n                      <Col xs=\"6\">\r\n                        <Form.Group>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            onChange={(e) => setNumeroProposta(e.target.value)}\r\n                            placeholder=\"Número da Proposta\"\r\n                          />\r\n                        </Form.Group>\r\n                      </Col>\r\n                      <Col>\r\n                        <ButtonBlock>\r\n                          <Button variant=\"primary\" type=\"submit\">\r\n                            {carregando && (\r\n                              <Spinner\r\n                                animation=\"border\"\r\n                                size=\"sm\"\r\n                                role=\"status\"\r\n                                aria-hidden=\"true\"\r\n                              />\r\n                            )}\r\n                            {!carregando && <>Calcular</>}\r\n                          </Button>\r\n                        </ButtonBlock>\r\n                      </Col>\r\n                    </Row>\r\n                  </Form>\r\n                </Card.Body>\r\n              </Card>\r\n            </Row>\r\n            <Row className=\"justify-content-md-center\">\r\n              <Card style={{ width: \"30rem\" }} className=\"p-0\">\r\n                <Card.Header className=\"text-center\">Resultados</Card.Header>\r\n                <Card.Body>\r\n                  {/* Pesquisa carregando */}\r\n                  {carregando && (\r\n                    <Container className=\"text-center\">\r\n                      <Spinner animation=\"border\" role=\"status\" />\r\n                    </Container>\r\n                  )}\r\n\r\n                  {/* Falha no carregamendo da proposta */}\r\n                  {erroFrete && (\r\n                    <Alert className=\"text-center\" variant=\"danger\">\r\n                      Não foi possível localizar os dados para a proposta comercial\r\n                      informada.\r\n                    </Alert>\r\n                  )}\r\n\r\n                  {/* Resposta Carregada com sucesso */}\r\n                  {respostaCarregada && (\r\n                    <>\r\n                      <Container className=\"text-center mb-3\">\r\n                        <Badge bg=\"primary\">Métodos de Frete Disponíveis</Badge>\r\n                      </Container>\r\n\r\n                      {possuiPesoZero && (\r\n                        <Alert className=\"text-center\" variant=\"danger\">\r\n                          Um ou mais itens da proposta não possuem informação de peso.\r\n                        </Alert>\r\n                      )}\r\n\r\n                      {metodosFrete.length == 0 && (\r\n                        <>\r\n                          <ListGroup className=\"my-2\">\r\n                            <ListGroup.Item>\r\n                              Nenhum método de frete encontrado.\r\n                            </ListGroup.Item>\r\n                          </ListGroup>\r\n                        </>\r\n                      )}\r\n\r\n                      {metodosFrete.length > 0 && \r\n                        metodosFrete.map((metodo) => (\r\n                          <>\r\n                            <ListGroup key={metodo.preco} className=\"my-2\">\r\n                              <ListGroup.Item>\r\n                                {/* Logo de Transportadoras */}\r\n                                {metodo.transportadora == \"DLog\" && (\r\n                                  <Figure.Image\r\n                                    width={30}\r\n                                    alt=\"DLog Bling\"\r\n                                    src={DLogLogo}\r\n                                    className=\"m-0 p-0 mr-2\"\r\n                                  />\r\n                                )}\r\n                                {metodo.transportadora == \"Correios\" && (\r\n                                  <Figure.Image\r\n                                    width={30}\r\n                                    alt=\"DLog Bling\"\r\n                                    src={CorreiosLogo}\r\n                                    className=\"m-0 p-0 mr-2\"\r\n                                  />\r\n                                )}\r\n                                {/* Dados do frete */}\r\n                                {!metodo.erro && (\r\n                                  <>\r\n                                    {metodo.transportadora} - {metodo.servico} -{\" \"}\r\n                                    {metodo.prazo} dias úteis -{\" \"}\r\n                                    <Badge bg=\"success\">\r\n                                      {formatBRL(BRL(metodo.preco, 2), \"R$\")}\r\n                                    </Badge>\r\n                                  </>\r\n                                )}\r\n                                {metodo.erro && (\r\n                                  <>\r\n                                    {metodo.transportadora} - {metodo.servico} -{\" \"}\r\n                                    {metodo.mensagem}\r\n                                  </>\r\n                                )}\r\n                              </ListGroup.Item>\r\n                            </ListGroup>\r\n                          </>\r\n                        ))}\r\n\r\n                      <Container className=\"text-center my-3\">\r\n                        <Badge bg=\"primary\">Dados da Proposta</Badge>\r\n                      </Container>\r\n\r\n                      <Container>\r\n                        <ListGroup as=\"ul\" className=\"mb-3\">\r\n                          <ListGroup.Item as=\"li\" variant=\"success\">\r\n                            <Row>\r\n                              <Col>\r\n                                <strong>Número da Proposta:</strong>\r\n                              </Col>\r\n                              <Col> {dadosProposta.numeroProposta}</Col>\r\n                            </Row>\r\n                          </ListGroup.Item>\r\n                          <ListGroup.Item as=\"li\">\r\n                            <Row>\r\n                              <Col>\r\n                                <strong>Sub Total:</strong>\r\n                              </Col>\r\n                              <Col>\r\n                                {\" \"}\r\n                                {formatBRL(BRL(dadosProposta.totalprodutos, 2), \"R$\")}\r\n                              </Col>\r\n                            </Row>\r\n                          </ListGroup.Item>\r\n                          <ListGroup.Item as=\"li\">\r\n                            <Row>\r\n                              <Col>\r\n                                <strong>Vendedor:</strong>\r\n                              </Col>\r\n                              <Col> {dadosProposta.vendedor}</Col>\r\n                            </Row>\r\n                          </ListGroup.Item>\r\n                        </ListGroup>\r\n                        <ListGroup as=\"ul\">\r\n                          <ListGroup.Item as=\"li\" variant=\"success\">\r\n                            <strong>Cliente:</strong> {dadosProposta.cliente}\r\n                          </ListGroup.Item>\r\n                          <ListGroup.Item as=\"li\">\r\n                            <strong>Endereço: </strong>\r\n                            {dadosProposta.endereco}, {dadosProposta.numero},{\" \"}\r\n                            {dadosProposta.bairro} - {dadosProposta.cidade},{\" \"}\r\n                            {dadosProposta.uf}\r\n                          </ListGroup.Item>\r\n                          <ListGroup.Item as=\"li\">\r\n                            <Row>\r\n                              <Col>\r\n                                <strong>CEP: </strong> {dadosProposta.cep}\r\n                              </Col>\r\n                            </Row>\r\n                          </ListGroup.Item>\r\n                        </ListGroup>\r\n                      </Container>\r\n                    </>\r\n                  )}\r\n                </Card.Body>\r\n              </Card>\r\n            </Row>\r\n          </Col>\r\n          <Col>\r\n            <Row className=\"justify-content-md-center\">\r\n              <Card style={{ width: \"40rem\" }} className=\"p-0\">\r\n                <Card.Header className=\"text-center\">\r\n                  Itens na Proposta Comercial\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  {possuiPesoZero && (\r\n                    <Alert className=\"text-center\" variant=\"danger\">\r\n                      Um ou mais itens da proposta não possuem informação de peso.\r\n                    </Alert>\r\n                  )}\r\n\r\n                  {/* Indicador de pesquisa em andamento */}\r\n                  {carregando && (\r\n                    <Container className=\"text-center\">\r\n                      <Spinner animation=\"border\" role=\"status\" />\r\n                    </Container>\r\n                  )}\r\n\r\n                  {respostaCarregada && (\r\n                    <>\r\n                      <Table hover bordered size=\"md\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th>SKU</th>\r\n                            <th>Descrição</th>\r\n                            <th>Qntd.</th>\r\n                            <th>Peso</th>\r\n                            <th>Total</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {itensProposta.map((item) => (\r\n                            <tr key={item.idsku}>\r\n                              <td>{item.idsku}</td>\r\n                              <td>{item.nome}</td>\r\n                              <td>{item.quantidade}</td>\r\n                              <td>{item.peso}</td>\r\n                              <td>{item.pesoTotal}</td>\r\n                            </tr>\r\n                          ))}\r\n                        </tbody>\r\n                      </Table>\r\n\r\n                      {/* <TabelaItensProposta itens={itensProposta} /> */}\r\n\r\n                      <ListGroup className=\"text-center\">\r\n                        <ListGroup.Item>\r\n                          Peso total:{\" \"}\r\n                          <Badge bg=\"primary\">{dadosProposta.pesoTotalProposta}</Badge> Kg\r\n                        </ListGroup.Item>\r\n                      </ListGroup>\r\n                    </>\r\n                  )}\r\n                </Card.Body>\r\n              </Card>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FreteVendas;\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport Image, { propTypes as imagePropTypes } from './Image';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  fluid: true\n};\nconst FigureImage = /*#__PURE__*/React.forwardRef(({\n  className,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Image, {\n  ref: ref,\n  ...props,\n  className: classNames(className, 'figure-img')\n}));\nFigureImage.displayName = 'FigureImage';\nFigureImage.propTypes = imagePropTypes;\nFigureImage.defaultProps = defaultProps;\nexport default FigureImage;","import createWithBsPrefix from './createWithBsPrefix';\nconst FigureCaption = createWithBsPrefix('figure-caption', {\n  Component: 'figcaption'\n});\nexport default FigureCaption;","import createWithBsPrefix from './createWithBsPrefix';\nimport FigureImage from './FigureImage';\nimport FigureCaption from './FigureCaption';\nconst Figure = createWithBsPrefix('figure', {\n  Component: 'figure'\n});\nexport default Object.assign(Figure, {\n  Image: FigureImage,\n  Caption: FigureCaption\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const propTypes = {\n  /**\n   * @default 'img'\n   */\n  bsPrefix: PropTypes.string,\n\n  /**\n   * Sets image as fluid image.\n   */\n  fluid: PropTypes.bool,\n\n  /**\n   * Sets image shape as rounded.\n   */\n  rounded: PropTypes.bool,\n\n  /**\n   * Sets image shape as circle.\n   */\n  roundedCircle: PropTypes.bool,\n\n  /**\n   * Sets image shape as thumbnail.\n   */\n  thumbnail: PropTypes.bool\n};\nconst defaultProps = {\n  fluid: false,\n  rounded: false,\n  roundedCircle: false,\n  thumbnail: false\n};\nconst Image = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  fluid,\n  rounded,\n  roundedCircle,\n  thumbnail,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'img');\n  return /*#__PURE__*/_jsx(\"img\", {\n    // eslint-disable-line jsx-a11y/alt-text\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid && `${bsPrefix}-fluid`, rounded && `rounded`, roundedCircle && `rounded-circle`, thumbnail && `${bsPrefix}-thumbnail`)\n  });\n});\nImage.displayName = 'Image';\nImage.defaultProps = defaultProps;\nexport default Image;","import classNames from 'classnames';\nimport * as React from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useNavItem } from '@restart/ui/NavItem';\nimport { makeEventKey } from '@restart/ui/SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroupItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  disabled,\n  eventKey,\n  className,\n  variant,\n  action,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  const [navItemProps, meta] = useNavItem({\n    key: makeEventKey(eventKey, props.href),\n    active,\n    ...props\n  });\n  const handleClick = useEventCallback(event => {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    navItemProps.onClick(event);\n  });\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  } // eslint-disable-next-line no-nested-ternary\n\n\n  const Component = as || (action ? props.href ? 'a' : 'button' : 'div');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    ...navItemProps,\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, meta.isActive && 'active', disabled && 'disabled', variant && `${bsPrefix}-${variant}`, action && `${bsPrefix}-action`)\n  });\n});\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseNav from '@restart/ui/Nav';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ListGroupItem from './ListGroupItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    className,\n    bsPrefix: initialBsPrefix,\n    variant,\n    horizontal,\n    numbered,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as = 'div',\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  let horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : `horizontal-${horizontal}`;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(BaseNav, {\n    ref: ref,\n    ...controlledProps,\n    as: as,\n    className: classNames(className, bsPrefix, variant && `${bsPrefix}-${variant}`, horizontalVariant && `${bsPrefix}-${horizontalVariant}`, numbered && `${bsPrefix}-numbered`)\n  });\n});\nListGroup.displayName = 'ListGroup';\nexport default Object.assign(ListGroup, {\n  Item: ListGroupItem\n});"],"names":["BRL","value","precision","currency","formatBRL","symbol","format","replace","useState","numeroProposta","setNumeroProposta","carregando","setCarregando","respostaCarregada","setRespostaCarregada","metodosFrete","setMetodosFrete","dadosProposta","setDadosProposta","itensProposta","setItensProposta","possuiPesoZero","setPossuiPesoZero","erroFrete","setErroFrete","calcularFrete","event","preventDefault","api","then","resposta","inicioCep","data","cep","substring","finalCep","hasOwnProperty","frete","itens","catch","error","console","log","Menu","logged","Container","className","Row","Col","Card","style","width","Form","onSubmit","xs","type","onChange","e","target","placeholder","ButtonBlock","Button","variant","Spinner","animation","size","role","Alert","Badge","bg","length","ListGroup","map","metodo","transportadora","Figure","alt","src","erro","servico","prazo","preco","mensagem","as","totalprodutos","vendedor","cliente","endereco","numero","bairro","cidade","uf","Table","hover","bordered","item","idsku","nome","quantidade","peso","pesoTotal","pesoTotalProposta","FigureImage","React","ref","props","_jsx","Image","classNames","displayName","propTypes","imagePropTypes","defaultProps","fluid","createWithBsPrefix","Component","Object","assign","Caption","FigureCaption","bsPrefix","PropTypes","rounded","roundedCircle","thumbnail","useBootstrapPrefix","ListGroupItem","active","disabled","eventKey","action","useNavItem","key","makeEventKey","href","navItemProps","meta","handleClick","useEventCallback","stopPropagation","onClick","undefined","tabIndex","isActive","horizontalVariant","useUncontrolled","activeKey","initialBsPrefix","horizontal","numbered","controlledProps","BaseNav","Item"],"sourceRoot":""}