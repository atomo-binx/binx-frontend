{"version":3,"file":"static/js/589.02c4294d.chunk.js","mappings":"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","sources":["components/Menu/index.js","../node_modules/@restart/ui/esm/useRootClose.js","../node_modules/@restart/ui/esm/Overlay.js","../node_modules/react-bootstrap/esm/PopoverHeader.js","../node_modules/react-bootstrap/esm/PopoverBody.js","../node_modules/react-bootstrap/esm/Popover.js","../node_modules/react-bootstrap/esm/Overlay.js","../node_modules/react-bootstrap/esm/useOverlayOffset.js","../node_modules/react-bootstrap/esm/Tooltip.js","../node_modules/react-bootstrap/esm/helpers.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Auth } from \"../../services/amplify\";\r\n\r\nimport { Navbar, Nav, NavDropdown, Container } from \"react-bootstrap\";\r\nimport { BsPersonCircle } from \"react-icons/bs\";\r\n\r\nimport NavbarLogo from \"../../assets/logo_3.png\";\r\n\r\nimport AuthContext from \"../../contexts/auth\";\r\n\r\nimport \"./styles.css\";\r\n\r\nfunction Menu(props) {\r\n  const navigate = useNavigate();\r\n\r\n  const [vendasDrop, setVendasDrop] = useState(false);\r\n  const [comprasDrop, setComprasDrop] = useState(false);\r\n  const [expedicaoDrop, setExpedicaoDrop] = useState(false);\r\n  const [relatoriosDrop, setRelatoriosDrop] = useState(false);\r\n  const [cadastrosDrop, setCadastrosDrops] = useState(false);\r\n  const [userDrop, setUserDrop] = useState(false);\r\n\r\n  const [vendasActive, setVendasActive] = useState(false);\r\n  const [comprasActive, setComprasActive] = useState(false);\r\n  const [expedicaoActive, setExpedicaoActive] = useState(false);\r\n  const [relatoriosActive, setRelatoriosActive] = useState(false);\r\n  const [cadastrosActive, setCadastrosActive] = useState(false);\r\n\r\n  const [userName, setUserName] = useState(\"\");\r\n\r\n  const userContext = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    const pathname = window.location.pathname;\r\n\r\n    if (pathname.includes(\"vendas\")) setVendasActive(true);\r\n    if (pathname.includes(\"compras\")) setComprasActive(true);\r\n    if (pathname.includes(\"expedicao\")) setExpedicaoActive(true);\r\n    if (pathname.includes(\"relatorios\")) setRelatoriosActive(true);\r\n    if (pathname.includes(\"cadastros\")) setCadastrosActive(true);\r\n\r\n    if (userContext) {\r\n      setUserName(userContext.attributes[\"custom:displayname\"]);\r\n    } else {\r\n      setUserName(\"Convidado\");\r\n    }\r\n  }, [userContext]);\r\n\r\n  const signOut = () => {\r\n    Auth.signOut()\r\n      .then((data) => {\r\n        navigate(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        navigate(\"/\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" sticky=\"top\">\r\n        <Container fluid>\r\n          <Link to=\"/\" className=\"m-0 p-0\">\r\n            <Navbar.Brand className=\"\">\r\n              <img src={NavbarLogo} width=\"70\" alt=\"Logo Binx\" />\r\n            </Navbar.Brand>\r\n          </Link>\r\n\r\n          <Navbar.Toggle />\r\n\r\n          {props.logged && (\r\n            <>\r\n              <Navbar.Collapse>\r\n                <Nav className=\"mr-auto\" navbarScroll>\r\n                  {/* Dropdown de Vendas */}\r\n                  <NavDropdown\r\n                    title=\"Vendas\"\r\n                    active={vendasActive}\r\n                    show={vendasDrop}\r\n                    onMouseEnter={() => setVendasDrop(true)}\r\n                    onMouseLeave={() => setVendasDrop(false)}\r\n                  >\r\n                    <NavDropdown.Item\r\n                      as={Link}\r\n                      href=\"/vendas/frete\"\r\n                      to=\"/vendas/frete\"\r\n                    >\r\n                      Cálculo de Frete\r\n                    </NavDropdown.Item>\r\n                    <NavDropdown.Item\r\n                      as={Link}\r\n                      href=\"/vendas/margem\"\r\n                      to=\"/vendas/margem\"\r\n                    >\r\n                      Cálculo de Margem\r\n                    </NavDropdown.Item>\r\n                    <NavDropdown.Item\r\n                      as={Link}\r\n                      href=\"/vendas/prospeccao\"\r\n                      to=\"/vendas/prospeccao\"\r\n                    >\r\n                      Prospecção de Clientes\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n\r\n                  {/* Dropdown de Compras */}\r\n                  <NavDropdown\r\n                    title=\"Compras\"\r\n                    show={comprasDrop}\r\n                    active={comprasActive}\r\n                    onMouseEnter={() => setComprasDrop(!comprasDrop)}\r\n                    onMouseLeave={() => setComprasDrop(false)}\r\n                  >\r\n                    <NavDropdown.Item\r\n                      as={Link}\r\n                      href=\"/compras/dashboard\"\r\n                      to=\"/compras/dashboard\"\r\n                    >\r\n                      Dashboard de Compras\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n\r\n                  {/* Dropdown da Expedição */}\r\n                  <NavDropdown\r\n                    title=\"Expedição\"\r\n                    show={expedicaoDrop}\r\n                    active={expedicaoActive}\r\n                    onMouseEnter={() => setExpedicaoDrop(!expedicaoDrop)}\r\n                    onMouseLeave={() => setExpedicaoDrop(false)}\r\n                  >\r\n                    <NavDropdown.Item\r\n                      href=\"/expedicao/aprovar\"\r\n                      to=\"/expedicao/aprovar\"\r\n                    >\r\n                      Aprovação de Pedidos\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n\r\n                  {/* Dropdown de Relatórios */}\r\n                  <NavDropdown\r\n                    title=\"Relatórios\"\r\n                    show={relatoriosDrop}\r\n                    active={relatoriosActive}\r\n                    onMouseEnter={() => setRelatoriosDrop(!relatoriosDrop)}\r\n                    onMouseLeave={() => setRelatoriosDrop(false)}\r\n                  >\r\n                    <NavDropdown.Item\r\n                      href=\"/relatorios/minmax\"\r\n                      to=\"/relatorios/minmax\"\r\n                    >\r\n                      Estoque Mínimo e Máximo\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n\r\n                  {/* Dropdown da Cadastros */}\r\n                  <NavDropdown\r\n                    title=\"Cadastros\"\r\n                    show={cadastrosDrop}\r\n                    active={cadastrosActive}\r\n                    onMouseEnter={() => setCadastrosDrops(!cadastrosDrop)}\r\n                    onMouseLeave={() => setCadastrosDrops(false)}\r\n                  >\r\n                    <NavDropdown.Item\r\n                      href=\"/cadastros/produtos\"\r\n                      to=\"/cadastros/produtos\"\r\n                    >\r\n                      Produtos\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n                </Nav>\r\n              </Navbar.Collapse>\r\n\r\n              <Navbar.Collapse className=\"justify-content-end\">\r\n                <Nav className=\"mr-auto\" navbarScroll>\r\n                  <BsPersonCircle />\r\n                  <NavDropdown\r\n                    className=\"dropdown-user\"\r\n                    title={\r\n                      <div className=\"user-dropdown-div \">\r\n                        <div className=\"m-0\">\r\n                          <BsPersonCircle size={25} />\r\n                        </div>\r\n                        <div className=\"user-name\">{userName}</div>\r\n                      </div>\r\n                    }\r\n                    show={userDrop}\r\n                    onMouseEnter={() => setUserDrop(true)}\r\n                    onMouseLeave={() => setUserDrop(false)}\r\n                  >\r\n                    <NavDropdown.Item onClick={signOut}>Sair</NavDropdown.Item>\r\n                  </NavDropdown>\r\n                </Nav>\r\n              </Navbar.Collapse>\r\n            </>\r\n          )}\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Menu;\r\n","import listen from 'dom-helpers/listen';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport { useEffect } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useClickOutside, { getRefTarget } from './useClickOutside';\nconst escapeKeyCode = 27;\n\nconst noop = () => {};\n\n/**\n * The `useRootClose` hook registers your callback on the document\n * when rendered. Powers the `<Overlay/>` component. This is used achieve modal\n * style behavior where your callback is triggered when the user tries to\n * interact with the rest of the document or hits the `esc` key.\n *\n * @param {Ref<HTMLElement>| HTMLElement} ref  The element boundary\n * @param {function} onRootClose\n * @param {object=}  options\n * @param {boolean=} options.disabled\n * @param {string=}  options.clickTrigger The DOM event name (click, mousedown, etc) to attach listeners on\n */\nfunction useRootClose(ref, onRootClose, {\n  disabled,\n  clickTrigger\n} = {}) {\n  const onClose = onRootClose || noop;\n  useClickOutside(ref, onClose, {\n    disabled,\n    clickTrigger\n  });\n  const handleKeyUp = useEventCallback(e => {\n    if (e.keyCode === escapeKeyCode) {\n      onClose(e);\n    }\n  });\n  useEffect(() => {\n    if (disabled || ref == null) return undefined;\n    const doc = ownerDocument(getRefTarget(ref)); // Store the current event to avoid triggering handlers immediately\n    // https://github.com/facebook/react/issues/20074\n\n    let currentEvent = (doc.defaultView || window).event;\n    const removeKeyupListener = listen(doc, 'keyup', e => {\n      // skip if this event is the same as the one running when we added the handlers\n      if (e === currentEvent) {\n        currentEvent = undefined;\n        return;\n      }\n\n      handleKeyUp(e);\n    });\n    return () => {\n      removeKeyupListener();\n    };\n  }, [ref, disabled, handleKeyUp]);\n}\n\nexport default useRootClose;","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { useState } from 'react';\nimport usePopper from './usePopper';\nimport useRootClose from './useRootClose';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport mergeOptionsWithPopperConfig from './mergeOptionsWithPopperConfig';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/**\n * Built on top of `Popper.js`, the overlay component is\n * great for custom tooltip overlays.\n */\nconst Overlay = /*#__PURE__*/React.forwardRef((props, outerRef) => {\n  const {\n    flip,\n    offset,\n    placement,\n    containerPadding,\n    popperConfig = {},\n    transition: Transition\n  } = props;\n  const [rootElement, attachRef] = useCallbackRef();\n  const [arrowElement, attachArrowRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(attachRef, outerRef);\n  const container = useWaitForDOMRef(props.container);\n  const target = useWaitForDOMRef(props.target);\n  const [exited, setExited] = useState(!props.show);\n  const popper = usePopper(target, rootElement, mergeOptionsWithPopperConfig({\n    placement,\n    enableEvents: !!props.show,\n    containerPadding: containerPadding || 5,\n    flip,\n    offset,\n    arrowElement,\n    popperConfig\n  }));\n\n  if (props.show) {\n    if (exited) setExited(false);\n  } else if (!props.transition && !exited) {\n    setExited(true);\n  }\n\n  const handleHidden = (...args) => {\n    setExited(true);\n\n    if (props.onExited) {\n      props.onExited(...args);\n    }\n  }; // Don't un-render the overlay while it's transitioning out.\n\n\n  const mountOverlay = props.show || Transition && !exited;\n  useRootClose(rootElement, props.onHide, {\n    disabled: !props.rootClose || props.rootCloseDisabled,\n    clickTrigger: props.rootCloseEvent\n  });\n\n  if (!mountOverlay) {\n    // Don't bother showing anything if we don't have to.\n    return null;\n  }\n\n  let child = props.children(Object.assign({}, popper.attributes.popper, {\n    style: popper.styles.popper,\n    ref: mergedRef\n  }), {\n    popper,\n    placement,\n    show: !!props.show,\n    arrowProps: Object.assign({}, popper.attributes.arrow, {\n      style: popper.styles.arrow,\n      ref: attachArrowRef\n    })\n  });\n\n  if (Transition) {\n    const {\n      onExit,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = props;\n    child = /*#__PURE__*/_jsx(Transition, {\n      in: props.show,\n      appear: true,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      children: child\n    });\n  }\n\n  return container ? /*#__PURE__*/ReactDOM.createPortal(child, container) : null;\n});\nOverlay.displayName = 'Overlay';\nexport default Overlay;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('popover-header');","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('popover-body');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport PopoverHeader from './PopoverHeader';\nimport PopoverBody from './PopoverBody';\nimport { getOverlayDirection } from './helpers';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  placement: 'right'\n};\nconst Popover = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  placement,\n  className,\n  style,\n  children,\n  body,\n  arrowProps,\n  popper: _,\n  show: _1,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'popover');\n  const isRTL = useIsRTL();\n  const [primaryPlacement] = (placement == null ? void 0 : placement.split('-')) || [];\n  const bsDirection = getOverlayDirection(primaryPlacement, isRTL);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    role: \"tooltip\",\n    style: style,\n    \"x-placement\": primaryPlacement,\n    className: classNames(className, decoratedBsPrefix, primaryPlacement && `bs-popover-${bsDirection}`),\n    ...props,\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: \"popover-arrow\",\n      ...arrowProps\n    }), body ? /*#__PURE__*/_jsx(PopoverBody, {\n      children: children\n    }) : children]\n  });\n});\nPopover.defaultProps = defaultProps;\nexport default Object.assign(Popover, {\n  Header: PopoverHeader,\n  Body: PopoverBody,\n  // Default popover offset.\n  // https://github.com/twbs/bootstrap/blob/5c32767e0e0dbac2d934bcdee03719a65d3f1187/js/src/popover.js#L28\n  POPPER_OFFSET: [0, 8]\n});","import * as React from 'react';\nimport { useRef } from 'react';\nimport classNames from 'classnames';\nimport BaseOverlay from '@restart/ui/Overlay';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useOverlayOffset from './useOverlayOffset';\nimport Fade from './Fade';\nimport safeFindDOMNode from './safeFindDOMNode';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  transition: Fade,\n  rootClose: false,\n  show: false,\n  placement: 'top'\n};\n\nfunction wrapRefs(props, arrowProps) {\n  const {\n    ref\n  } = props;\n  const {\n    ref: aRef\n  } = arrowProps;\n\n  props.ref = ref.__wrapped || (ref.__wrapped = r => ref(safeFindDOMNode(r)));\n\n  arrowProps.ref = aRef.__wrapped || (aRef.__wrapped = r => aRef(safeFindDOMNode(r)));\n}\n\nconst Overlay = /*#__PURE__*/React.forwardRef(({\n  children: overlay,\n  transition,\n  popperConfig = {},\n  ...outerProps\n}, outerRef) => {\n  const popperRef = useRef({});\n  const [ref, modifiers] = useOverlayOffset(outerProps.offset);\n  const mergedRef = useMergedRefs(outerRef, ref);\n  const actualTransition = transition === true ? Fade : transition || undefined;\n  return /*#__PURE__*/_jsx(BaseOverlay, { ...outerProps,\n    ref: mergedRef,\n    popperConfig: { ...popperConfig,\n      modifiers: modifiers.concat(popperConfig.modifiers || [])\n    },\n    transition: actualTransition,\n    children: (overlayProps, {\n      arrowProps,\n      popper: popperObj,\n      show\n    }) => {\n      var _popperObj$state, _popperObj$state$modi;\n\n      wrapRefs(overlayProps, arrowProps); // Need to get placement from popper object, handling case when overlay is flipped using 'flip' prop\n\n      const updatedPlacement = popperObj == null ? void 0 : popperObj.placement;\n      const popper = Object.assign(popperRef.current, {\n        state: popperObj == null ? void 0 : popperObj.state,\n        scheduleUpdate: popperObj == null ? void 0 : popperObj.update,\n        placement: updatedPlacement,\n        outOfBoundaries: (popperObj == null ? void 0 : (_popperObj$state = popperObj.state) == null ? void 0 : (_popperObj$state$modi = _popperObj$state.modifiersData.hide) == null ? void 0 : _popperObj$state$modi.isReferenceHidden) || false\n      });\n      if (typeof overlay === 'function') return overlay({ ...overlayProps,\n        placement: updatedPlacement,\n        show,\n        ...(!transition && show && {\n          className: 'show'\n        }),\n        popper,\n        arrowProps\n      });\n      return /*#__PURE__*/React.cloneElement(overlay, { ...overlayProps,\n        placement: updatedPlacement,\n        arrowProps,\n        popper,\n        className: classNames(overlay.props.className, !transition && show && 'show'),\n        style: { ...overlay.props.style,\n          ...overlayProps.style\n        }\n      });\n    }\n  });\n});\nOverlay.displayName = 'Overlay';\nOverlay.defaultProps = defaultProps;\nexport default Overlay;","import { useMemo, useRef } from 'react';\nimport hasClass from 'dom-helpers/hasClass';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Popover from './Popover'; // This is meant for internal use.\n// This applies a custom offset to the overlay if it's a popover.\n\nexport default function useOverlayOffset(customOffset) {\n  const overlayRef = useRef(null);\n  const popoverClass = useBootstrapPrefix(undefined, 'popover');\n  const offset = useMemo(() => ({\n    name: 'offset',\n    options: {\n      offset: () => {\n        if (overlayRef.current && hasClass(overlayRef.current, popoverClass)) {\n          return customOffset || Popover.POPPER_OFFSET;\n        }\n\n        return customOffset || [0, 0];\n      }\n    }\n  }), [customOffset, popoverClass]);\n  return [overlayRef, [offset]];\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { getOverlayDirection } from './helpers';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  placement: 'right'\n};\nconst Tooltip = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  placement,\n  className,\n  style,\n  children,\n  arrowProps,\n  popper: _,\n  show: _2,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'tooltip');\n  const isRTL = useIsRTL();\n  const [primaryPlacement] = (placement == null ? void 0 : placement.split('-')) || [];\n  const bsDirection = getOverlayDirection(primaryPlacement, isRTL);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    style: style,\n    role: \"tooltip\",\n    \"x-placement\": primaryPlacement,\n    className: classNames(className, bsPrefix, `bs-tooltip-${bsDirection}`),\n    ...props,\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: \"tooltip-arrow\",\n      ...arrowProps\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: `${bsPrefix}-inner`,\n      children: children\n    })]\n  });\n});\nTooltip.defaultProps = defaultProps;\nTooltip.displayName = 'Tooltip';\nexport default Tooltip;","import * as React from 'react';\nexport class BsPrefixComponent extends React.Component {} // Need to use this instead of typeof Component to get proper type checking.\n\nexport function getOverlayDirection(placement, isRTL) {\n  let bsDirection = placement;\n\n  if (placement === 'left') {\n    bsDirection = isRTL ? 'end' : 'start';\n  } else if (placement === 'right') {\n    bsDirection = isRTL ? 'start' : 'end';\n  }\n\n  return bsDirection;\n}"],"names":["props","navigate","useNavigate","useState","vendasDrop","setVendasDrop","comprasDrop","setComprasDrop","expedicaoDrop","setExpedicaoDrop","relatoriosDrop","setRelatoriosDrop","cadastrosDrop","setCadastrosDrops","userDrop","setUserDrop","vendasActive","setVendasActive","comprasActive","setComprasActive","expedicaoActive","setExpedicaoActive","relatoriosActive","setRelatoriosActive","cadastrosActive","setCadastrosActive","userName","setUserName","userContext","useContext","AuthContext","useEffect","pathname","window","location","includes","attributes","Navbar","bg","variant","expand","sticky","Container","fluid","to","className","src","NavbarLogo","width","alt","logged","Nav","navbarScroll","NavDropdown","title","active","show","onMouseEnter","onMouseLeave","as","Link","href","size","onClick","Auth","then","data","catch","error","noop","ref","onRootClose","disabled","clickTrigger","onClose","useClickOutside","handleKeyUp","useEventCallback","e","keyCode","doc","ownerDocument","getRefTarget","currentEvent","defaultView","event","removeKeyupListener","listen","undefined","Overlay","React","outerRef","flip","offset","placement","containerPadding","popperConfig","Transition","transition","useCallbackRef","rootElement","attachRef","arrowElement","attachArrowRef","mergedRef","useMergedRefs","container","useWaitForDOMRef","target","exited","setExited","popper","usePopper","mergeOptionsWithPopperConfig","enableEvents","mountOverlay","useRootClose","onHide","rootClose","rootCloseDisabled","rootCloseEvent","child","children","Object","assign","style","styles","arrowProps","arrow","onExit","onExiting","onEnter","onEntering","onEntered","_jsx","in","appear","onExited","ReactDOM","displayName","createWithBsPrefix","Popover","bsPrefix","body","decoratedBsPrefix","useBootstrapPrefix","isRTL","useIsRTL","split","primaryPlacement","bsDirection","getOverlayDirection","_jsxs","role","classNames","PopoverBody","defaultProps","Header","PopoverHeader","Body","POPPER_OFFSET","Fade","overlay","outerProps","popperRef","useRef","customOffset","overlayRef","popoverClass","useMemo","name","options","current","hasClass","useOverlayOffset","modifiers","actualTransition","BaseOverlay","concat","overlayProps","_popperObj$state","_popperObj$state$modi","popperObj","aRef","__wrapped","r","safeFindDOMNode","wrapRefs","updatedPlacement","state","scheduleUpdate","update","outOfBoundaries","modifiersData","hide","isReferenceHidden","Tooltip"],"sourceRoot":""}