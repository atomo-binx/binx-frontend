{"version":3,"file":"static/js/510.e3abeef8.chunk.js","mappings":"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","sources":["components/ChartContainer/index.js","components/DashCompras/HistoricoDisponibilidade/index.js","components/Menu/index.js","components/DashCompras/GraficoDisponibilidade/index.js","components/DashCompras/IndisponibilidadeCurva/index.js","components/DashCompras/DisponibilidadeCurva/index.js","components/DashCompras/HistoricoCurvas/index.js","../node_modules/@restart/hooks/esm/useUpdateEffect.js","../node_modules/react-bootstrap/esm/CarouselCaption.js","../node_modules/react-bootstrap/esm/CarouselItem.js","../node_modules/react-bootstrap/esm/Carousel.js","pages/DashboardCompras/index.js","services/api.js","../node_modules/@restart/hooks/esm/useTimeout.js","../node_modules/react-bootstrap/esm/Badge.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js"],"sourcesContent":["import {\r\n  Chart,\r\n  ArcElement,\r\n  LineElement,\r\n  BarElement,\r\n  PointElement,\r\n  BarController,\r\n  BubbleController,\r\n  DoughnutController,\r\n  LineController,\r\n  PieController,\r\n  PolarAreaController,\r\n  RadarController,\r\n  ScatterController,\r\n  CategoryScale,\r\n  LinearScale,\r\n  LogarithmicScale,\r\n  RadialLinearScale,\r\n  TimeScale,\r\n  TimeSeriesScale,\r\n  Decimation,\r\n  Filler,\r\n  Legend,\r\n  Title,\r\n  Tooltip,\r\n  SubTitle,\r\n} from \"chart.js\";\r\n\r\nfunction ChartContainer(props) {\r\n  Chart.register(\r\n    ArcElement,\r\n    LineElement,\r\n    BarElement,\r\n    PointElement,\r\n    BarController,\r\n    BubbleController,\r\n    DoughnutController,\r\n    LineController,\r\n    PieController,\r\n    PolarAreaController,\r\n    RadarController,\r\n    ScatterController,\r\n    CategoryScale,\r\n    LinearScale,\r\n    LogarithmicScale,\r\n    RadialLinearScale,\r\n    TimeScale,\r\n    TimeSeriesScale,\r\n    Decimation,\r\n    Filler,\r\n    Legend,\r\n    Title,\r\n    Tooltip,\r\n    SubTitle\r\n  );\r\n\r\n  return props.children;\r\n}\r\n\r\nexport default ChartContainer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nimport ChartContainer from \"../../ChartContainer\";\r\n\r\nfunction HistoricoDisponibilidade(props) {\r\n  const { disponibilidades } = props;\r\n\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [data, setData] = useState({});\r\n  const [options, setOptions] = useState();\r\n\r\n  const meta = 92;\r\n\r\n  const montarDados = (disponibilidades) => {\r\n    // Declara arrays que serão montadas\r\n    let labels = [];\r\n    let valores = [];\r\n    let valoresMeta = [];\r\n\r\n    // Monta Labels com as datas de disponibilidades\r\n    for (const data of disponibilidades) {\r\n      let dataMontada =\r\n        data[\"data\"][8] +\r\n        data[\"data\"][9] +\r\n        \"/\" +\r\n        data[\"data\"][5] +\r\n        data[\"data\"][6];\r\n      labels.push(dataMontada);\r\n    }\r\n\r\n    // Monta valores de disponibilidade\r\n    for (const valor of disponibilidades) {\r\n      valores.push(valor[\"valor\"]);\r\n      valoresMeta.push(meta);\r\n    }\r\n\r\n    // Reverte as arrays montadas para exibição correta de novos dados\r\n    labels.reverse();\r\n    valores.reverse();\r\n\r\n    // Encontra o menor e maior valor existente nos dados\r\n    let menorValor = Math.min.apply(Math, valores);\r\n    let maiorValor = Math.max.apply(Math, valores);\r\n\r\n    if (maiorValor < 92) maiorValor = 92;\r\n    if (menorValor > 92) menorValor = 92;\r\n\r\n    menorValor = isFinite(menorValor) ? menorValor : 0;\r\n    maiorValor = isFinite(maiorValor) ? maiorValor : 100;\r\n\r\n    return { valores, labels, valoresMeta, menorValor, maiorValor };\r\n  };\r\n\r\n  useEffect(() => {\r\n    let { valores, labels, valoresMeta, menorValor, maiorValor } =\r\n      montarDados(disponibilidades);\r\n\r\n    setData({\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          // Dataset de produtos disponíveis\r\n          label: \"Disponíveis\",\r\n          data: valores,\r\n          borderColor: [\"#198754\"],\r\n          borderWidth: 2,\r\n          fill: false,\r\n          pointBackgroundColor: \"#198754\",\r\n          tension: 0.4,\r\n        },\r\n        {\r\n          // Dataset de Meta - Disponíveis\r\n          label: \"Meta\",\r\n          data: valoresMeta,\r\n          borderColor: [\"#0dcaf0\"],\r\n          borderWidth: 3,\r\n          fill: false,\r\n          borderDash: [5, 5],\r\n          pointRadius: 0,\r\n          pointBackgroundColor: \"#0dcaf0\",\r\n        },\r\n      ],\r\n    });\r\n\r\n    setOptions({\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n\r\n      scales: {\r\n        y: {\r\n          type: \"linear\",\r\n          suggestedMin: menorValor - 0.1,\r\n          suggestedMax: maiorValor + 1,\r\n          ticks: {\r\n            maxTicksLimit: 10,\r\n            callback: function (value) {\r\n              return value.toFixed(1) + \"%\";\r\n            },\r\n          },\r\n        },\r\n      },\r\n      plugins: {\r\n        title: {\r\n          display: true,\r\n          text: \"Histórico de Disponibilidade\",\r\n          padding: 20,\r\n        },\r\n        legend: {\r\n          display: true,\r\n          position: \"bottom\",\r\n          labels: {\r\n            usePointStyle: true,\r\n            boxWidth: 8,\r\n            padding: 15,\r\n          },\r\n        },\r\n      },\r\n      animation: {\r\n        duration: 3000,\r\n      },\r\n    });\r\n\r\n    setLoaded(true);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loaded && (\r\n        <ChartContainer>\r\n          <Line data={data} options={options} />\r\n        </ChartContainer>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HistoricoDisponibilidade;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Auth } from \"../../services/amplify\";\r\n\r\nimport { Navbar, Nav, NavDropdown, Container } from \"react-bootstrap\";\r\nimport { BsPersonCircle } from \"react-icons/bs\";\r\n\r\nimport NavbarLogo from \"../../assets/logo_3.png\";\r\n\r\nimport AuthContext from \"../../contexts/auth\";\r\n\r\nimport \"./styles.css\";\r\n\r\nfunction Menu(props) {\r\n  const navigate = useNavigate();\r\n\r\n  const [vendasDrop, setVendasDrop] = useState(false);\r\n  const [comprasDrop, setComprasDrop] = useState(false);\r\n  const [expedicaoDrop, setExpedicaoDrop] = useState(false);\r\n  const [relatoriosDrop, setRelatoriosDrop] = useState(false);\r\n  const [cadastrosDrop, setCadastrosDrops] = useState(false);\r\n  const [userDrop, setUserDrop] = useState(false);\r\n\r\n  const [vendasActive, setVendasActive] = useState(false);\r\n  const [comprasActive, setComprasActive] = useState(false);\r\n  const [expedicaoActive, setExpedicaoActive] = useState(false);\r\n  const [relatoriosActive, setRelatoriosActive] = useState(false);\r\n  const [cadastrosActive, setCadastrosActive] = useState(false);\r\n\r\n  const [userName, setUserName] = useState(\"\");\r\n\r\n  const userContext = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    const pathname = window.location.pathname;\r\n\r\n    if (pathname.includes(\"vendas\")) setVendasActive(true);\r\n    if (pathname.includes(\"compras\")) setComprasActive(true);\r\n    if (pathname.includes(\"expedicao\")) setExpedicaoActive(true);\r\n    if (pathname.includes(\"relatorios\")) setRelatoriosActive(true);\r\n    if (pathname.includes(\"cadastros\")) setCadastrosActive(true);\r\n\r\n    if (userContext) {\r\n      setUserName(userContext.attributes[\"custom:displayname\"]);\r\n    } else {\r\n      setUserName(\"Convidado\");\r\n    }\r\n  }, [userContext]);\r\n\r\n  const signOut = () => {\r\n    Auth.signOut()\r\n      .then((data) => {\r\n        navigate(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        navigate(\"/\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" sticky=\"top\">\r\n        <Container fluid>\r\n          <Link to=\"/\" className=\"m-0 p-0\">\r\n            <Navbar.Brand className=\"\">\r\n              <img src={NavbarLogo} width=\"70\" alt=\"Logo Binx\" />\r\n            </Navbar.Brand>\r\n          </Link>\r\n\r\n          <Navbar.Toggle />\r\n\r\n          {props.logged && (\r\n            <>\r\n              <Navbar.Collapse>\r\n                <Nav className=\"mr-auto\" navbarScroll>\r\n                  {/* Dropdown de Vendas */}\r\n                  <NavDropdown\r\n                    title=\"Vendas\"\r\n                    active={vendasActive}\r\n                    show={vendasDrop}\r\n                    onMouseEnter={() => setVendasDrop(true)}\r\n                    onMouseLeave={() => setVendasDrop(false)}\r\n                  >\r\n                    <NavDropdown.Item\r\n                      as={Link}\r\n                      href=\"/vendas/frete\"\r\n                      to=\"/vendas/frete\"\r\n                    >\r\n                      Cálculo de Frete\r\n                    </NavDropdown.Item>\r\n                    <NavDropdown.Item\r\n                      as={Link}\r\n                      href=\"/vendas/margem\"\r\n                      to=\"/vendas/margem\"\r\n                    >\r\n                      Cálculo de Margem\r\n                    </NavDropdown.Item>\r\n                    <NavDropdown.Item\r\n                      as={Link}\r\n                      href=\"/vendas/prospeccao\"\r\n                      to=\"/vendas/prospeccao\"\r\n                    >\r\n                      Prospecção de Clientes\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n\r\n                  {/* Dropdown de Compras */}\r\n                  <NavDropdown\r\n                    title=\"Compras\"\r\n                    show={comprasDrop}\r\n                    active={comprasActive}\r\n                    onMouseEnter={() => setComprasDrop(!comprasDrop)}\r\n                    onMouseLeave={() => setComprasDrop(false)}\r\n                  >\r\n                    <NavDropdown.Item\r\n                      as={Link}\r\n                      href=\"/compras/dashboard\"\r\n                      to=\"/compras/dashboard\"\r\n                    >\r\n                      Dashboard de Compras\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n\r\n                  {/* Dropdown da Expedição */}\r\n                  <NavDropdown\r\n                    title=\"Expedição\"\r\n                    show={expedicaoDrop}\r\n                    active={expedicaoActive}\r\n                    onMouseEnter={() => setExpedicaoDrop(!expedicaoDrop)}\r\n                    onMouseLeave={() => setExpedicaoDrop(false)}\r\n                  >\r\n                    <NavDropdown.Item\r\n                      href=\"/expedicao/aprovar\"\r\n                      to=\"/expedicao/aprovar\"\r\n                    >\r\n                      Aprovação de Pedidos\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n\r\n                  {/* Dropdown de Relatórios */}\r\n                  <NavDropdown\r\n                    title=\"Relatórios\"\r\n                    show={relatoriosDrop}\r\n                    active={relatoriosActive}\r\n                    onMouseEnter={() => setRelatoriosDrop(!relatoriosDrop)}\r\n                    onMouseLeave={() => setRelatoriosDrop(false)}\r\n                  >\r\n                    <NavDropdown.Item\r\n                      href=\"/relatorios/minmax\"\r\n                      to=\"/relatorios/minmax\"\r\n                    >\r\n                      Estoque Mínimo e Máximo\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n\r\n                  {/* Dropdown da Cadastros */}\r\n                  <NavDropdown\r\n                    title=\"Cadastros\"\r\n                    show={cadastrosDrop}\r\n                    active={cadastrosActive}\r\n                    onMouseEnter={() => setCadastrosDrops(!cadastrosDrop)}\r\n                    onMouseLeave={() => setCadastrosDrops(false)}\r\n                  >\r\n                    <NavDropdown.Item\r\n                      href=\"/cadastros/produtos\"\r\n                      to=\"/cadastros/produtos\"\r\n                    >\r\n                      Produtos\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n                </Nav>\r\n              </Navbar.Collapse>\r\n\r\n              <Navbar.Collapse className=\"justify-content-end\">\r\n                <Nav className=\"mr-auto\" navbarScroll>\r\n                  <BsPersonCircle />\r\n                  <NavDropdown\r\n                    className=\"dropdown-user\"\r\n                    title={\r\n                      <div className=\"user-dropdown-div \">\r\n                        <div className=\"m-0\">\r\n                          <BsPersonCircle size={25} />\r\n                        </div>\r\n                        <div className=\"user-name\">{userName}</div>\r\n                      </div>\r\n                    }\r\n                    show={userDrop}\r\n                    onMouseEnter={() => setUserDrop(true)}\r\n                    onMouseLeave={() => setUserDrop(false)}\r\n                  >\r\n                    <NavDropdown.Item onClick={signOut}>Sair</NavDropdown.Item>\r\n                  </NavDropdown>\r\n                </Nav>\r\n              </Navbar.Collapse>\r\n            </>\r\n          )}\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Menu;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport ChartContainer from \"../../ChartContainer\";\r\n\r\nfunction GraficoDisponibilidade(props) {\r\n  const { pDisponivel, pIndisponivel } = props;\r\n  const [data, setData] = useState();\r\n  const [options, setOptions] = useState();\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setData({\r\n      labels: [\"Disponíveis\", \"Indisponíveis\"],\r\n      datasets: [\r\n        {\r\n          data: [pDisponivel, pIndisponivel],\r\n          backgroundColor: [\"#198754\", \"#dc3545\"],\r\n          borderWidth: 4,\r\n        },\r\n      ],\r\n    });\r\n    setOptions({\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      plugins: {\r\n        title: {\r\n          display: true,\r\n          text: \"Disponibilidade de Produtos\",\r\n        },\r\n        legend: {\r\n          position: \"bottom\",\r\n          labels: {\r\n            usePointStyle: true,\r\n            padding: 15,\r\n          },\r\n        },\r\n      },\r\n      animation: {\r\n        duration: 3000,\r\n      },\r\n    });\r\n\r\n    setLoaded(true);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loaded && (\r\n        <ChartContainer>\r\n          <Doughnut data={data} options={options} />\r\n        </ChartContainer>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default GraficoDisponibilidade;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\n\r\nimport ChartContainer from \"../../ChartContainer\";\r\n\r\nfunction IndisponibilidadeCurva(props) {\r\n  const { porcentagens } = props;\r\n\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [data, setData] = useState();\r\n  const [options, setOptions] = useState();\r\n\r\n  useEffect(() => {\r\n    setData({\r\n      labels: [\"Curva A\", \"Curva B\", \"Curva C\", \"Sem Curva\"],\r\n      datasets: [\r\n        {\r\n          data: [\r\n            porcentagens[0],\r\n            porcentagens[1],\r\n            porcentagens[2],\r\n            porcentagens[3],\r\n          ],\r\n          backgroundColor: [\"#28a745\", \"#0dcaf0\", \"#007bff\", \"#6c757d\"],\r\n          borderWidth: 4,\r\n        },\r\n      ],\r\n    });\r\n    setOptions({\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      plugins: {\r\n        title: {\r\n          display: true,\r\n          text: \"Produtos Indisponíveis Por Curva (%)\",\r\n        },\r\n        legend: {\r\n          position: \"right\",\r\n          align: \"center\",\r\n          labels: {\r\n            usePointStyle: true,\r\n            boxWidth: 15,\r\n            padding: 15,\r\n          },\r\n        },\r\n      },\r\n      animation: false,\r\n    });\r\n    setLoaded(true);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loaded && (\r\n        <ChartContainer>\r\n          <Doughnut data={data} options={options} />\r\n        </ChartContainer>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default IndisponibilidadeCurva;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport ChartContainer from \"../../ChartContainer\";\r\n\r\nfunction DisponibilidadeCurva(props) {\r\n  const { porcentagens } = props;\r\n\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [data, setData] = useState();\r\n  const [options, setOptions] = useState();\r\n\r\n  useEffect(() => {\r\n    setData({\r\n      labels: [\"Curva A\", \"Curva B\", \"Curva C\", \"Sem Curva\"],\r\n      datasets: [\r\n        {\r\n          label: \"Meta\",\r\n          type: \"line\",\r\n          data: [92, 92, 92, 92],\r\n          borderColor: [\"#0dcaf0\"],\r\n          borderWidth: 3,\r\n          fill: false,\r\n          borderDash: [5, 5],\r\n          pointRadius: 0,\r\n        },\r\n        {\r\n          label: \"Disponibilidades\",\r\n          type: \"bar\",\r\n          data: [\r\n            porcentagens[0],\r\n            porcentagens[1],\r\n            porcentagens[2],\r\n            porcentagens[3],\r\n          ],\r\n          backgroundColor: [\r\n            \"rgba(40, 167, 69, 0.5)\",\r\n            \"rgba(23, 162, 184, 0.5)\",\r\n            \"rgba(0, 123, 255, 0.5)\",\r\n            \"rgba(108, 117, 125, 0.5)\",\r\n          ],\r\n          borderColor: [\"#28a745\", \"#0dcaf0\", \"#007bff\", \"#6c757d\"],\r\n          borderWidth: 2,\r\n        },\r\n      ],\r\n    });\r\n    setOptions({\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n\r\n      scales: {\r\n        yAxes: {\r\n          type: \"linear\",\r\n          max: 100,\r\n          min: 50,\r\n          ticks: {\r\n            callback: function (value) {\r\n              return value + \"%\";\r\n            },\r\n          },\r\n        },\r\n      },\r\n      plugins: {\r\n        title: {\r\n          display: true,\r\n          text: \"Disponibilidade por Curva (%)\",\r\n        },\r\n        legend: {\r\n          display: false,\r\n        },\r\n      },\r\n      animation: false,\r\n    });\r\n    setLoaded(true);\r\n  }, [porcentagens]);\r\n\r\n  return (\r\n    <>\r\n      {loaded && (\r\n        <ChartContainer>\r\n          <Bar data={data} options={options} />\r\n        </ChartContainer>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DisponibilidadeCurva;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport ChartContainer from \"../../ChartContainer\";\r\n\r\nfunction HistoricoCurvas(props) {\r\n  const { disponibilidades } = props;\r\n\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [data, setData] = useState({});\r\n  const [options, setOptions] = useState();\r\n\r\n  const meta = 92;\r\n\r\n  const montarDados = (disponibilidades) => {\r\n    // Declara arrays que serão montadas\r\n    let labels = [];\r\n    let valores = [[], [], [], []];\r\n    let valoresMeta = [];\r\n\r\n    // Monta Labels com as datas de disponibilidades\r\n    for (const data of disponibilidades) {\r\n      let dataMontada =\r\n        data[\"data\"][8] +\r\n        data[\"data\"][9] +\r\n        \"/\" +\r\n        data[\"data\"][5] +\r\n        data[\"data\"][6];\r\n      labels.push(dataMontada);\r\n    }\r\n\r\n    // Monta valores de disponibilidade\r\n    for (const valor of disponibilidades) {\r\n      valores[0].push(valor[\"curva_1\"]);\r\n      valores[1].push(valor[\"curva_2\"]);\r\n      valores[2].push(valor[\"curva_3\"]);\r\n      valores[3].push(valor[\"curva_4\"]);\r\n    }\r\n\r\n    // Monta valores de meta de acordo com a quantidade de valores considerados\r\n    for (const valor of valores[0]) {\r\n      valoresMeta.push(meta);\r\n    }\r\n\r\n    // Reverte as arrays montadas para exibição correta de novos dados\r\n    labels.reverse();\r\n    for (const valor of valores) valor.reverse();\r\n\r\n    // Encontra o menor e maior valor existente nos dados\r\n    let menorValor = Math.min.apply(Math, valores);\r\n    let maiorValor = Math.max.apply(Math, valores);\r\n\r\n    if (maiorValor < 92) maiorValor = 92;\r\n    if (menorValor > 92) menorValor = 92;\r\n\r\n    menorValor = isFinite(menorValor) ? menorValor : 0;\r\n    maiorValor = isFinite(maiorValor) ? maiorValor : 100;\r\n\r\n    return { valores, labels, valoresMeta, menorValor, maiorValor };\r\n  };\r\n\r\n  useEffect(() => {\r\n    let { valores, labels, valoresMeta, menorValor, maiorValor } =\r\n      montarDados(disponibilidades);\r\n\r\n    setData({\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          // Dataset de produtos disponíveis\r\n          label: \"Curva A\",\r\n          data: valores[0],\r\n          borderColor: [\"#28a745\"],\r\n          borderWidth: 2,\r\n          fill: false,\r\n          pointBackgroundColor: \"#28a745\",\r\n          tension: 0.4,\r\n        },\r\n        {\r\n          // Dataset de produtos disponíveis\r\n          label: \"Curva B\",\r\n          data: valores[1],\r\n          borderColor: [\"#17a2b8\"],\r\n          borderWidth: 2,\r\n          fill: false,\r\n          pointBackgroundColor: \"#17a2b8\",\r\n          tension: 0.4,\r\n        },\r\n\r\n        {\r\n          // Dataset de produtos disponíveis\r\n          label: \"Curva C\",\r\n          data: valores[2],\r\n          borderColor: [\"#007bff\"],\r\n          borderWidth: 2,\r\n          fill: false,\r\n          pointBackgroundColor: \"#007bff\",\r\n          tension: 0.4,\r\n        },\r\n        {\r\n          // Dataset de produtos disponíveis\r\n          label: \"Sem Curva\",\r\n          data: valores[3],\r\n          borderColor: [\"#6c757d\"],\r\n          borderWidth: 2,\r\n          fill: false,\r\n          pointBackgroundColor: \"#6c757d\",\r\n          tension: 0.4,\r\n        },\r\n        {\r\n          // Dataset de Meta - Disponíveis\r\n          label: \"Meta\",\r\n          data: valoresMeta,\r\n          borderColor: [\"#17a2b8\"],\r\n          borderWidth: 3,\r\n          fill: false,\r\n          borderDash: [5, 5],\r\n          pointRadius: 0,\r\n          pointBackgroundColor: \"#17a2b8\",\r\n        },\r\n      ],\r\n    });\r\n\r\n    setOptions({\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n\r\n      scales: {\r\n        y: {\r\n          type: \"linear\",\r\n          sugestedMin: menorValor + 0.1,\r\n          sugestedMax: maiorValor + 0.1,\r\n          ticks: {\r\n            maxTicksLimit: 10,\r\n            callback: function (value) {\r\n              return value.toFixed(1) + \"%\";\r\n            },\r\n          },\r\n          scaleLabel: {\r\n            display: false,\r\n            labelString: \"Disponibilidade\",\r\n          },\r\n        },\r\n      },\r\n      plugins: {\r\n        title: {\r\n          display: true,\r\n          text: \"Histórico de Disponibilidade (%)\",\r\n        },\r\n        legend: {\r\n          display: true,\r\n          position: \"bottom\",\r\n          labels: {\r\n            usePointStyle: true,\r\n            boxWidth: 5,\r\n            padding: 15,\r\n          },\r\n        },\r\n      },\r\n      animation: false,\r\n    });\r\n    setLoaded(true);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loaded && (\r\n        <ChartContainer>\r\n          <Line data={data} options={options} />\r\n        </ChartContainer>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HistoricoCurvas;\r\n","import { useEffect, useRef } from 'react';\n/**\n * Runs an effect only when the dependencies have changed, skipping the\n * initial \"on mount\" run. Caution, if the dependency list never changes,\n * the effect is **never run**\n *\n * ```ts\n *  const ref = useRef<HTMLInput>(null);\n *\n *  // focuses an element only if the focus changes, and not on mount\n *  useUpdateEffect(() => {\n *    const element = ref.current?.children[focusedIdx] as HTMLElement\n *\n *    element?.focus()\n *\n *  }, [focusedIndex])\n * ```\n * @param effect An effect to run on mount\n *\n * @category effects\n */\n\nfunction useUpdateEffect(fn, deps) {\n  var isFirst = useRef(true);\n  useEffect(function () {\n    if (isFirst.current) {\n      isFirst.current = false;\n      return;\n    }\n\n    return fn();\n  }, deps);\n}\n\nexport default useUpdateEffect;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('carousel-caption');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CarouselItem = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  const finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'carousel-item'));\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: finalClassName\n  });\n});\nCarouselItem.displayName = 'CarouselItem';\nexport default CarouselItem;","import useEventCallback from '@restart/hooks/useEventCallback';\nimport useUpdateEffect from '@restart/hooks/useUpdateEffect';\nimport useCommittedRef from '@restart/hooks/useCommittedRef';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport Anchor from '@restart/ui/Anchor';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport CarouselCaption from './CarouselCaption';\nimport CarouselItem from './CarouselItem';\nimport { map, forEach } from './ElementChildren';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nconst SWIPE_THRESHOLD = 40;\nconst defaultProps = {\n  slide: true,\n  fade: false,\n  controls: true,\n  indicators: true,\n  indicatorLabels: [],\n  defaultActiveIndex: 0,\n  interval: 5000,\n  keyboard: true,\n  pause: 'hover',\n  wrap: true,\n  touch: true,\n  prevIcon: /*#__PURE__*/_jsx(\"span\", {\n    \"aria-hidden\": \"true\",\n    className: \"carousel-control-prev-icon\"\n  }),\n  prevLabel: 'Previous',\n  nextIcon: /*#__PURE__*/_jsx(\"span\", {\n    \"aria-hidden\": \"true\",\n    className: \"carousel-control-next-icon\"\n  }),\n  nextLabel: 'Next'\n};\n\nfunction isVisible(element) {\n  if (!element || !element.style || !element.parentNode || !element.parentNode.style) {\n    return false;\n  }\n\n  const elementStyle = getComputedStyle(element);\n  return elementStyle.display !== 'none' && elementStyle.visibility !== 'hidden' && getComputedStyle(element.parentNode).display !== 'none';\n}\n\nconst Carousel = /*#__PURE__*/React.forwardRef((uncontrolledProps, ref) => {\n  const {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    bsPrefix,\n    slide,\n    fade,\n    controls,\n    indicators,\n    indicatorLabels,\n    activeIndex,\n    onSelect,\n    onSlide,\n    onSlid,\n    interval,\n    keyboard,\n    onKeyDown,\n    pause,\n    onMouseOver,\n    onMouseOut,\n    wrap,\n    touch,\n    onTouchStart,\n    onTouchMove,\n    onTouchEnd,\n    prevIcon,\n    prevLabel,\n    nextIcon,\n    nextLabel,\n    variant,\n    className,\n    children,\n    ...props\n  } = useUncontrolled(uncontrolledProps, {\n    activeIndex: 'onSelect'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'carousel');\n  const isRTL = useIsRTL();\n  const nextDirectionRef = useRef(null);\n  const [direction, setDirection] = useState('next');\n  const [paused, setPaused] = useState(false);\n  const [isSliding, setIsSliding] = useState(false);\n  const [renderedActiveIndex, setRenderedActiveIndex] = useState(activeIndex || 0);\n  useEffect(() => {\n    if (!isSliding && activeIndex !== renderedActiveIndex) {\n      if (nextDirectionRef.current) {\n        setDirection(nextDirectionRef.current);\n      } else {\n        setDirection((activeIndex || 0) > renderedActiveIndex ? 'next' : 'prev');\n      }\n\n      if (slide) {\n        setIsSliding(true);\n      }\n\n      setRenderedActiveIndex(activeIndex || 0);\n    }\n  }, [activeIndex, isSliding, renderedActiveIndex, slide]);\n  useEffect(() => {\n    if (nextDirectionRef.current) {\n      nextDirectionRef.current = null;\n    }\n  });\n  let numChildren = 0;\n  let activeChildInterval; // Iterate to grab all of the children's interval values\n  // (and count them, too)\n\n  forEach(children, (child, index) => {\n    ++numChildren;\n\n    if (index === activeIndex) {\n      activeChildInterval = child.props.interval;\n    }\n  });\n  const activeChildIntervalRef = useCommittedRef(activeChildInterval);\n  const prev = useCallback(event => {\n    if (isSliding) {\n      return;\n    }\n\n    let nextActiveIndex = renderedActiveIndex - 1;\n\n    if (nextActiveIndex < 0) {\n      if (!wrap) {\n        return;\n      }\n\n      nextActiveIndex = numChildren - 1;\n    }\n\n    nextDirectionRef.current = 'prev';\n    onSelect == null ? void 0 : onSelect(nextActiveIndex, event);\n  }, [isSliding, renderedActiveIndex, onSelect, wrap, numChildren]); // This is used in the setInterval, so it should not invalidate.\n\n  const next = useEventCallback(event => {\n    if (isSliding) {\n      return;\n    }\n\n    let nextActiveIndex = renderedActiveIndex + 1;\n\n    if (nextActiveIndex >= numChildren) {\n      if (!wrap) {\n        return;\n      }\n\n      nextActiveIndex = 0;\n    }\n\n    nextDirectionRef.current = 'next';\n    onSelect == null ? void 0 : onSelect(nextActiveIndex, event);\n  });\n  const elementRef = useRef();\n  useImperativeHandle(ref, () => ({\n    element: elementRef.current,\n    prev,\n    next\n  })); // This is used in the setInterval, so it should not invalidate.\n\n  const nextWhenVisible = useEventCallback(() => {\n    if (!document.hidden && isVisible(elementRef.current)) {\n      if (isRTL) {\n        prev();\n      } else {\n        next();\n      }\n    }\n  });\n  const slideDirection = direction === 'next' ? 'start' : 'end';\n  useUpdateEffect(() => {\n    if (slide) {\n      // These callbacks will be handled by the <Transition> callbacks.\n      return;\n    }\n\n    onSlide == null ? void 0 : onSlide(renderedActiveIndex, slideDirection);\n    onSlid == null ? void 0 : onSlid(renderedActiveIndex, slideDirection);\n  }, [renderedActiveIndex]);\n  const orderClassName = `${prefix}-item-${direction}`;\n  const directionalClassName = `${prefix}-item-${slideDirection}`;\n  const handleEnter = useCallback(node => {\n    triggerBrowserReflow(node);\n    onSlide == null ? void 0 : onSlide(renderedActiveIndex, slideDirection);\n  }, [onSlide, renderedActiveIndex, slideDirection]);\n  const handleEntered = useCallback(() => {\n    setIsSliding(false);\n    onSlid == null ? void 0 : onSlid(renderedActiveIndex, slideDirection);\n  }, [onSlid, renderedActiveIndex, slideDirection]);\n  const handleKeyDown = useCallback(event => {\n    if (keyboard && !/input|textarea/i.test(event.target.tagName)) {\n      switch (event.key) {\n        case 'ArrowLeft':\n          event.preventDefault();\n\n          if (isRTL) {\n            next(event);\n          } else {\n            prev(event);\n          }\n\n          return;\n\n        case 'ArrowRight':\n          event.preventDefault();\n\n          if (isRTL) {\n            prev(event);\n          } else {\n            next(event);\n          }\n\n          return;\n\n        default:\n      }\n    }\n\n    onKeyDown == null ? void 0 : onKeyDown(event);\n  }, [keyboard, onKeyDown, prev, next, isRTL]);\n  const handleMouseOver = useCallback(event => {\n    if (pause === 'hover') {\n      setPaused(true);\n    }\n\n    onMouseOver == null ? void 0 : onMouseOver(event);\n  }, [pause, onMouseOver]);\n  const handleMouseOut = useCallback(event => {\n    setPaused(false);\n    onMouseOut == null ? void 0 : onMouseOut(event);\n  }, [onMouseOut]);\n  const touchStartXRef = useRef(0);\n  const touchDeltaXRef = useRef(0);\n  const touchUnpauseTimeout = useTimeout();\n  const handleTouchStart = useCallback(event => {\n    touchStartXRef.current = event.touches[0].clientX;\n    touchDeltaXRef.current = 0;\n\n    if (pause === 'hover') {\n      setPaused(true);\n    }\n\n    onTouchStart == null ? void 0 : onTouchStart(event);\n  }, [pause, onTouchStart]);\n  const handleTouchMove = useCallback(event => {\n    if (event.touches && event.touches.length > 1) {\n      touchDeltaXRef.current = 0;\n    } else {\n      touchDeltaXRef.current = event.touches[0].clientX - touchStartXRef.current;\n    }\n\n    onTouchMove == null ? void 0 : onTouchMove(event);\n  }, [onTouchMove]);\n  const handleTouchEnd = useCallback(event => {\n    if (touch) {\n      const touchDeltaX = touchDeltaXRef.current;\n\n      if (Math.abs(touchDeltaX) > SWIPE_THRESHOLD) {\n        if (touchDeltaX > 0) {\n          prev(event);\n        } else {\n          next(event);\n        }\n      }\n    }\n\n    if (pause === 'hover') {\n      touchUnpauseTimeout.set(() => {\n        setPaused(false);\n      }, interval || undefined);\n    }\n\n    onTouchEnd == null ? void 0 : onTouchEnd(event);\n  }, [touch, pause, prev, next, touchUnpauseTimeout, interval, onTouchEnd]);\n  const shouldPlay = interval != null && !paused && !isSliding;\n  const intervalHandleRef = useRef();\n  useEffect(() => {\n    var _ref, _activeChildIntervalR;\n\n    if (!shouldPlay) {\n      return undefined;\n    }\n\n    const nextFunc = isRTL ? prev : next;\n    intervalHandleRef.current = window.setInterval(document.visibilityState ? nextWhenVisible : nextFunc, (_ref = (_activeChildIntervalR = activeChildIntervalRef.current) != null ? _activeChildIntervalR : interval) != null ? _ref : undefined);\n    return () => {\n      if (intervalHandleRef.current !== null) {\n        clearInterval(intervalHandleRef.current);\n      }\n    };\n  }, [shouldPlay, prev, next, activeChildIntervalRef, interval, nextWhenVisible, isRTL]);\n  const indicatorOnClicks = useMemo(() => indicators && Array.from({\n    length: numChildren\n  }, (_, index) => event => {\n    onSelect == null ? void 0 : onSelect(index, event);\n  }), [indicators, numChildren, onSelect]);\n  return /*#__PURE__*/_jsxs(Component, {\n    ref: elementRef,\n    ...props,\n    onKeyDown: handleKeyDown,\n    onMouseOver: handleMouseOver,\n    onMouseOut: handleMouseOut,\n    onTouchStart: handleTouchStart,\n    onTouchMove: handleTouchMove,\n    onTouchEnd: handleTouchEnd,\n    className: classNames(className, prefix, slide && 'slide', fade && `${prefix}-fade`, variant && `${prefix}-${variant}`),\n    children: [indicators && /*#__PURE__*/_jsx(\"div\", {\n      className: `${prefix}-indicators`,\n      children: map(children, (_, index) => /*#__PURE__*/_jsx(\"button\", {\n        type: \"button\",\n        \"data-bs-target\": \"\" // Bootstrap requires this in their css.\n        ,\n        \"aria-label\": indicatorLabels != null && indicatorLabels.length ? indicatorLabels[index] : `Slide ${index + 1}`,\n        className: index === renderedActiveIndex ? 'active' : undefined,\n        onClick: indicatorOnClicks ? indicatorOnClicks[index] : undefined,\n        \"aria-current\": index === renderedActiveIndex\n      }, index))\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: `${prefix}-inner`,\n      children: map(children, (child, index) => {\n        const isActive = index === renderedActiveIndex;\n        return slide ? /*#__PURE__*/_jsx(TransitionWrapper, {\n          in: isActive,\n          onEnter: isActive ? handleEnter : undefined,\n          onEntered: isActive ? handleEntered : undefined,\n          addEndListener: transitionEndListener,\n          children: (status, innerProps) => /*#__PURE__*/React.cloneElement(child, { ...innerProps,\n            className: classNames(child.props.className, isActive && status !== 'entered' && orderClassName, (status === 'entered' || status === 'exiting') && 'active', (status === 'entering' || status === 'exiting') && directionalClassName)\n          })\n        }) : /*#__PURE__*/React.cloneElement(child, {\n          className: classNames(child.props.className, isActive && 'active')\n        });\n      })\n    }), controls && /*#__PURE__*/_jsxs(_Fragment, {\n      children: [(wrap || activeIndex !== 0) && /*#__PURE__*/_jsxs(Anchor, {\n        className: `${prefix}-control-prev`,\n        onClick: prev,\n        children: [prevIcon, prevLabel && /*#__PURE__*/_jsx(\"span\", {\n          className: \"visually-hidden\",\n          children: prevLabel\n        })]\n      }), (wrap || activeIndex !== numChildren - 1) && /*#__PURE__*/_jsxs(Anchor, {\n        className: `${prefix}-control-next`,\n        onClick: next,\n        children: [nextIcon, nextLabel && /*#__PURE__*/_jsx(\"span\", {\n          className: \"visually-hidden\",\n          children: nextLabel\n        })]\n      })]\n    })]\n  });\n});\nCarousel.displayName = 'Carousel';\nCarousel.defaultProps = defaultProps;\nexport default Object.assign(Carousel, {\n  Caption: CarouselCaption,\n  Item: CarouselItem\n});","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport Menu from \"../../components/Menu\";\r\n\r\nimport GraficoDisponibilidade from \"../../components/DashCompras/GraficoDisponibilidade\";\r\nimport HistoricoDisponibilidade from \"../../components/DashCompras/HistoricoDisponibilidade\";\r\nimport IndisponibilidadeCurva from \"../../components/DashCompras/IndisponibilidadeCurva\";\r\nimport DisponibilidadeCurva from \"../../components/DashCompras/DisponibilidadeCurva\";\r\nimport HistoricoCurvas from \"../../components/DashCompras/HistoricoCurvas\";\r\n\r\nimport api from \"../../services/api\";\r\n\r\nimport {\r\n  Container,\r\n  Card,\r\n  Col,\r\n  Row,\r\n  Spinner,\r\n  ListGroup,\r\n  Badge,\r\n  Carousel,\r\n} from \"react-bootstrap\";\r\n\r\nfunction DashboardCompras() {\r\n  const [ativos, setAtivos] = useState();\r\n  const [disponiveis, setDisponiveis] = useState();\r\n  const [indisponiveis, setIndisponiveis] = useState();\r\n  const [pDisponivel, setPDisponivel] = useState();\r\n  const [pIndisponivel, setPIndisponivel] = useState();\r\n  const [abaixoMin, setAbaixoMin] = useState();\r\n  const [pAbaixoMin, setPAbaixoMin] = useState();\r\n  const [disponibilidades, setDisponibilidades] = useState([]);\r\n\r\n  const [indisponivelCurva, setIndisponivelCurva] = useState([]);\r\n  const [pIndisponivelCurva, setPIndisponivelCurva] = useState([]);\r\n  const [pDisponivelCurva, setPDisponivelCurva] = useState([]);\r\n  const [disponibilidadesCurva, setDisponibilidadesCurva] = useState([]);\r\n\r\n  const [carregado, setCarregado] = useState(false);\r\n\r\n  const [carregaChamadaDash, setCarregaChamadaDash] = useState(0);\r\n\r\n  const intervalo = useRef(null);\r\n\r\n  const iniciaContador = () => {\r\n    intervalo.current = setInterval(carregaDash, 180000);\r\n  };\r\n\r\n  const stopCounter = () => clearInterval(intervalo.current);\r\n\r\n  useEffect(() => {\r\n    carregaDash();\r\n    iniciaContador();\r\n  }, [carregaChamadaDash]);\r\n\r\n  const carregaDash = async () => {\r\n    const pathname = window.location.pathname;\r\n\r\n    // Para o contador caso sai do escopo da página do dashboard de compras\r\n    if (!pathname.includes(\"/compras/dashboard\")) {\r\n      stopCounter();\r\n      return;\r\n    }\r\n\r\n    await api\r\n      .get(\"/compras/dashboard\")\r\n      .then((res) => {\r\n        // Desestrutura variáveis da resposta do dashboard\r\n        // Nomes coerentes com os nomes do retorno da API\r\n        const {\r\n          ativos,\r\n          disponiveis,\r\n          indisponiveis,\r\n          pdisponivel,\r\n          pindisponivel,\r\n          abaixoMin,\r\n          pAbaixoMin,\r\n          disponibilidades,\r\n          pIndisponivelCurva,\r\n          indisponivelPorCurva,\r\n          pDisponivelPorCurva,\r\n          disponiblidadesCurva,\r\n        } = res.data;\r\n\r\n        setAtivos(ativos);\r\n        setDisponiveis(disponiveis);\r\n        setIndisponiveis(indisponiveis);\r\n        setPDisponivel(pdisponivel);\r\n        setPIndisponivel(pindisponivel);\r\n        setAbaixoMin(abaixoMin);\r\n        setPAbaixoMin(pAbaixoMin);\r\n        setDisponibilidades(disponibilidades);\r\n\r\n        setIndisponivelCurva(indisponivelPorCurva);\r\n        setPIndisponivelCurva(pIndisponivelCurva);\r\n        setPDisponivelCurva(pDisponivelPorCurva);\r\n        setDisponibilidadesCurva(disponiblidadesCurva);\r\n\r\n        setCarregado(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\r\n          \"Erro na requisição de atualização dos dados da dashboard de compras\"\r\n        );\r\n      });\r\n  };\r\n\r\n  const [index, setIndex] = useState(0);\r\n\r\n  const handleSelect = (selectedIndex, e) => {\r\n    setIndex(selectedIndex);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Menu logged={true} />\r\n\r\n      {!carregado && (\r\n        <Container fluid className=\"text-center container-binx\">\r\n          <Container fluid className=\"center-vertically\">\r\n            <Spinner\r\n              animation=\"grow\"\r\n              size=\"md\"\r\n              role=\"status\"\r\n              aria-hidden=\"true\"\r\n            />\r\n          </Container>\r\n        </Container>\r\n      )}\r\n\r\n      {carregado && (\r\n        <>\r\n          <Carousel interval={null}>\r\n            <Carousel.Item>\r\n              <Container className=\"mt-4 p-0\">\r\n                {/* Primeira Linha */}\r\n                <Row className=\"mb-4\">\r\n                  {/* Card de Produtos Disponíveis */}\r\n                  <Col>\r\n                    <Card className=\"text-center\">\r\n                      <Card.Header>Produtos Disponíveis</Card.Header>\r\n                      <Card.Body>\r\n                        <Card.Text>\r\n                          Quantidade de produtos com estoque disponível para\r\n                          venda\r\n                        </Card.Text>\r\n                        <ListGroup>\r\n                          <ListGroup.Item className=\"p-2\">\r\n                            <Row>\r\n                              <Col>\r\n                                <h2>\r\n                                  <Badge bg=\"success\">{disponiveis}</Badge>\r\n                                </h2>\r\n                              </Col>\r\n                              <Col>\r\n                                <h2>\r\n                                  <Badge bg=\"success\">{pDisponivel}%</Badge>\r\n                                </h2>\r\n                              </Col>\r\n                            </Row>\r\n                          </ListGroup.Item>\r\n                          <ListGroup>\r\n                            <ListGroup.Item className=\"mt-2\">\r\n                              Nossa meta é manter acima de:{\" \"}\r\n                              <Badge bg=\"info\">92%</Badge>\r\n                            </ListGroup.Item>\r\n                          </ListGroup>\r\n                        </ListGroup>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n\r\n                  {/* Gráfico de Disponibilidade */}\r\n                  <Col>\r\n                    <div style={{ height: \"250px\" }}>\r\n                      <GraficoDisponibilidade\r\n                        pDisponivel={pDisponivel}\r\n                        pIndisponivel={pIndisponivel}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n\r\n                  {/* Card de Produtos Indisponíveis */}\r\n                  <Col>\r\n                    <Card className=\"text-center\">\r\n                      <Card.Header>Produtos Indisponíveis</Card.Header>\r\n                      <Card.Body>\r\n                        {/* <Card.Title>Produtos</Card.Title> */}\r\n                        <Card.Text>\r\n                          Quantidade de produtos sem estoque disponível para\r\n                          venda\r\n                        </Card.Text>\r\n                        <ListGroup>\r\n                          <ListGroup.Item className=\"p-2\">\r\n                            <Row>\r\n                              <Col>\r\n                                <h2>\r\n                                  <Badge bg=\"danger\">{indisponiveis}</Badge>\r\n                                </h2>\r\n                              </Col>\r\n                              <Col>\r\n                                <h2>\r\n                                  <Badge bg=\"danger\">{pIndisponivel}%</Badge>\r\n                                </h2>\r\n                              </Col>\r\n                            </Row>\r\n                          </ListGroup.Item>\r\n                        </ListGroup>\r\n                        <ListGroup>\r\n                          <ListGroup.Item className=\"mt-2\">\r\n                            Nossa meta é manter abaixo de:{\"  \"}\r\n                            <Badge bg=\"info\">8%</Badge>\r\n                          </ListGroup.Item>\r\n                        </ListGroup>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                </Row>\r\n\r\n                {/* Segunda Linha */}\r\n                <Row className=\"mt-4 align-items-center\">\r\n                  {/* Quantidade Total de Produtos Ativos */}\r\n                  <Col>\r\n                    <Card className=\"text-center\">\r\n                      <Card.Header>Produtos Ativos</Card.Header>\r\n                      <Card.Body>\r\n                        <Card.Text>\r\n                          Quantidade de produtos ativos no sistema\r\n                        </Card.Text>\r\n                        <ListGroup className=\"p-0\">\r\n                          <ListGroup.Item className=\"p-2\">\r\n                            <h2>\r\n                              <Badge bg=\"primary\">{ativos}</Badge>\r\n                            </h2>\r\n                          </ListGroup.Item>\r\n                        </ListGroup>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n\r\n                  {/* Segundo Gráfico */}\r\n                  <Col>\r\n                    <div style={{ height: \"350px\" }}>\r\n                      <HistoricoDisponibilidade\r\n                        disponibilidades={disponibilidades}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n\r\n                  {/* Card de Situação de Estoque*/}\r\n                  <Col>\r\n                    <Card className=\"text-center\">\r\n                      <Card.Header>Situação de Estoque</Card.Header>\r\n                      <Card.Body>\r\n                        <Card.Text>\r\n                          Produtos com estoque abaixo do mínimo\r\n                        </Card.Text>\r\n                        <ListGroup>\r\n                          <ListGroup.Item className=\"p-2\">\r\n                            <Row>\r\n                              <Col>\r\n                                <h2>\r\n                                  <Badge bg=\"warning\">{abaixoMin}</Badge>\r\n                                </h2>\r\n                              </Col>\r\n                              <Col>\r\n                                <h2>\r\n                                  <Badge bg=\"warning\">{pAbaixoMin}%</Badge>\r\n                                </h2>\r\n                              </Col>\r\n                            </Row>\r\n                          </ListGroup.Item>\r\n                        </ListGroup>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            </Carousel.Item>\r\n\r\n            <Carousel.Item>\r\n              <Container className=\"mt-4 p-0\">\r\n                <Row className=\"mt-4 align-items-center\">\r\n                  <Col>\r\n                    <Card className=\"text-center\">\r\n                      <Card.Header>Indisponibilidade por Curva</Card.Header>\r\n                      <Card.Body>\r\n                        <Card.Text>Produtos Indisponíveis</Card.Text>\r\n                        <ListGroup>\r\n                          <ListGroup.Item className=\"p-2\">\r\n                            <Row className=\"align-items-end\">\r\n                              <Col>\r\n                                Curva A\r\n                                <h5>\r\n                                  <Badge bg=\"success\">\r\n                                    {indisponivelCurva[0]}\r\n                                  </Badge>\r\n                                </h5>\r\n                              </Col>\r\n                              <Col>\r\n                                Curva B\r\n                                <h5>\r\n                                  <Badge bg=\"info\">\r\n                                    {indisponivelCurva[1]}\r\n                                  </Badge>\r\n                                </h5>\r\n                              </Col>\r\n                              <Col>\r\n                                Curva C\r\n                                <h5>\r\n                                  <Badge bg=\"primary\">\r\n                                    {indisponivelCurva[2]}\r\n                                  </Badge>\r\n                                </h5>\r\n                              </Col>\r\n                              <Col>\r\n                                Sem Curva\r\n                                <h5>\r\n                                  <Badge bg=\"secondary\">\r\n                                    {indisponivelCurva[3]}\r\n                                  </Badge>\r\n                                </h5>\r\n                              </Col>\r\n                            </Row>\r\n                          </ListGroup.Item>\r\n                        </ListGroup>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                  <Col>\r\n                    <div style={{ height: \"200px\" }}>\r\n                      <IndisponibilidadeCurva\r\n                        porcentagens={pIndisponivelCurva}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col>\r\n                    <Card className=\"text-center\">\r\n                      <Card.Header>Indisponibilidade Relativa</Card.Header>\r\n                      <Card.Body>\r\n                        <Card.Text>\r\n                          Parcela dos produtos indisponíveis\r\n                        </Card.Text>\r\n                        <ListGroup className=\"mt-2\">\r\n                          <ListGroup.Item className=\"p-2\">\r\n                            <Row className=\"align-items-end\">\r\n                              <Col>\r\n                                Curva A\r\n                                <h5>\r\n                                  <Badge bg=\"success\">\r\n                                    {pIndisponivelCurva[0]}%\r\n                                  </Badge>\r\n                                </h5>\r\n                              </Col>\r\n                              <Col>\r\n                                Curva B\r\n                                <h5>\r\n                                  <Badge bg=\"info\">\r\n                                    {pIndisponivelCurva[1]}%\r\n                                  </Badge>\r\n                                </h5>\r\n                              </Col>\r\n                              <Col>\r\n                                Curva C\r\n                                <h5>\r\n                                  <Badge bg=\"primary\">\r\n                                    {pIndisponivelCurva[2]}%\r\n                                  </Badge>\r\n                                </h5>\r\n                              </Col>\r\n                              <Col>\r\n                                Sem Curva\r\n                                <h5>\r\n                                  <Badge bg=\"secondary\">\r\n                                    {pIndisponivelCurva[3]}%\r\n                                  </Badge>\r\n                                </h5>\r\n                              </Col>\r\n                            </Row>\r\n                          </ListGroup.Item>\r\n                        </ListGroup>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"mt-4 align-items-center\">\r\n                  <Col>\r\n                    <div style={{ height: \"250px\" }}>\r\n                      <DisponibilidadeCurva porcentagens={pDisponivelCurva} />\r\n                    </div>\r\n                  </Col>\r\n                  <Col>\r\n                    <Card className=\"text-center\">\r\n                      <Card.Header>Disponibilidade por Curva</Card.Header>\r\n                      <Card.Body>\r\n                        <Card.Text>\r\n                          Produtos disponíveis por curva (total)\r\n                        </Card.Text>\r\n                        <ListGroup className=\"mt-2\">\r\n                          <ListGroup.Item className=\"p-2\">\r\n                            <Row className=\"align-items-end\">\r\n                              <Col>\r\n                                Curva A\r\n                                <h5>\r\n                                  <Badge bg=\"success\">\r\n                                    {pDisponivelCurva[0]}%\r\n                                  </Badge>\r\n                                </h5>\r\n                              </Col>\r\n                              <Col>\r\n                                Curva B\r\n                                <h5>\r\n                                  <Badge bg=\"info\">\r\n                                    {pDisponivelCurva[1]}%\r\n                                  </Badge>\r\n                                </h5>\r\n                              </Col>\r\n                              <Col>\r\n                                Curva C\r\n                                <h5>\r\n                                  <Badge bg=\"primary\">\r\n                                    {pDisponivelCurva[2]}%\r\n                                  </Badge>\r\n                                </h5>\r\n                              </Col>\r\n                              <Col>\r\n                                Sem Curva\r\n                                <h5>\r\n                                  <Badge bg=\"secondary\">\r\n                                    {pDisponivelCurva[3]}%\r\n                                  </Badge>\r\n                                </h5>\r\n                              </Col>\r\n                            </Row>\r\n                          </ListGroup.Item>\r\n                        </ListGroup>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                  <Col>\r\n                    <div style={{ height: \"300px\" }}>\r\n                      <HistoricoCurvas\r\n                        disponibilidades={disponibilidadesCurva}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            </Carousel.Item>\r\n          </Carousel>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DashboardCompras;\r\n","import axios from \"axios\";\r\n\r\n// Para utilização com certificado SSL inválido\r\n// import https from \"https\";\r\n// const api = axios.create({\r\n//   baseURL: \"https://api.binx.com.br/api\",\r\n//   httpsAgent: new https.Agent({\r\n//     rejectUnauthorized: false,\r\n//   }),\r\n// });\r\n\r\nconst enviroment = process.env.REACT_APP_ENVIROMENT || \"development\";\r\n\r\nlet baseURL =\r\n  enviroment === \"development\"\r\n    ? \"http://localhost:4005/api\"\r\n    : \"https://api.binx.com.br/api\";\r\n\r\nconst api = axios.create({ baseURL: baseURL });\r\n\r\nexport default api;\r\n","import { useMemo, useRef } from 'react';\nimport useMounted from './useMounted';\nimport useWillUnmount from './useWillUnmount';\n/*\n * Browsers including Internet Explorer, Chrome, Safari, and Firefox store the\n * delay as a 32-bit signed integer internally. This causes an integer overflow\n * when using delays larger than 2,147,483,647 ms (about 24.8 days),\n * resulting in the timeout being executed immediately.\n *\n * via: https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout\n */\n\nvar MAX_DELAY_MS = Math.pow(2, 31) - 1;\n\nfunction setChainedTimeout(handleRef, fn, timeoutAtMs) {\n  var delayMs = timeoutAtMs - Date.now();\n  handleRef.current = delayMs <= MAX_DELAY_MS ? setTimeout(fn, delayMs) : setTimeout(function () {\n    return setChainedTimeout(handleRef, fn, timeoutAtMs);\n  }, MAX_DELAY_MS);\n}\n/**\n * Returns a controller object for setting a timeout that is properly cleaned up\n * once the component unmounts. New timeouts cancel and replace existing ones.\n *\n *\n *\n * ```tsx\n * const { set, clear } = useTimeout();\n * const [hello, showHello] = useState(false);\n * //Display hello after 5 seconds\n * set(() => showHello(true), 5000);\n * return (\n *   <div className=\"App\">\n *     {hello ? <h3>Hello</h3> : null}\n *   </div>\n * );\n * ```\n */\n\n\nexport default function useTimeout() {\n  var isMounted = useMounted(); // types are confused between node and web here IDK\n\n  var handleRef = useRef();\n  useWillUnmount(function () {\n    return clearTimeout(handleRef.current);\n  });\n  return useMemo(function () {\n    var clear = function clear() {\n      return clearTimeout(handleRef.current);\n    };\n\n    function set(fn, delayMs) {\n      if (delayMs === void 0) {\n        delayMs = 0;\n      }\n\n      if (!isMounted()) return;\n      clear();\n\n      if (delayMs <= MAX_DELAY_MS) {\n        // For simplicity, if the timeout is short, just set a normal timeout.\n        handleRef.current = setTimeout(fn, delayMs);\n      } else {\n        setChainedTimeout(handleRef, fn, Date.now() + delayMs);\n      }\n    }\n\n    return {\n      set: set,\n      clear: clear\n    };\n  }, []);\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  bg: 'primary',\n  pill: false\n};\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg,\n  pill,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import * as React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\n\n\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\n\nexport { map, forEach, hasChildOfType };","import classNames from 'classnames';\nimport * as React from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useNavItem } from '@restart/ui/NavItem';\nimport { makeEventKey } from '@restart/ui/SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroupItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  disabled,\n  eventKey,\n  className,\n  variant,\n  action,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  const [navItemProps, meta] = useNavItem({\n    key: makeEventKey(eventKey, props.href),\n    active,\n    ...props\n  });\n  const handleClick = useEventCallback(event => {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    navItemProps.onClick(event);\n  });\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  } // eslint-disable-next-line no-nested-ternary\n\n\n  const Component = as || (action ? props.href ? 'a' : 'button' : 'div');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    ...navItemProps,\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, meta.isActive && 'active', disabled && 'disabled', variant && `${bsPrefix}-${variant}`, action && `${bsPrefix}-action`)\n  });\n});\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseNav from '@restart/ui/Nav';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ListGroupItem from './ListGroupItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    className,\n    bsPrefix: initialBsPrefix,\n    variant,\n    horizontal,\n    numbered,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as = 'div',\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  let horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : `horizontal-${horizontal}`;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(BaseNav, {\n    ref: ref,\n    ...controlledProps,\n    as: as,\n    className: classNames(className, bsPrefix, variant && `${bsPrefix}-${variant}`, horizontalVariant && `${bsPrefix}-${horizontalVariant}`, numbered && `${bsPrefix}-numbered`)\n  });\n});\nListGroup.displayName = 'ListGroup';\nexport default Object.assign(ListGroup, {\n  Item: ListGroupItem\n});"],"names":["props","Chart","ArcElement","LineElement","BarElement","PointElement","BarController","BubbleController","DoughnutController","LineController","PieController","PolarAreaController","RadarController","ScatterController","CategoryScale","LinearScale","LogarithmicScale","RadialLinearScale","TimeScale","TimeSeriesScale","Decimation","Filler","Legend","Title","Tooltip","SubTitle","children","disponibilidades","useState","loaded","setLoaded","data","setData","options","setOptions","useEffect","labels","valores","valoresMeta","dataMontada","push","valor","reverse","menorValor","Math","min","apply","maiorValor","max","isFinite","montarDados","datasets","label","borderColor","borderWidth","fill","pointBackgroundColor","tension","borderDash","pointRadius","responsive","maintainAspectRatio","scales","y","type","suggestedMin","suggestedMax","ticks","maxTicksLimit","callback","value","toFixed","plugins","title","display","text","padding","legend","position","usePointStyle","boxWidth","animation","duration","navigate","useNavigate","vendasDrop","setVendasDrop","comprasDrop","setComprasDrop","expedicaoDrop","setExpedicaoDrop","relatoriosDrop","setRelatoriosDrop","cadastrosDrop","setCadastrosDrops","userDrop","setUserDrop","vendasActive","setVendasActive","comprasActive","setComprasActive","expedicaoActive","setExpedicaoActive","relatoriosActive","setRelatoriosActive","cadastrosActive","setCadastrosActive","userName","setUserName","userContext","useContext","AuthContext","pathname","window","location","includes","attributes","Navbar","bg","variant","expand","sticky","Container","fluid","to","className","src","NavbarLogo","width","alt","logged","Nav","navbarScroll","NavDropdown","active","show","onMouseEnter","onMouseLeave","as","Link","href","size","onClick","Auth","then","catch","error","pDisponivel","pIndisponivel","backgroundColor","ChartContainer","porcentagens","align","yAxes","sugestedMin","sugestedMax","scaleLabel","labelString","fn","deps","isFirst","useRef","current","createWithBsPrefix","CarouselItem","React","ref","Component","bsPrefix","finalClassName","classNames","useBootstrapPrefix","_jsx","displayName","defaultProps","slide","fade","controls","indicators","indicatorLabels","defaultActiveIndex","interval","keyboard","pause","wrap","touch","prevIcon","prevLabel","nextIcon","nextLabel","Carousel","uncontrolledProps","useUncontrolled","activeIndex","onSelect","onSlide","onSlid","onKeyDown","onMouseOver","onMouseOut","onTouchStart","onTouchMove","onTouchEnd","prefix","isRTL","useIsRTL","nextDirectionRef","direction","setDirection","paused","setPaused","isSliding","setIsSliding","renderedActiveIndex","setRenderedActiveIndex","activeChildInterval","numChildren","forEach","child","index","activeChildIntervalRef","useCommittedRef","prev","useCallback","event","nextActiveIndex","next","useEventCallback","elementRef","useImperativeHandle","element","nextWhenVisible","document","hidden","style","parentNode","elementStyle","getComputedStyle","visibility","isVisible","slideDirection","useUpdateEffect","orderClassName","directionalClassName","handleEnter","node","triggerBrowserReflow","handleEntered","handleKeyDown","test","target","tagName","key","preventDefault","handleMouseOver","handleMouseOut","touchStartXRef","touchDeltaXRef","touchUnpauseTimeout","useTimeout","handleTouchStart","touches","clientX","handleTouchMove","length","handleTouchEnd","touchDeltaX","abs","set","undefined","shouldPlay","intervalHandleRef","_ref","_activeChildIntervalR","nextFunc","setInterval","visibilityState","clearInterval","indicatorOnClicks","useMemo","Array","from","_","_jsxs","map","isActive","TransitionWrapper","in","onEnter","onEntered","addEndListener","transitionEndListener","status","innerProps","_Fragment","Anchor","Object","assign","Caption","CarouselCaption","Item","ativos","setAtivos","disponiveis","setDisponiveis","indisponiveis","setIndisponiveis","setPDisponivel","setPIndisponivel","abaixoMin","setAbaixoMin","pAbaixoMin","setPAbaixoMin","setDisponibilidades","indisponivelCurva","setIndisponivelCurva","pIndisponivelCurva","setPIndisponivelCurva","pDisponivelCurva","setPDisponivelCurva","disponibilidadesCurva","setDisponibilidadesCurva","carregado","setCarregado","carregaChamadaDash","intervalo","carregaDash","api","res","pdisponivel","pindisponivel","indisponivelPorCurva","pDisponivelPorCurva","disponiblidadesCurva","console","log","Menu","Spinner","role","Row","Col","Card","ListGroup","Badge","height","HistoricoDisponibilidade","baseURL","process","REACT_APP_ENVIROMENT","axios","MAX_DELAY_MS","pow","setChainedTimeout","handleRef","timeoutAtMs","delayMs","Date","now","setTimeout","isMounted","useMounted","useWillUnmount","clearTimeout","clear","pill","CardImg","CardHeader","contextValue","cardHeaderBsPrefix","CardHeaderContext","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","border","body","Img","Subtitle","Body","Text","Header","Footer","ImgOverlay","func","hasChildOfType","some","ListGroupItem","disabled","eventKey","action","useNavItem","makeEventKey","navItemProps","meta","handleClick","stopPropagation","tabIndex","horizontalVariant","activeKey","initialBsPrefix","horizontal","numbered","controlledProps","BaseNav"],"sourceRoot":""}